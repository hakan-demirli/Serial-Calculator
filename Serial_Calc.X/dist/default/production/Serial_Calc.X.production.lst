

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Feb 05 12:23:02 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           ; Version 1.45
    65                           ; Generated 16/11/2017 GMT
    66                           ; 
    67                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4550 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	smallconst
   100  000800                     __psmallconst:
   101                           	opt stack 0
   102  000800  00                 	db	0
   103  000801                     __powers_:
   104                           	opt stack 0
   105  000801  0000               	dw	0
   106  000803  3F80               	dw	16256
   107  000805  0000               	dw	0
   108  000807  4120               	dw	16672
   109  000809  0000               	dw	0
   110  00080B  42C8               	dw	17096
   111  00080D  0000               	dw	0
   112  00080F  447A               	dw	17530
   113  000811  4000               	dw	16384
   114  000813  461C               	dw	17948
   115  000815  5000               	dw	20480
   116  000817  47C3               	dw	18371
   117  000819  2400               	dw	9216
   118  00081B  4974               	dw	18804
   119  00081D  9680               	dw	38528
   120  00081F  4B18               	dw	19224
   121  000821  BC20               	dw	48160
   122  000823  4CBE               	dw	19646
   123  000825  6B28               	dw	27432
   124  000827  4E6E               	dw	20078
   125  000829  02F9               	dw	761
   126  00082B  5015               	dw	20501
   127  00082D  78EC               	dw	30956
   128  00082F  60AD               	dw	24749
   129  000831  F2CA               	dw	62154
   130  000833  7149               	dw	29001
   131  000835                     __end_of__powers_:
   132                           	opt stack 0
   133  000835                     __npowers_:
   134                           	opt stack 0
   135  000835  0000               	dw	0
   136  000837  3F80               	dw	16256
   137  000839  CCCD               	dw	52429
   138  00083B  3DCC               	dw	15820
   139  00083D  D70A               	dw	55050
   140  00083F  3C23               	dw	15395
   141  000841  126F               	dw	4719
   142  000843  3A83               	dw	14979
   143  000845  B717               	dw	46871
   144  000847  38D1               	dw	14545
   145  000849  C5AC               	dw	50604
   146  00084B  3727               	dw	14119
   147  00084D  37BD               	dw	14269
   148  00084F  3586               	dw	13702
   149  000851  BF95               	dw	49045
   150  000853  33D6               	dw	13270
   151  000855  CC77               	dw	52343
   152  000857  322B               	dw	12843
   153  000859  705F               	dw	28767
   154  00085B  3089               	dw	12425
   155  00085D  E6FF               	dw	59135
   156  00085F  2EDB               	dw	11995
   157  000861  E508               	dw	58632
   158  000863  1E3C               	dw	7740
   159  000865  4260               	dw	16992
   160  000867  0DA2               	dw	3490
   161  000869                     __end_of__npowers_:
   162                           	opt stack 0
   163  000869                     _dpowers:
   164                           	opt stack 0
   165  000869  0001               	dw	1
   166  00086B  0000               	dw	0
   167  00086D  000A               	dw	10
   168  00086F  0000               	dw	0
   169  000871  0064               	dw	100
   170  000873  0000               	dw	0
   171  000875  03E8               	dw	1000
   172  000877  0000               	dw	0
   173  000879  2710               	dw	10000
   174  00087B  0000               	dw	0
   175  00087D  86A0               	dw	34464
   176  00087F  0001               	dw	1
   177  000881  4240               	dw	16960
   178  000883  000F               	dw	15
   179  000885  9680               	dw	38528
   180  000887  0098               	dw	152
   181  000889  E100               	dw	57600
   182  00088B  05F5               	dw	1525
   183  00088D  CA00               	dw	51712
   184  00088F  3B9A               	dw	15258
   185  000891                     __end_of_dpowers:
   186                           	opt stack 0
   187  0000                     _PORTBbits	set	3969
   188  0000                     _INTCONbits	set	4082
   189  0000                     _PIE1bits	set	3997
   190  0000                     _SPBRG	set	4015
   191  0000                     _RCSTAbits	set	4011
   192  0000                     _TRISCbits	set	3988
   193  0000                     _RCREG	set	4014
   194  0000                     _PIR1bits	set	3998
   195  0000                     _PORTD	set	3971
   196  0000                     _PORTDbits	set	3971
   197  0000                     _TRISD	set	3989
   198  0000                     _TRISB	set	3987
   199  0000                     _TXSTAbits	set	4012
   200  0000                     _TXREG	set	4013
   201  0000                     _BRG16	set	32195
   202  000891                     STR_1:
   203  000891  25                 	db	37
   204  000892  66                 	db	102	;'f'
   205  000893  00                 	db	0
   206                           
   207                           ; #config settings
   208  000894  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           	psect	cinit
   211  003A3E                     __pcinit:
   212                           	opt stack 0
   213  003A3E                     start_initialization:
   214                           	opt stack 0
   215  003A3E                     __initialization:
   216                           	opt stack 0
   217                           
   218                           ; Clear objects allocated to BANK1 (28 bytes)
   219  003A3E  EE01  F02D         	lfsr	0,__pbssBANK1
   220  003A42  0E1C               	movlw	28
   221  003A44                     clear_0:
   222  003A44  6AEE               	clrf	postinc0,c
   223  003A46  06E8               	decf	wreg,f,c
   224  003A48  E1FD               	bnz	clear_0
   225                           
   226                           ; Clear objects allocated to BANK0 (60 bytes)
   227  003A4A  EE00  F060         	lfsr	0,__pbssBANK0
   228  003A4E  0E3C               	movlw	60
   229  003A50                     clear_1:
   230  003A50  6AEE               	clrf	postinc0,c
   231  003A52  06E8               	decf	wreg,f,c
   232  003A54  E1FD               	bnz	clear_1
   233                           
   234                           ; Clear objects allocated to COMRAM (3 bytes)
   235  003A56  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   236  003A58  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   237  003A5A  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   238  003A5C                     end_of_initialization:
   239                           	opt stack 0
   240  003A5C                     __end_of__initialization:
   241                           	opt stack 0
   242  003A5C  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   243  003A5E  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   244  003A60  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245  003A62  6EF8               	movwf	tblptru,c
   246  003A64  0100               	movlb	0
   247  003A66  EF00  F01B         	goto	_main	;jump to C main() function
   248                           tblptru	equ	0xFF8
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	bssCOMRAM
   253  00005B                     __pbssCOMRAM:
   254                           	opt stack 0
   255  00005B                     _pass:
   256                           	opt stack 0
   257  00005B                     	ds	1
   258  00005C                     _sequential:
   259                           	opt stack 0
   260  00005C                     	ds	1
   261  00005D                     _flag3:
   262                           	opt stack 0
   263  00005D                     	ds	1
   264                           tblptru	equ	0xFF8
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           
   268                           	psect	bssBANK0
   269  000060                     __pbssBANK0:
   270                           	opt stack 0
   271  000060                     _ttt:
   272                           	opt stack 0
   273  000060                     	ds	25
   274  000079                     _bufferread:
   275                           	opt stack 0
   276  000079                     	ds	12
   277  000085                     _h:
   278                           	opt stack 0
   279  000085                     	ds	12
   280  000091                     _operand2:
   281                           	opt stack 0
   282  000091                     	ds	4
   283  000095                     _operand1:
   284                           	opt stack 0
   285  000095                     	ds	4
   286  000099                     _get_count:
   287                           	opt stack 0
   288  000099                     	ds	1
   289  00009A                     _f_operand_minus:
   290                           	opt stack 0
   291  00009A                     	ds	1
   292  00009B                     _s_operand_minus:
   293                           	opt stack 0
   294  00009B                     	ds	1
   295                           tblptru	equ	0xFF8
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           
   299                           	psect	bssBANK1
   300  00012D                     __pbssBANK1:
   301                           	opt stack 0
   302  00012D                     _proc:
   303                           	opt stack 0
   304  00012D                     	ds	1
   305  00012E                     _flag2:
   306                           	opt stack 0
   307  00012E                     	ds	1
   308  00012F                     _flag1:
   309                           	opt stack 0
   310  00012F                     	ds	1
   311  000130                     _whole:
   312                           	opt stack 0
   313  000130                     	ds	25
   314                           tblptru	equ	0xFF8
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           
   318                           	psect	cstackBANK1
   319  000100                     __pcstackBANK1:
   320                           	opt stack 0
   321  000100                     ??_KeyOther:
   322  000100                     ??_isspace:
   323  000100                     ??_isdigit:
   324  000100                     ??_lcd_lat:
   325  000100                     ?___fldiv:
   326                           	opt stack 0
   327  000100                     ?___flmul:
   328                           	opt stack 0
   329  000100                     ?___lmul:
   330                           	opt stack 0
   331  000100                     ?___flneg:
   332                           	opt stack 0
   333  000100                     ?___xxtofl:
   334                           	opt stack 0
   335  000100                     Send@data:
   336                           	opt stack 0
   337  000100                     ___lmul@multiplier:
   338                           	opt stack 0
   339  000100                     ___flge@ff1:
   340                           	opt stack 0
   341  000100                     ___flneg@f1:
   342                           	opt stack 0
   343  000100                     ___fldiv@b:
   344                           	opt stack 0
   345  000100                     ___flmul@b:
   346                           	opt stack 0
   347  000100                     ___xxtofl@val:
   348                           	opt stack 0
   349                           
   350                           ; 4 bytes @ 0x0
   351  000100                     	ds	1
   352  000101                     ??_lcd_cmd:
   353  000101                     ??_lcd_dwr:
   354  000101                     lcd_cmd_hf@x:
   355                           	opt stack 0
   356  000101                     KeyOther@key:
   357                           	opt stack 0
   358  000101                     _isdigit$887:
   359                           	opt stack 0
   360  000101                     _isspace$890:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x1
   364  000101                     	ds	1
   365  000102                     ??_TaraKey:
   366  000102                     lcd_cmd@x:
   367                           	opt stack 0
   368  000102                     lcd_dwr@x:
   369                           	opt stack 0
   370  000102                     isdigit@c:
   371                           	opt stack 0
   372  000102                     isspace@c:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x2
   376  000102                     	ds	1
   377  000103                     ??_KeyRelease:
   378  000103                     lcd_msg@c:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x3
   382  000103                     	ds	1
   383  000104                     ??___xxtofl:
   384  000104                     KeyRelease@key:
   385                           	opt stack 0
   386  000104                     ___lmul@multiplicand:
   387                           	opt stack 0
   388  000104                     ___flge@ff2:
   389                           	opt stack 0
   390  000104                     ___fldiv@a:
   391                           	opt stack 0
   392  000104                     ___flmul@a:
   393                           	opt stack 0
   394                           
   395                           ; 4 bytes @ 0x4
   396  000104                     	ds	1
   397  000105                     GetKey@key:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x5
   401  000105                     	ds	1
   402  000106                     ??_GetData:
   403                           
   404                           ; 1 bytes @ 0x6
   405  000106                     	ds	2
   406  000108                     ??___fldiv:
   407  000108                     ??___flmul:
   408  000108                     ??___flge:
   409  000108                     ___xxtofl@sign:
   410                           	opt stack 0
   411  000108                     ___lmul@product:
   412                           	opt stack 0
   413                           
   414                           ; 4 bytes @ 0x8
   415  000108                     	ds	1
   416  000109                     ___xxtofl@exp:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x9
   420  000109                     	ds	1
   421  00010A                     ___xxtofl@arg:
   422                           	opt stack 0
   423                           
   424                           ; 4 bytes @ 0xA
   425  00010A                     	ds	1
   426  00010B                     GetData@y:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0xB
   430  00010B                     	ds	1
   431  00010C                     ___fldiv@sign:
   432                           	opt stack 0
   433  00010C                     ___flmul@sign:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0xC
   437  00010C                     	ds	1
   438  00010D                     GetData@j:
   439                           	opt stack 0
   440  00010D                     ___flmul@aexp:
   441                           	opt stack 0
   442  00010D                     ___fldiv@rem:
   443                           	opt stack 0
   444                           
   445                           ; 4 bytes @ 0xD
   446  00010D                     	ds	1
   447  00010E                     ___flmul@grs:
   448                           	opt stack 0
   449                           
   450                           ; 4 bytes @ 0xE
   451  00010E                     	ds	3
   452  000111                     ___fldiv@new_exp:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x11
   456  000111                     	ds	1
   457  000112                     ___flmul@bexp:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x12
   461  000112                     	ds	1
   462  000113                     ___fldiv@grs:
   463                           	opt stack 0
   464  000113                     ___flmul@prod:
   465                           	opt stack 0
   466                           
   467                           ; 4 bytes @ 0x13
   468  000113                     	ds	4
   469  000117                     ___fldiv@bexp:
   470                           	opt stack 0
   471  000117                     ___flmul@temp:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x17
   475  000117                     	ds	1
   476  000118                     ___fldiv@aexp:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x18
   480  000118                     	ds	1
   481  000119                     ?_strtod:
   482                           	opt stack 0
   483  000119                     strtod@s:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x19
   487  000119                     	ds	2
   488  00011B                     strtod@res:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x1B
   492  00011B                     	ds	2
   493  00011D                     ??_strtod:
   494                           
   495                           ; 1 bytes @ 0x1D
   496  00011D                     	ds	1
   497  00011E                     strtod@eexp:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x1E
   501  00011E                     	ds	1
   502  00011F                     strtod@flags:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x1F
   506  00011F                     	ds	1
   507  000120                     strtod@expon:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x20
   511  000120                     	ds	1
   512  000121                     strtod@_u:
   513                           	opt stack 0
   514                           
   515                           ; 4 bytes @ 0x21
   516  000121                     	ds	4
   517  000125                     ?_atof:
   518                           	opt stack 0
   519  000125                     atof@s:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x25
   523  000125                     	ds	4
   524  000129                     main@val:
   525                           	opt stack 0
   526                           
   527                           ; 4 bytes @ 0x29
   528  000129                     	ds	4
   529                           tblptru	equ	0xFF8
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           
   533                           	psect	cstackBANK0
   534  00009C                     __pcstackBANK0:
   535                           	opt stack 0
   536  00009C                     _sprintf$1290:
   537                           	opt stack 0
   538                           
   539                           ; 4 bytes @ 0x0
   540  00009C                     	ds	4
   541  0000A0                     sprintf@ap:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x4
   545  0000A0                     	ds	2
   546  0000A2                     sprintf@flag:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x6
   550  0000A2                     	ds	2
   551  0000A4                     sprintf@prec:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x8
   555  0000A4                     	ds	2
   556  0000A6                     sprintf@val:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0xA
   560  0000A6                     	ds	4
   561  0000AA                     sprintf@exp:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0xE
   565  0000AA                     	ds	2
   566  0000AC                     sprintf@tmpval:
   567                           	opt stack 0
   568                           
   569                           ; 4 bytes @ 0x10
   570  0000AC                     	ds	4
   571  0000B0                     sprintf@fval:
   572                           	opt stack 0
   573                           
   574                           ; 4 bytes @ 0x14
   575  0000B0                     	ds	4
   576  0000B4                     sprintf@c:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x18
   580  0000B4                     	ds	1
   581  0000B5                     ??_ISR:
   582                           
   583                           ; 1 bytes @ 0x19
   584  0000B5                     	ds	18
   585  0000C7                     ISR@arra:
   586                           	opt stack 0
   587                           
   588                           ; 12 bytes @ 0x2B
   589  0000C7                     	ds	12
   590  0000D3                     ISR@a:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x37
   594  0000D3                     	ds	1
   595  0000D4                     ISR@al:
   596                           	opt stack 0
   597                           
   598                           ; 4 bytes @ 0x38
   599  0000D4                     	ds	4
   600                           tblptru	equ	0xFF8
   601                           postinc0	equ	0xFEE
   602                           wreg	equ	0xFE8
   603                           
   604                           	psect	cstackCOMRAM
   605  000001                     __pcstackCOMRAM:
   606                           	opt stack 0
   607  000001                     ??i2_lcd_lat:
   608  000001                     ?___wmul:
   609                           	opt stack 0
   610  000001                     ?___awmod:
   611                           	opt stack 0
   612  000001                     ?__tdiv_to_l_:
   613                           	opt stack 0
   614  000001                     ?__div_to_l_:
   615                           	opt stack 0
   616  000001                     ?___lldiv:
   617                           	opt stack 0
   618  000001                     ?___llmod:
   619                           	opt stack 0
   620  000001                     ?i2___flneg:
   621                           	opt stack 0
   622  000001                     ?i2___xxtofl:
   623                           	opt stack 0
   624  000001                     ___wmul@multiplier:
   625                           	opt stack 0
   626  000001                     ___awmod@dividend:
   627                           	opt stack 0
   628  000001                     __div_to_l_@f1:
   629                           	opt stack 0
   630  000001                     __tdiv_to_l_@f1:
   631                           	opt stack 0
   632  000001                     ___lldiv@dividend:
   633                           	opt stack 0
   634  000001                     ___llmod@dividend:
   635                           	opt stack 0
   636  000001                     i2___flge@ff1:
   637                           	opt stack 0
   638  000001                     i2___flneg@f1:
   639                           	opt stack 0
   640  000001                     i2___xxtofl@val:
   641                           	opt stack 0
   642                           
   643                           ; 4 bytes @ 0x0
   644  000001                     	ds	1
   645  000002                     ??i2_lcd_dwr:
   646                           
   647                           ; 1 bytes @ 0x1
   648  000002                     	ds	1
   649  000003                     i2lcd_dwr@x:
   650                           	opt stack 0
   651  000003                     ___wmul@multiplicand:
   652                           	opt stack 0
   653  000003                     ___awmod@divisor:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x2
   657  000003                     	ds	1
   658  000004                     i2lcd_msg@c:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0x3
   662  000004                     	ds	1
   663  000005                     ??i2___xxtofl:
   664  000005                     ___awmod@counter:
   665                           	opt stack 0
   666  000005                     ___wmul@product:
   667                           	opt stack 0
   668  000005                     __div_to_l_@f2:
   669                           	opt stack 0
   670  000005                     __tdiv_to_l_@f2:
   671                           	opt stack 0
   672  000005                     ___lldiv@divisor:
   673                           	opt stack 0
   674  000005                     ___llmod@divisor:
   675                           	opt stack 0
   676  000005                     i2___flge@ff2:
   677                           	opt stack 0
   678                           
   679                           ; 4 bytes @ 0x4
   680  000005                     	ds	1
   681  000006                     ___awmod@sign:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x5
   685  000006                     	ds	1
   686  000007                     ?___awdiv:
   687                           	opt stack 0
   688  000007                     ___awdiv@dividend:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x6
   692  000007                     	ds	2
   693  000009                     ??__tdiv_to_l_:
   694  000009                     ??i2___flge:
   695  000009                     ___llmod@counter:
   696                           	opt stack 0
   697  000009                     i2___xxtofl@sign:
   698                           	opt stack 0
   699  000009                     ___awdiv@divisor:
   700                           	opt stack 0
   701  000009                     __div_to_l_@quot:
   702                           	opt stack 0
   703  000009                     ___lldiv@quotient:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x8
   707  000009                     	ds	1
   708  00000A                     i2___xxtofl@exp:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x9
   712  00000A                     	ds	1
   713  00000B                     ___awdiv@counter:
   714                           	opt stack 0
   715  00000B                     i2___xxtofl@arg:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0xA
   719  00000B                     	ds	1
   720  00000C                     ___awdiv@sign:
   721                           	opt stack 0
   722  00000C                     __tdiv_to_l_@quot:
   723                           	opt stack 0
   724                           
   725                           ; 4 bytes @ 0xB
   726  00000C                     	ds	1
   727  00000D                     __div_to_l_@cntr:
   728                           	opt stack 0
   729  00000D                     ___lldiv@counter:
   730                           	opt stack 0
   731  00000D                     ___awdiv@quotient:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0xC
   735  00000D                     	ds	1
   736  00000E                     __div_to_l_@exp1:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0xD
   740  00000E                     	ds	1
   741  00000F                     ?i2___flmul:
   742                           	opt stack 0
   743  00000F                     i2___flmul@b:
   744                           	opt stack 0
   745                           
   746                           ; 4 bytes @ 0xE
   747  00000F                     	ds	1
   748  000010                     __tdiv_to_l_@cntr:
   749                           	opt stack 0
   750                           
   751                           ; 1 bytes @ 0xF
   752  000010                     	ds	1
   753  000011                     __tdiv_to_l_@exp1:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x10
   757  000011                     	ds	2
   758  000013                     i2___flmul@a:
   759                           	opt stack 0
   760                           
   761                           ; 4 bytes @ 0x12
   762  000013                     	ds	4
   763  000017                     ??i2___flmul:
   764                           
   765                           ; 1 bytes @ 0x16
   766  000017                     	ds	4
   767  00001B                     i2___flmul@sign:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x1A
   771  00001B                     	ds	1
   772  00001C                     i2___flmul@aexp:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x1B
   776  00001C                     	ds	1
   777  00001D                     i2___flmul@grs:
   778                           	opt stack 0
   779                           
   780                           ; 4 bytes @ 0x1C
   781  00001D                     	ds	4
   782  000021                     i2___flmul@bexp:
   783                           	opt stack 0
   784                           
   785                           ; 1 bytes @ 0x20
   786  000021                     	ds	1
   787  000022                     i2___flmul@prod:
   788                           	opt stack 0
   789                           
   790                           ; 4 bytes @ 0x21
   791  000022                     	ds	4
   792  000026                     i2___flmul@temp:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x25
   796  000026                     	ds	2
   797  000028                     ?_fround:
   798                           	opt stack 0
   799  000028                     ?_scale:
   800                           	opt stack 0
   801                           
   802                           ; 4 bytes @ 0x27
   803  000028                     	ds	4
   804  00002C                     _fround$1288:
   805                           	opt stack 0
   806  00002C                     _scale$1289:
   807                           	opt stack 0
   808                           
   809                           ; 4 bytes @ 0x2B
   810  00002C                     	ds	4
   811  000030                     scale@scl:
   812                           	opt stack 0
   813  000030                     _fround$1287:
   814                           	opt stack 0
   815                           
   816                           ; 4 bytes @ 0x2F
   817  000030                     	ds	1
   818  000031                     ?___fltol:
   819                           	opt stack 0
   820  000031                     ___fltol@f1:
   821                           	opt stack 0
   822                           
   823                           ; 4 bytes @ 0x30
   824  000031                     	ds	3
   825  000034                     fround@prec:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x33
   829  000034                     	ds	1
   830  000035                     ??___fltol:
   831  000035                     ?___fladd:
   832                           	opt stack 0
   833  000035                     ___fladd@b:
   834                           	opt stack 0
   835                           
   836                           ; 4 bytes @ 0x34
   837  000035                     	ds	4
   838  000039                     ___fltol@sign1:
   839                           	opt stack 0
   840  000039                     ___fladd@a:
   841                           	opt stack 0
   842                           
   843                           ; 4 bytes @ 0x38
   844  000039                     	ds	1
   845  00003A                     ___fltol@exp1:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x39
   849  00003A                     	ds	3
   850  00003D                     ??___fladd:
   851                           
   852                           ; 1 bytes @ 0x3C
   853  00003D                     	ds	8
   854  000045                     ___fladd@signs:
   855                           	opt stack 0
   856                           
   857                           ; 1 bytes @ 0x44
   858  000045                     	ds	1
   859  000046                     ___fladd@aexp:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x45
   863  000046                     	ds	1
   864  000047                     ___fladd@bexp:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0x46
   868  000047                     	ds	1
   869  000048                     ___fladd@grs:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x47
   873  000048                     	ds	1
   874  000049                     ?___flsub:
   875                           	opt stack 0
   876  000049                     ___flsub@b:
   877                           	opt stack 0
   878                           
   879                           ; 4 bytes @ 0x48
   880  000049                     	ds	4
   881  00004D                     ___flsub@a:
   882                           	opt stack 0
   883                           
   884                           ; 4 bytes @ 0x4C
   885  00004D                     	ds	4
   886  000051                     ?_sprintf:
   887                           	opt stack 0
   888  000051                     sprintf@sp:
   889                           	opt stack 0
   890                           
   891                           ; 2 bytes @ 0x50
   892  000051                     	ds	2
   893  000053                     sprintf@f:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x52
   897  000053                     	ds	6
   898  000059                     ??_sprintf:
   899                           
   900                           ; 1 bytes @ 0x58
   901  000059                     	ds	2
   902                           tblptru	equ	0xFF8
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           
   906 ;;
   907 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   908 ;;
   909 ;; *************** function _main *****************
   910 ;; Defined at:
   911 ;;		line 75 in file "main.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  val             4   41[BANK1 ] struct .
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   925 ;;      Params:         0       0       0       0       0       0       0       0       0
   926 ;;      Locals:         0       0       4       0       0       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0       0       0       0       0
   928 ;;      Totals:         0       0       4       0       0       0       0       0       0
   929 ;;Total ram usage:        4 bytes
   930 ;; Hardware stack levels required when called:    9
   931 ;; This function calls:
   932 ;;		_GetData
   933 ;;		_GetKey
   934 ;;		_Send
   935 ;;		_UART_Init
   936 ;;		_atof
   937 ;;		_lcd_cmd
   938 ;;		_lcd_init
   939 ;;		_lcd_reset
   940 ;; This function is called by:
   941 ;;		Startup code after reset
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text0
   946  003600                     __ptext0:
   947                           	opt stack 0
   948  003600                     _main:
   949                           	opt stack 22
   950                           
   951                           ;main.c: 78: TRISB = 0b11110000;
   952                           
   953                           ;incstack = 0
   954  003600  0EF0               	movlw	240
   955  003602  6E93               	movwf	3987,c	;volatile
   956                           
   957                           ;main.c: 79: TRISD = 0x00;
   958  003604  0E00               	movlw	0
   959  003606  6E95               	movwf	3989,c	;volatile
   960                           
   961                           ;main.c: 80: lcd_init();
   962  003608  EC35  F01D         	call	_lcd_init	;wreg free
   963                           
   964                           ;main.c: 81: lcd_cmd(0x0F);
   965  00360C  0E0F               	movlw	15
   966  00360E  ECA9  F01C         	call	_lcd_cmd
   967                           
   968                           ;main.c: 83: UART_Init();
   969  003612  ECD2  F01D         	call	_UART_Init	;wreg free
   970  003616                     
   971                           ;main.c: 88: GetData();
   972  003616  EC5F  F013         	call	_GetData	;wreg free
   973                           
   974                           ;main.c: 90: val.FV = atof(whole);
   975  00361A  0E30               	movlw	low _whole
   976  00361C  0101               	movlb	1	; () banked
   977  00361E  6F25               	movwf	atof@s& (0+255),b
   978  003620  0E01               	movlw	high _whole
   979  003622  6F26               	movwf	(atof@s+1)& (0+255),b
   980  003624  EC75  F01D         	call	_atof	;wreg free
   981  003628  C125  F129         	movff	?_atof,main@val
   982  00362C  C126  F12A         	movff	?_atof+1,main@val+1
   983  003630  C127  F12B         	movff	?_atof+2,main@val+2
   984  003634  C128  F12C         	movff	?_atof+3,main@val+3
   985                           
   986                           ;main.c: 91: Send(0xAA);
   987  003638  0EAA               	movlw	170
   988  00363A  EC16  F01E         	call	_Send
   989                           
   990                           ;main.c: 92: Send(0xFF);
   991  00363E  0EFF               	movlw	255
   992  003640  EC16  F01E         	call	_Send
   993                           
   994                           ;main.c: 93: Send(val.B0);
   995  003644  0101               	movlb	1	; () banked
   996  003646  5129               	movf	main@val& (0+255),w,b
   997  003648  EC16  F01E         	call	_Send
   998                           
   999                           ;main.c: 94: Send(val.B1);
  1000  00364C  0101               	movlb	1	; () banked
  1001  00364E  512A               	movf	(main@val+1)& (0+255),w,b
  1002  003650  EC16  F01E         	call	_Send
  1003                           
  1004                           ;main.c: 95: Send(val.B2);
  1005  003654  0101               	movlb	1	; () banked
  1006  003656  512B               	movf	(main@val+2)& (0+255),w,b
  1007  003658  EC16  F01E         	call	_Send
  1008                           
  1009                           ;main.c: 96: Send(val.B3);
  1010  00365C  0101               	movlb	1	; () banked
  1011  00365E  512C               	movf	(main@val+3)& (0+255),w,b
  1012  003660  EC16  F01E         	call	_Send
  1013                           
  1014                           ;main.c: 98: GetData();
  1015  003664  EC5F  F013         	call	_GetData	;wreg free
  1016                           
  1017                           ;main.c: 100: val.FV = atof(whole);
  1018  003668  0E30               	movlw	low _whole
  1019  00366A  0101               	movlb	1	; () banked
  1020  00366C  6F25               	movwf	atof@s& (0+255),b
  1021  00366E  0E01               	movlw	high _whole
  1022  003670  6F26               	movwf	(atof@s+1)& (0+255),b
  1023  003672  EC75  F01D         	call	_atof	;wreg free
  1024  003676  C125  F129         	movff	?_atof,main@val
  1025  00367A  C126  F12A         	movff	?_atof+1,main@val+1
  1026  00367E  C127  F12B         	movff	?_atof+2,main@val+2
  1027  003682  C128  F12C         	movff	?_atof+3,main@val+3
  1028                           
  1029                           ;main.c: 101: Send(val.B0);
  1030  003686  0101               	movlb	1	; () banked
  1031  003688  5129               	movf	main@val& (0+255),w,b
  1032  00368A  EC16  F01E         	call	_Send
  1033                           
  1034                           ;main.c: 102: Send(val.B1);
  1035  00368E  0101               	movlb	1	; () banked
  1036  003690  512A               	movf	(main@val+1)& (0+255),w,b
  1037  003692  EC16  F01E         	call	_Send
  1038                           
  1039                           ;main.c: 103: Send(val.B2);
  1040  003696  0101               	movlb	1	; () banked
  1041  003698  512B               	movf	(main@val+2)& (0+255),w,b
  1042  00369A  EC16  F01E         	call	_Send
  1043                           
  1044                           ;main.c: 104: Send(val.B3);
  1045  00369E  0101               	movlb	1	; () banked
  1046  0036A0  512C               	movf	(main@val+3)& (0+255),w,b
  1047  0036A2  EC16  F01E         	call	_Send
  1048                           
  1049                           ;main.c: 106: Send(proc[0]);
  1050  0036A6  0101               	movlb	1	; () banked
  1051  0036A8  512D               	movf	_proc& (0+255),w,b
  1052  0036AA  EC16  F01E         	call	_Send
  1053                           
  1054                           ;main.c: 108: flag1 = GetKey();
  1055  0036AE  ECF9  F01D         	call	_GetKey	;wreg free
  1056  0036B2  0101               	movlb	1	; () banked
  1057  0036B4  6F2F               	movwf	_flag1& (0+255),b
  1058                           
  1059                           ; BSR set to: 1
  1060                           ;main.c: 109: lcd_reset();
  1061  0036B6  EC0F  F01E         	call	_lcd_reset	;wreg free
  1062                           
  1063                           ;main.c: 110: flag1 = 0;
  1064  0036BA  0E00               	movlw	0
  1065  0036BC  0101               	movlb	1	; () banked
  1066  0036BE  6F2F               	movwf	_flag1& (0+255),b
  1067                           
  1068                           ;main.c: 111: flag2 = 0;
  1069  0036C0  0E00               	movlw	0
  1070  0036C2  6F2E               	movwf	_flag2& (0+255),b
  1071                           
  1072                           ;main.c: 112: proc[0] = 0;
  1073  0036C4  0E00               	movlw	0
  1074  0036C6  6F2D               	movwf	_proc& (0+255),b
  1075                           
  1076                           ;main.c: 113: s_operand_minus = 0;
  1077  0036C8  0E00               	movlw	0
  1078  0036CA  0100               	movlb	0	; () banked
  1079  0036CC  6F9B               	movwf	_s_operand_minus& (0+255),b
  1080                           
  1081                           ;main.c: 114: f_operand_minus = 0;
  1082  0036CE  0E00               	movlw	0
  1083  0036D0  6F9A               	movwf	_f_operand_minus& (0+255),b
  1084                           
  1085                           ;main.c: 115: get_count = 0;
  1086  0036D2  0E00               	movlw	0
  1087  0036D4  6F99               	movwf	_get_count& (0+255),b
  1088                           
  1089                           ; BSR set to: 0
  1090  0036D6  D79F               	goto	l95
  1091  0036D8                     __end_of_main:
  1092                           	opt stack 0
  1093                           tblptru	equ	0xFF8
  1094                           postinc0	equ	0xFEE
  1095                           wreg	equ	0xFE8
  1096                           
  1097 ;; *************** function _lcd_reset *****************
  1098 ;; Defined at:
  1099 ;;		line 149 in file "main.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1116 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1117 ;;Total ram usage:        0 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    6
  1120 ;; This function calls:
  1121 ;;		_lcd_cmd
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text1
  1128  003C1E                     __ptext1:
  1129                           	opt stack 0
  1130  003C1E                     _lcd_reset:
  1131                           	opt stack 24
  1132                           
  1133                           ;main.c: 151: lcd_cmd(0x01);
  1134                           
  1135                           ; BSR set to: 0
  1136                           ;incstack = 0
  1137  003C1E  0E01               	movlw	1
  1138  003C20  ECA9  F01C         	call	_lcd_cmd
  1139                           
  1140                           ;main.c: 152: lcd_cmd(0x02);
  1141  003C24  0E02               	movlw	2
  1142  003C26  ECA9  F01C         	call	_lcd_cmd
  1143  003C2A  0012               	return		;funcret
  1144  003C2C                     __end_of_lcd_reset:
  1145                           	opt stack 0
  1146                           tblptru	equ	0xFF8
  1147                           postinc0	equ	0xFEE
  1148                           wreg	equ	0xFE8
  1149                           
  1150 ;; *************** function _lcd_init *****************
  1151 ;; Defined at:
  1152 ;;		line 206 in file "main.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1166 ;;      Params:         0       0       0       0       0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1169 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    6
  1173 ;; This function calls:
  1174 ;;		_lcd_cmd
  1175 ;;		_lcd_cmd_hf
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text2
  1182  003A6A                     __ptext2:
  1183                           	opt stack 0
  1184  003A6A                     _lcd_init:
  1185                           	opt stack 24
  1186                           
  1187                           ;main.c: 208: lcd_cmd_hf(0x30);
  1188                           
  1189                           ;incstack = 0
  1190  003A6A  0E30               	movlw	48
  1191  003A6C  ECE2  F01D         	call	_lcd_cmd_hf
  1192                           
  1193                           ;main.c: 209: lcd_cmd_hf(0x20);
  1194  003A70  0E20               	movlw	32
  1195  003A72  ECE2  F01D         	call	_lcd_cmd_hf
  1196                           
  1197                           ;main.c: 210: lcd_cmd(0x28);
  1198  003A76  0E28               	movlw	40
  1199  003A78  ECA9  F01C         	call	_lcd_cmd
  1200                           
  1201                           ;main.c: 211: lcd_cmd(0x0E);
  1202  003A7C  0E0E               	movlw	14
  1203  003A7E  ECA9  F01C         	call	_lcd_cmd
  1204                           
  1205                           ;main.c: 212: lcd_cmd(0x01);
  1206  003A82  0E01               	movlw	1
  1207  003A84  ECA9  F01C         	call	_lcd_cmd
  1208                           
  1209                           ;main.c: 213: lcd_cmd(0x06);
  1210  003A88  0E06               	movlw	6
  1211  003A8A  ECA9  F01C         	call	_lcd_cmd
  1212                           
  1213                           ;main.c: 214: lcd_cmd(0x80);
  1214  003A8E  0E80               	movlw	128
  1215  003A90  ECA9  F01C         	call	_lcd_cmd
  1216  003A94  0012               	return		;funcret
  1217  003A96                     __end_of_lcd_init:
  1218                           	opt stack 0
  1219                           tblptru	equ	0xFF8
  1220                           postinc0	equ	0xFEE
  1221                           wreg	equ	0xFE8
  1222                           
  1223 ;; *************** function _lcd_cmd_hf *****************
  1224 ;; Defined at:
  1225 ;;		line 176 in file "main.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  x               1    wreg     unsigned char 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  x               1    1[BANK1 ] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1239 ;;      Params:         0       0       0       0       0       0       0       0       0
  1240 ;;      Locals:         0       0       1       0       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1242 ;;      Totals:         0       0       1       0       0       0       0       0       0
  1243 ;;Total ram usage:        1 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    5
  1246 ;; This function calls:
  1247 ;;		_lcd_lat
  1248 ;; This function is called by:
  1249 ;;		_lcd_init
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text3
  1254  003BC4                     __ptext3:
  1255                           	opt stack 0
  1256  003BC4                     _lcd_cmd_hf:
  1257                           	opt stack 24
  1258                           
  1259                           ;incstack = 0
  1260                           ;lcd_cmd_hf@x stored from wreg
  1261  003BC4  0101               	movlb	1	; () banked
  1262  003BC6  6F01               	movwf	lcd_cmd_hf@x& (0+255),b
  1263                           
  1264                           ;main.c: 178: PORTDbits.RD0 = 0 ;
  1265  003BC8  9083               	bcf	3971,0,c	;volatile
  1266                           
  1267                           ;main.c: 179: PORTD &= 0x0F;
  1268  003BCA  0E0F               	movlw	15
  1269  003BCC  1683               	andwf	3971,f,c	;volatile
  1270                           
  1271                           ;main.c: 180: PORTD |= (x & 0xF0);
  1272  003BCE  0101               	movlb	1	; () banked
  1273  003BD0  5101               	movf	lcd_cmd_hf@x& (0+255),w,b
  1274  003BD2  0BF0               	andlw	240
  1275  003BD4  1283               	iorwf	3971,f,c	;volatile
  1276                           
  1277                           ; BSR set to: 1
  1278                           ;main.c: 181: lcd_lat();
  1279  003BD6  ECEE  F01D         	call	_lcd_lat	;wreg free
  1280  003BDA  0012               	return		;funcret
  1281  003BDC                     __end_of_lcd_cmd_hf:
  1282                           	opt stack 0
  1283                           tblptru	equ	0xFF8
  1284                           postinc0	equ	0xFEE
  1285                           wreg	equ	0xFE8
  1286                           
  1287 ;; *************** function _lcd_cmd *****************
  1288 ;; Defined at:
  1289 ;;		line 163 in file "main.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;  x               1    wreg     unsigned char 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  x               1    2[BANK1 ] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0
  1304 ;;      Locals:         0       0       1       0       0       0       0       0       0
  1305 ;;      Temps:          0       0       1       0       0       0       0       0       0
  1306 ;;      Totals:         0       0       2       0       0       0       0       0       0
  1307 ;;Total ram usage:        2 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    5
  1310 ;; This function calls:
  1311 ;;		_lcd_lat
  1312 ;; This function is called by:
  1313 ;;		_main
  1314 ;;		_lcd_reset
  1315 ;;		_lcd_init
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text4
  1320  003952                     __ptext4:
  1321                           	opt stack 0
  1322  003952                     _lcd_cmd:
  1323                           	opt stack 24
  1324                           
  1325                           ;incstack = 0
  1326                           ;lcd_cmd@x stored from wreg
  1327  003952  0101               	movlb	1	; () banked
  1328  003954  6F02               	movwf	lcd_cmd@x& (0+255),b
  1329                           
  1330                           ;main.c: 165: PORTDbits.RD0 = 0 ;
  1331  003956  9083               	bcf	3971,0,c	;volatile
  1332                           
  1333                           ;main.c: 166: PORTD &= 0x0F;
  1334  003958  0E0F               	movlw	15
  1335  00395A  1683               	andwf	3971,f,c	;volatile
  1336                           
  1337                           ;main.c: 167: PORTD |= (x & 0xF0);
  1338  00395C  0101               	movlb	1	; () banked
  1339  00395E  5102               	movf	lcd_cmd@x& (0+255),w,b
  1340  003960  0BF0               	andlw	240
  1341  003962  1283               	iorwf	3971,f,c	;volatile
  1342                           
  1343                           ; BSR set to: 1
  1344                           ;main.c: 168: lcd_lat();
  1345  003964  ECEE  F01D         	call	_lcd_lat	;wreg free
  1346                           
  1347                           ;main.c: 170: PORTD &= 0x0F;
  1348  003968  0E0F               	movlw	15
  1349  00396A  1683               	andwf	3971,f,c	;volatile
  1350                           
  1351                           ;main.c: 171: PORTD |= ((x & 0x0F) << 4);
  1352  00396C  C102  F101         	movff	lcd_cmd@x,??_lcd_cmd
  1353  003970  0E0F               	movlw	15
  1354  003972  0101               	movlb	1	; () banked
  1355  003974  1701               	andwf	??_lcd_cmd& (0+255),f,b
  1356  003976  3901               	swapf	??_lcd_cmd& (0+255),w,b
  1357  003978  0BF0               	andlw	240
  1358  00397A  1283               	iorwf	3971,f,c	;volatile
  1359                           
  1360                           ; BSR set to: 1
  1361                           ;main.c: 172: lcd_lat();
  1362  00397C  ECEE  F01D         	call	_lcd_lat	;wreg free
  1363  003980  0012               	return		;funcret
  1364  003982                     __end_of_lcd_cmd:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           
  1370 ;; *************** function _atof *****************
  1371 ;; Defined at:
  1372 ;;		line 200 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atof.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  s               2   37[BANK1 ] PTR const unsigned char 
  1375 ;;		 -> whole(25), 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  4   37[BANK1 ] PTR const unsigned char 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1387 ;;      Params:         0       0       4       0       0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1390 ;;      Totals:         0       0       4       0       0       0       0       0       0
  1391 ;;Total ram usage:        4 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    6
  1394 ;; This function calls:
  1395 ;;		_strtod
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text5
  1402  003AEA                     __ptext5:
  1403                           	opt stack 0
  1404  003AEA                     _atof:
  1405                           	opt stack 24
  1406                           
  1407                           ;incstack = 0
  1408  003AEA  C125  F119         	movff	atof@s,strtod@s
  1409  003AEE  C126  F11A         	movff	atof@s+1,strtod@s+1
  1410  003AF2  0E00               	movlw	0
  1411  003AF4  0101               	movlb	1	; () banked
  1412  003AF6  6F1B               	movwf	strtod@res& (0+255),b
  1413  003AF8  0E00               	movlw	0
  1414  003AFA  6F1C               	movwf	(strtod@res+1)& (0+255),b
  1415  003AFC  EC8D  F007         	call	_strtod	;wreg free
  1416  003B00  C119  F125         	movff	?_strtod,?_atof
  1417  003B04  C11A  F126         	movff	?_strtod+1,?_atof+1
  1418  003B08  C11B  F127         	movff	?_strtod+2,?_atof+2
  1419  003B0C  C11C  F128         	movff	?_strtod+3,?_atof+3
  1420  003B10  0012               	return	
  1421  003B12                     __end_of_atof:
  1422                           	opt stack 0
  1423                           tblptru	equ	0xFF8
  1424                           postinc0	equ	0xFEE
  1425                           wreg	equ	0xFE8
  1426                           
  1427 ;; *************** function _strtod *****************
  1428 ;; Defined at:
  1429 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atof.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  s               2   25[BANK1 ] PTR const unsigned char 
  1432 ;;		 -> whole(25), 
  1433 ;;  res             2   27[BANK1 ] PTR PTR const unsigned c
  1434 ;;		 -> NULL(0), 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  _u              4   33[BANK1 ] struct .
  1437 ;;  expon           1   32[BANK1 ] char 
  1438 ;;  flags           1   31[BANK1 ] unsigned char 
  1439 ;;  eexp            1   30[BANK1 ] char 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  4   25[BANK1 ] char 
  1442 ;; Registers used:
  1443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1449 ;;      Params:         0       0       4       0       0       0       0       0       0
  1450 ;;      Locals:         0       0       7       0       0       0       0       0       0
  1451 ;;      Temps:          0       0       1       0       0       0       0       0       0
  1452 ;;      Totals:         0       0      12       0       0       0       0       0       0
  1453 ;;Total ram usage:       12 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    5
  1456 ;; This function calls:
  1457 ;;		___fldiv
  1458 ;;		___flge
  1459 ;;		___flmul
  1460 ;;		___flneg
  1461 ;;		___lmul
  1462 ;;		___xxtofl
  1463 ;;		_isdigit
  1464 ;;		_isspace
  1465 ;; This function is called by:
  1466 ;;		_atof
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text6
  1471  000F1A                     __ptext6:
  1472                           	opt stack 0
  1473  000F1A                     _strtod:
  1474                           	opt stack 24
  1475                           
  1476                           ;incstack = 0
  1477  000F1A  0101               	movlb	1	; () banked
  1478  000F1C  511B               	movf	strtod@res& (0+255),w,b
  1479  000F1E  111C               	iorwf	(strtod@res+1)& (0+255),w,b
  1480  000F20  B4D8               	btfsc	status,2,c
  1481  000F22  D00C               	goto	l450
  1482                           
  1483                           ; BSR set to: 1
  1484  000F24  C11B  FFD9         	movff	strtod@res,fsr2l
  1485  000F28  C11C  FFDA         	movff	strtod@res+1,fsr2h
  1486  000F2C  C119  FFDE         	movff	strtod@s,postinc2
  1487  000F30  C11A  FFDD         	movff	strtod@s+1,postdec2
  1488                           
  1489                           ; BSR set to: 1
  1490  000F34  D003               	goto	l450
  1491  000F36                     
  1492                           ; BSR set to: 1
  1493  000F36  0101               	movlb	1	; () banked
  1494  000F38  4B19               	infsnz	strtod@s& (0+255),f,b
  1495  000F3A  2B1A               	incf	(strtod@s+1)& (0+255),f,b
  1496  000F3C                     l450:
  1497                           
  1498                           ; BSR set to: 1
  1499                           
  1500                           ; BSR set to: 1
  1501  000F3C  C119  FFD9         	movff	strtod@s,fsr2l
  1502  000F40  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1503  000F44  50DF               	movf	indf2,w,c
  1504  000F46  6F1E               	movwf	strtod@eexp& (0+255),b
  1505  000F48  511E               	movf	strtod@eexp& (0+255),w,b
  1506  000F4A  EC4B  F01D         	call	_isspace
  1507  000F4E  B0D8               	btfsc	status,0,c
  1508  000F50  D7F2               	goto	l451
  1509  000F52  0E00               	movlw	0
  1510  000F54  0101               	movlb	1	; () banked
  1511  000F56  6F1F               	movwf	strtod@flags& (0+255),b
  1512                           
  1513                           ; BSR set to: 1
  1514  000F58  0E2D               	movlw	45
  1515  000F5A  191E               	xorwf	strtod@eexp& (0+255),w,b
  1516  000F5C  A4D8               	btfss	status,2,c
  1517  000F5E  D003               	goto	l453
  1518                           
  1519                           ; BSR set to: 1
  1520  000F60  0E01               	movlw	1
  1521  000F62  6F1F               	movwf	strtod@flags& (0+255),b
  1522  000F64  D004               	goto	u7870
  1523  000F66                     l453:
  1524                           
  1525                           ; BSR set to: 1
  1526                           
  1527                           ; BSR set to: 1
  1528  000F66  0E2B               	movlw	43
  1529  000F68  191E               	xorwf	strtod@eexp& (0+255),w,b
  1530  000F6A  A4D8               	btfss	status,2,c
  1531  000F6C  D002               	goto	l455
  1532  000F6E                     u7870:
  1533                           
  1534                           ; BSR set to: 1
  1535  000F6E  4B19               	infsnz	strtod@s& (0+255),f,b
  1536  000F70  2B1A               	incf	(strtod@s+1)& (0+255),f,b
  1537  000F72                     l455:
  1538                           
  1539                           ; BSR set to: 1
  1540                           
  1541                           ; BSR set to: 1
  1542                           
  1543                           ; BSR set to: 1
  1544  000F72  0E00               	movlw	0
  1545  000F74  6F1E               	movwf	strtod@eexp& (0+255),b
  1546                           
  1547                           ; BSR set to: 1
  1548  000F76  0E00               	movlw	0
  1549  000F78  6F21               	movwf	strtod@_u& (0+255),b
  1550  000F7A  0E00               	movlw	0
  1551  000F7C  6F22               	movwf	(strtod@_u+1)& (0+255),b
  1552  000F7E  0E00               	movlw	0
  1553  000F80  6F23               	movwf	(strtod@_u+2)& (0+255),b
  1554  000F82  0E00               	movlw	0
  1555  000F84  6F24               	movwf	(strtod@_u+3)& (0+255),b
  1556                           
  1557                           ; BSR set to: 1
  1558  000F86  0E00               	movlw	0
  1559  000F88  6F20               	movwf	strtod@expon& (0+255),b
  1560  000F8A                     
  1561                           ; BSR set to: 1
  1562                           
  1563                           ; BSR set to: 1
  1564  000F8A  B91F               	btfsc	strtod@flags& (0+255),4,b
  1565  000F8C  D00A               	goto	l457
  1566                           
  1567                           ; BSR set to: 1
  1568  000F8E  C119  FFD9         	movff	strtod@s,fsr2l
  1569  000F92  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1570  000F96  0E2E               	movlw	46
  1571  000F98  18DE               	xorwf	postinc2,w,c
  1572  000F9A  A4D8               	btfss	status,2,c
  1573  000F9C  D002               	goto	l457
  1574                           
  1575                           ; BSR set to: 1
  1576  000F9E  891F               	bsf	strtod@flags& (0+255),4,b
  1577  000FA0  D03E               	goto	l464
  1578  000FA2                     l457:
  1579                           
  1580                           ; BSR set to: 1
  1581                           
  1582                           ; BSR set to: 1
  1583  000FA2  C119  FFD9         	movff	strtod@s,fsr2l
  1584  000FA6  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1585  000FAA  50DF               	movf	indf2,w,c
  1586  000FAC  ECC1  F01D         	call	_isdigit
  1587  000FB0  A0D8               	btfss	status,0,c
  1588  000FB2  D038               	goto	l460
  1589  000FB4  0101               	movlb	1	; () banked
  1590  000FB6  831F               	bsf	strtod@flags& (0+255),1,b
  1591                           
  1592                           ; BSR set to: 1
  1593  000FB8  0E09               	movlw	9
  1594  000FBA  191E               	xorwf	strtod@eexp& (0+255),w,b
  1595  000FBC  B4D8               	btfsc	status,2,c
  1596  000FBE  D02D               	goto	l461
  1597                           
  1598                           ; BSR set to: 1
  1599  000FC0  B91F               	btfsc	strtod@flags& (0+255),4,b
  1600                           
  1601                           ; BSR set to: 1
  1602  000FC2  0720               	decf	strtod@expon& (0+255),f,b
  1603                           
  1604                           ; BSR set to: 1
  1605  000FC4  2B1E               	incf	strtod@eexp& (0+255),f,b
  1606                           
  1607                           ; BSR set to: 1
  1608  000FC6  C121  F100         	movff	strtod@_u,___lmul@multiplier
  1609  000FCA  C122  F101         	movff	strtod@_u+1,___lmul@multiplier+1
  1610  000FCE  C123  F102         	movff	strtod@_u+2,___lmul@multiplier+2
  1611  000FD2  C124  F103         	movff	strtod@_u+3,___lmul@multiplier+3
  1612  000FD6  0E0A               	movlw	10
  1613  000FD8  6F04               	movwf	___lmul@multiplicand& (0+255),b
  1614  000FDA  0E00               	movlw	0
  1615  000FDC  6F05               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1616  000FDE  0E00               	movlw	0
  1617  000FE0  6F06               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1618  000FE2  0E00               	movlw	0
  1619  000FE4  6F07               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1620  000FE6  EC5A  F01C         	call	___lmul	;wreg free
  1621  000FEA  C100  F121         	movff	?___lmul,strtod@_u
  1622  000FEE  C101  F122         	movff	?___lmul+1,strtod@_u+1
  1623  000FF2  C102  F123         	movff	?___lmul+2,strtod@_u+2
  1624  000FF6  C103  F124         	movff	?___lmul+3,strtod@_u+3
  1625  000FFA  C119  FFD9         	movff	strtod@s,fsr2l
  1626  000FFE  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1627  001002  50DF               	movf	indf2,w,c
  1628  001004  0101               	movlb	1	; () banked
  1629  001006  6F1D               	movwf	??_strtod& (0+255),b
  1630  001008  0ED0               	movlw	208
  1631  00100A  271D               	addwf	??_strtod& (0+255),f,b
  1632  00100C  511D               	movf	??_strtod& (0+255),w,b
  1633  00100E  2721               	addwf	strtod@_u& (0+255),f,b
  1634  001010  0E00               	movlw	0
  1635  001012  2322               	addwfc	(strtod@_u+1)& (0+255),f,b
  1636  001014  2323               	addwfc	(strtod@_u+2)& (0+255),f,b
  1637  001016  2324               	addwfc	(strtod@_u+3)& (0+255),f,b
  1638  001018  D002               	goto	l464
  1639  00101A                     l461:
  1640                           
  1641                           ; BSR set to: 1
  1642  00101A  A91F               	btfss	strtod@flags& (0+255),4,b
  1643                           
  1644                           ; BSR set to: 1
  1645  00101C  2B20               	incf	strtod@expon& (0+255),f,b
  1646  00101E                     l464:
  1647                           
  1648                           ; BSR set to: 1
  1649                           
  1650                           ; BSR set to: 1
  1651  00101E  4B19               	infsnz	strtod@s& (0+255),f,b
  1652  001020  2B1A               	incf	(strtod@s+1)& (0+255),f,b
  1653                           
  1654                           ; BSR set to: 1
  1655  001022  D7B3               	goto	l456
  1656  001024                     l460:
  1657                           
  1658                           ; BSR set to: 1
  1659  001024  0E00               	movlw	0
  1660  001026  0101               	movlb	1	; () banked
  1661  001028  6F1E               	movwf	strtod@eexp& (0+255),b
  1662                           
  1663                           ; BSR set to: 1
  1664  00102A  C119  FFD9         	movff	strtod@s,fsr2l
  1665  00102E  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1666  001032  0E65               	movlw	101
  1667  001034  18DE               	xorwf	postinc2,w,c
  1668  001036  B4D8               	btfsc	status,2,c
  1669  001038  D008               	goto	u7950
  1670                           
  1671                           ; BSR set to: 1
  1672  00103A  C119  FFD9         	movff	strtod@s,fsr2l
  1673  00103E  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1674  001042  0E45               	movlw	69
  1675  001044  18DE               	xorwf	postinc2,w,c
  1676  001046  A4D8               	btfss	status,2,c
  1677  001048  D062               	goto	l477
  1678  00104A                     u7950:
  1679                           
  1680                           ; BSR set to: 1
  1681                           
  1682                           ; BSR set to: 1
  1683  00104A  4B19               	infsnz	strtod@s& (0+255),f,b
  1684  00104C  2B1A               	incf	(strtod@s+1)& (0+255),f,b
  1685  00104E  C119  FFD9         	movff	strtod@s,fsr2l
  1686  001052  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1687  001056  0E2D               	movlw	45
  1688  001058  18DE               	xorwf	postinc2,w,c
  1689  00105A  A4D8               	btfss	status,2,c
  1690  00105C  D002               	goto	l468
  1691                           
  1692                           ; BSR set to: 1
  1693  00105E  871F               	bsf	strtod@flags& (0+255),3,b
  1694  001060  D008               	goto	u7970
  1695  001062                     l468:
  1696                           
  1697                           ; BSR set to: 1
  1698                           
  1699                           ; BSR set to: 1
  1700  001062  C119  FFD9         	movff	strtod@s,fsr2l
  1701  001066  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1702  00106A  0E2B               	movlw	43
  1703  00106C  18DE               	xorwf	postinc2,w,c
  1704  00106E  A4D8               	btfss	status,2,c
  1705  001070  D002               	goto	l471
  1706  001072                     u7970:
  1707                           
  1708                           ; BSR set to: 1
  1709                           
  1710                           ; BSR set to: 1
  1711                           
  1712                           ; BSR set to: 1
  1713                           
  1714                           ; BSR set to: 1
  1715                           
  1716                           ; BSR set to: 1
  1717  001072  4B19               	infsnz	strtod@s& (0+255),f,b
  1718  001074  2B1A               	incf	(strtod@s+1)& (0+255),f,b
  1719  001076                     l471:
  1720                           
  1721                           ; BSR set to: 1
  1722                           
  1723                           ; BSR set to: 1
  1724  001076  C119  FFD9         	movff	strtod@s,fsr2l
  1725  00107A  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1726  00107E  0E30               	movlw	48
  1727  001080  18DE               	xorwf	postinc2,w,c
  1728  001082  B4D8               	btfsc	status,2,c
  1729  001084  D7F6               	goto	u7970
  1730                           
  1731                           ; BSR set to: 1
  1732                           
  1733                           ; BSR set to: 1
  1734  001086  C119  FFD9         	movff	strtod@s,fsr2l
  1735  00108A  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1736  00108E  50DF               	movf	indf2,w,c
  1737  001090  ECC1  F01D         	call	_isdigit
  1738  001094  A0D8               	btfss	status,0,c
  1739  001096  D038               	goto	l476
  1740  001098  C119  FFD9         	movff	strtod@s,fsr2l
  1741  00109C  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1742  0010A0  50DF               	movf	indf2,w,c
  1743  0010A2  0FD0               	addlw	208
  1744  0010A4  0101               	movlb	1	; () banked
  1745  0010A6  6F1E               	movwf	strtod@eexp& (0+255),b
  1746                           
  1747                           ; BSR set to: 1
  1748  0010A8  4B19               	infsnz	strtod@s& (0+255),f,b
  1749  0010AA  2B1A               	incf	(strtod@s+1)& (0+255),f,b
  1750                           
  1751                           ; BSR set to: 1
  1752  0010AC  C119  FFD9         	movff	strtod@s,fsr2l
  1753  0010B0  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1754  0010B4  50DF               	movf	indf2,w,c
  1755  0010B6  ECC1  F01D         	call	_isdigit
  1756  0010BA  A0D8               	btfss	status,0,c
  1757  0010BC  D025               	goto	l476
  1758  0010BE  C119  FFD9         	movff	strtod@s,fsr2l
  1759  0010C2  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1760  0010C6  50DF               	movf	indf2,w,c
  1761  0010C8  0101               	movlb	1	; () banked
  1762  0010CA  6F1D               	movwf	??_strtod& (0+255),b
  1763  0010CC  511E               	movf	strtod@eexp& (0+255),w,b
  1764  0010CE  0D0A               	mullw	10
  1765  0010D0  50F3               	movf	prodl,w,c
  1766  0010D2  251D               	addwf	??_strtod& (0+255),w,b
  1767  0010D4  0FD0               	addlw	208
  1768  0010D6  6F1E               	movwf	strtod@eexp& (0+255),b
  1769                           
  1770                           ; BSR set to: 1
  1771  0010D8  4B19               	infsnz	strtod@s& (0+255),f,b
  1772  0010DA  2B1A               	incf	(strtod@s+1)& (0+255),f,b
  1773                           
  1774                           ; BSR set to: 1
  1775  0010DC  C119  FFD9         	movff	strtod@s,fsr2l
  1776  0010E0  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1777  0010E4  50DF               	movf	indf2,w,c
  1778  0010E6  ECC1  F01D         	call	_isdigit
  1779  0010EA  A0D8               	btfss	status,0,c
  1780  0010EC  D00D               	goto	l476
  1781  0010EE  C119  FFD9         	movff	strtod@s,fsr2l
  1782  0010F2  C11A  FFDA         	movff	strtod@s+1,fsr2h
  1783  0010F6  50DF               	movf	indf2,w,c
  1784  0010F8  0101               	movlb	1	; () banked
  1785  0010FA  6F1D               	movwf	??_strtod& (0+255),b
  1786  0010FC  511E               	movf	strtod@eexp& (0+255),w,b
  1787  0010FE  0D0A               	mullw	10
  1788  001100  50F3               	movf	prodl,w,c
  1789  001102  251D               	addwf	??_strtod& (0+255),w,b
  1790  001104  0FD0               	addlw	208
  1791  001106  6F1E               	movwf	strtod@eexp& (0+255),b
  1792  001108                     l476:
  1793                           
  1794                           ; BSR set to: 1
  1795                           
  1796                           ; BSR set to: 1
  1797                           
  1798                           ; BSR set to: 1
  1799  001108  0101               	movlb	1	; () banked
  1800  00110A  B71F               	btfsc	strtod@flags& (0+255),3,b
  1801                           
  1802                           ; BSR set to: 1
  1803  00110C  6D1E               	negf	strtod@eexp& (0+255),b
  1804  00110E                     l477:
  1805                           
  1806                           ; BSR set to: 1
  1807                           
  1808                           ; BSR set to: 1
  1809                           
  1810                           ; BSR set to: 1
  1811  00110E  511E               	movf	strtod@eexp& (0+255),w,b
  1812  001110  2720               	addwf	strtod@expon& (0+255),f,b
  1813                           
  1814                           ; BSR set to: 1
  1815  001112  511B               	movf	strtod@res& (0+255),w,b
  1816  001114  111C               	iorwf	(strtod@res+1)& (0+255),w,b
  1817  001116  A4D8               	btfss	status,2,c
  1818                           
  1819                           ; BSR set to: 1
  1820  001118  A31F               	btfss	strtod@flags& (0+255),1,b
  1821  00111A  D008               	goto	l478
  1822                           
  1823                           ; BSR set to: 1
  1824  00111C  C11B  FFD9         	movff	strtod@res,fsr2l
  1825  001120  C11C  FFDA         	movff	strtod@res+1,fsr2h
  1826  001124  C119  FFDE         	movff	strtod@s,postinc2
  1827  001128  C11A  FFDD         	movff	strtod@s+1,postdec2
  1828  00112C                     l478:
  1829                           
  1830                           ; BSR set to: 1
  1831                           
  1832                           ; BSR set to: 1
  1833  00112C  C121  F100         	movff	strtod@_u,___xxtofl@val
  1834  001130  C122  F101         	movff	strtod@_u+1,___xxtofl@val+1
  1835  001134  C123  F102         	movff	strtod@_u+2,___xxtofl@val+2
  1836  001138  C124  F103         	movff	strtod@_u+3,___xxtofl@val+3
  1837  00113C  0E01               	movlw	1
  1838  00113E  EC65  F016         	call	___xxtofl
  1839  001142  C100  F121         	movff	?___xxtofl,strtod@_u
  1840  001146  C101  F122         	movff	?___xxtofl+1,strtod@_u+1
  1841  00114A  C102  F123         	movff	?___xxtofl+2,strtod@_u+2
  1842  00114E  C103  F124         	movff	?___xxtofl+3,strtod@_u+3
  1843  001152  0101               	movlb	1	; () banked
  1844  001154  5121               	movf	strtod@_u& (0+255),w,b
  1845  001156  1122               	iorwf	(strtod@_u+1)& (0+255),w,b
  1846  001158  1123               	iorwf	(strtod@_u+2)& (0+255),w,b
  1847  00115A  1124               	iorwf	(strtod@_u+3)& (0+255),w,b
  1848  00115C  A4D8               	btfss	status,2,c
  1849  00115E  D009               	goto	l479
  1850                           
  1851                           ; BSR set to: 1
  1852  001160  0E00               	movlw	0
  1853  001162  6F19               	movwf	?_strtod& (0+255),b
  1854  001164  0E00               	movlw	0
  1855  001166  6F1A               	movwf	(?_strtod+1)& (0+255),b
  1856  001168  0E00               	movlw	0
  1857  00116A  6F1B               	movwf	(?_strtod+2)& (0+255),b
  1858  00116C  0E00               	movlw	0
  1859  00116E  6F1C               	movwf	(?_strtod+3)& (0+255),b
  1860                           
  1861                           ; BSR set to: 1
  1862  001170  0012               	return	
  1863  001172                     l479:
  1864                           
  1865                           ; BSR set to: 1
  1866                           
  1867                           ; BSR set to: 1
  1868  001172  AF20               	btfss	strtod@expon& (0+255),7,b
  1869  001174  D06D               	goto	l481
  1870                           
  1871                           ; BSR set to: 1
  1872  001176  6D20               	negf	strtod@expon& (0+255),b
  1873  001178  D01D               	goto	l482
  1874  00117A                     
  1875                           ; BSR set to: 1
  1876                           
  1877                           ; BSR set to: 1
  1878  00117A  C121  F100         	movff	strtod@_u,___fldiv@b
  1879  00117E  C122  F101         	movff	strtod@_u+1,___fldiv@b+1
  1880  001182  C123  F102         	movff	strtod@_u+2,___fldiv@b+2
  1881  001186  C124  F103         	movff	strtod@_u+3,___fldiv@b+3
  1882  00118A  0EF9               	movlw	249
  1883  00118C  6F04               	movwf	___fldiv@a& (0+255),b
  1884  00118E  0E02               	movlw	2
  1885  001190  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  1886  001192  0E15               	movlw	21
  1887  001194  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  1888  001196  0E50               	movlw	80
  1889  001198  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  1890  00119A  ECBF  F010         	call	___fldiv	;wreg free
  1891  00119E  C100  F121         	movff	?___fldiv,strtod@_u
  1892  0011A2  C101  F122         	movff	?___fldiv+1,strtod@_u+1
  1893  0011A6  C102  F123         	movff	?___fldiv+2,strtod@_u+2
  1894  0011AA  C103  F124         	movff	?___fldiv+3,strtod@_u+3
  1895  0011AE  0EF6               	movlw	246
  1896  0011B0  0101               	movlb	1	; () banked
  1897  0011B2  2720               	addwf	strtod@expon& (0+255),f,b
  1898  0011B4                     l482:
  1899                           
  1900                           ; BSR set to: 1
  1901                           
  1902                           ; BSR set to: 1
  1903  0011B4  5120               	movf	strtod@expon& (0+255),w,b
  1904  0011B6  0A80               	xorlw	128
  1905  0011B8  0F76               	addlw	-138
  1906  0011BA  A0D8               	btfss	status,0,c
  1907  0011BC  D01D               	goto	l485
  1908  0011BE  D7DD               	goto	l483
  1909  0011C0                     
  1910                           ; BSR set to: 1
  1911                           
  1912                           ; BSR set to: 1
  1913  0011C0  C121  F100         	movff	strtod@_u,___fldiv@b
  1914  0011C4  C122  F101         	movff	strtod@_u+1,___fldiv@b+1
  1915  0011C8  C123  F102         	movff	strtod@_u+2,___fldiv@b+2
  1916  0011CC  C124  F103         	movff	strtod@_u+3,___fldiv@b+3
  1917  0011D0  0E00               	movlw	0
  1918  0011D2  6F04               	movwf	___fldiv@a& (0+255),b
  1919  0011D4  0E00               	movlw	0
  1920  0011D6  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  1921  0011D8  0E20               	movlw	32
  1922  0011DA  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  1923  0011DC  0E41               	movlw	65
  1924  0011DE  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  1925  0011E0  ECBF  F010         	call	___fldiv	;wreg free
  1926  0011E4  C100  F121         	movff	?___fldiv,strtod@_u
  1927  0011E8  C101  F122         	movff	?___fldiv+1,strtod@_u+1
  1928  0011EC  C102  F123         	movff	?___fldiv+2,strtod@_u+2
  1929  0011F0  C103  F124         	movff	?___fldiv+3,strtod@_u+3
  1930  0011F4  0101               	movlb	1	; () banked
  1931  0011F6  0720               	decf	strtod@expon& (0+255),f,b
  1932  0011F8                     l485:
  1933                           
  1934                           ; BSR set to: 1
  1935                           
  1936                           ; BSR set to: 1
  1937  0011F8  5120               	movf	strtod@expon& (0+255),w,b
  1938  0011FA  A4D8               	btfss	status,2,c
  1939  0011FC  D7E1               	goto	l486
  1940                           
  1941                           ; BSR set to: 1
  1942                           
  1943                           ; BSR set to: 1
  1944  0011FE  C121  F100         	movff	strtod@_u,___flge@ff1
  1945  001202  C122  F101         	movff	strtod@_u+1,___flge@ff1+1
  1946  001206  C123  F102         	movff	strtod@_u+2,___flge@ff1+2
  1947  00120A  C124  F103         	movff	strtod@_u+3,___flge@ff1+3
  1948  00120E  0E00               	movlw	0
  1949  001210  6F04               	movwf	___flge@ff2& (0+255),b
  1950  001212  0E00               	movlw	0
  1951  001214  6F05               	movwf	(___flge@ff2+1)& (0+255),b
  1952  001216  0E80               	movlw	128
  1953  001218  6F06               	movwf	(___flge@ff2+2)& (0+255),b
  1954  00121A  0E00               	movlw	0
  1955  00121C  6F07               	movwf	(___flge@ff2+3)& (0+255),b
  1956  00121E  ECE4  F018         	call	___flge	;wreg free
  1957  001222  0101               	movlb	1	; () banked
  1958  001224  B0D8               	btfsc	status,0,c
  1959  001226  D083               	goto	l498
  1960                           
  1961                           ; BSR set to: 1
  1962  001228  A11F               	btfss	strtod@flags& (0+255),0,b
  1963  00122A  D009               	goto	l489
  1964                           
  1965                           ; BSR set to: 1
  1966  00122C  0E00               	movlw	0
  1967  00122E  6F19               	movwf	?_strtod& (0+255),b
  1968  001230  0E00               	movlw	0
  1969  001232  6F1A               	movwf	(?_strtod+1)& (0+255),b
  1970  001234  0E80               	movlw	128
  1971  001236  6F1B               	movwf	(?_strtod+2)& (0+255),b
  1972  001238  0E80               	movlw	128
  1973  00123A  6F1C               	movwf	(?_strtod+3)& (0+255),b
  1974                           
  1975                           ; BSR set to: 1
  1976  00123C  0012               	return	
  1977  00123E                     l489:
  1978                           
  1979                           ; BSR set to: 1
  1980                           
  1981                           ; BSR set to: 1
  1982  00123E  0E00               	movlw	0
  1983  001240  6F19               	movwf	?_strtod& (0+255),b
  1984  001242  0E00               	movlw	0
  1985  001244  6F1A               	movwf	(?_strtod+1)& (0+255),b
  1986  001246  0E80               	movlw	128
  1987  001248  6F1B               	movwf	(?_strtod+2)& (0+255),b
  1988  00124A  0E00               	movlw	0
  1989  00124C  6F1C               	movwf	(?_strtod+3)& (0+255),b
  1990                           
  1991                           ; BSR set to: 1
  1992  00124E  0012               	return	
  1993  001250                     l481:
  1994                           
  1995                           ; BSR set to: 1
  1996                           
  1997                           ; BSR set to: 1
  1998  001250  5120               	movf	strtod@expon& (0+255),w,b
  1999  001252  0A80               	xorlw	128
  2000  001254  0F7F               	addlw	-129
  2001  001256  B0D8               	btfsc	status,0,c
  2002  001258  D01E               	goto	l492
  2003  00125A  D069               	goto	l498
  2004  00125C                     
  2005                           ; BSR set to: 1
  2006                           
  2007                           ; BSR set to: 1
  2008  00125C  C121  F100         	movff	strtod@_u,___flmul@b
  2009  001260  C122  F101         	movff	strtod@_u+1,___flmul@b+1
  2010  001264  C123  F102         	movff	strtod@_u+2,___flmul@b+2
  2011  001268  C124  F103         	movff	strtod@_u+3,___flmul@b+3
  2012  00126C  0EF9               	movlw	249
  2013  00126E  6F04               	movwf	___flmul@a& (0+255),b
  2014  001270  0E02               	movlw	2
  2015  001272  6F05               	movwf	(___flmul@a+1)& (0+255),b
  2016  001274  0E15               	movlw	21
  2017  001276  6F06               	movwf	(___flmul@a+2)& (0+255),b
  2018  001278  0E50               	movlw	80
  2019  00127A  6F07               	movwf	(___flmul@a+3)& (0+255),b
  2020  00127C  ECD0  F00B         	call	___flmul	;wreg free
  2021  001280  C100  F121         	movff	?___flmul,strtod@_u
  2022  001284  C101  F122         	movff	?___flmul+1,strtod@_u+1
  2023  001288  C102  F123         	movff	?___flmul+2,strtod@_u+2
  2024  00128C  C103  F124         	movff	?___flmul+3,strtod@_u+3
  2025  001290  0EF6               	movlw	246
  2026  001292  0101               	movlb	1	; () banked
  2027  001294  2720               	addwf	strtod@expon& (0+255),f,b
  2028  001296                     l492:
  2029                           
  2030                           ; BSR set to: 1
  2031                           
  2032                           ; BSR set to: 1
  2033  001296  0E0A               	movlw	10
  2034  001298  6120               	cpfslt	strtod@expon& (0+255),b
  2035  00129A  D7E0               	goto	l493
  2036  00129C  D01C               	goto	l495
  2037  00129E                     
  2038                           ; BSR set to: 1
  2039                           
  2040                           ; BSR set to: 1
  2041  00129E  C121  F100         	movff	strtod@_u,___flmul@b
  2042  0012A2  C122  F101         	movff	strtod@_u+1,___flmul@b+1
  2043  0012A6  C123  F102         	movff	strtod@_u+2,___flmul@b+2
  2044  0012AA  C124  F103         	movff	strtod@_u+3,___flmul@b+3
  2045  0012AE  0E00               	movlw	0
  2046  0012B0  6F04               	movwf	___flmul@a& (0+255),b
  2047  0012B2  0E00               	movlw	0
  2048  0012B4  6F05               	movwf	(___flmul@a+1)& (0+255),b
  2049  0012B6  0E20               	movlw	32
  2050  0012B8  6F06               	movwf	(___flmul@a+2)& (0+255),b
  2051  0012BA  0E41               	movlw	65
  2052  0012BC  6F07               	movwf	(___flmul@a+3)& (0+255),b
  2053  0012BE  ECD0  F00B         	call	___flmul	;wreg free
  2054  0012C2  C100  F121         	movff	?___flmul,strtod@_u
  2055  0012C6  C101  F122         	movff	?___flmul+1,strtod@_u+1
  2056  0012CA  C102  F123         	movff	?___flmul+2,strtod@_u+2
  2057  0012CE  C103  F124         	movff	?___flmul+3,strtod@_u+3
  2058  0012D2  0101               	movlb	1	; () banked
  2059  0012D4  0720               	decf	strtod@expon& (0+255),f,b
  2060  0012D6                     l495:
  2061                           
  2062                           ; BSR set to: 1
  2063                           
  2064                           ; BSR set to: 1
  2065  0012D6  5120               	movf	strtod@expon& (0+255),w,b
  2066  0012D8  A4D8               	btfss	status,2,c
  2067  0012DA  D7E1               	goto	l496
  2068                           
  2069                           ; BSR set to: 1
  2070                           
  2071                           ; BSR set to: 1
  2072  0012DC  0EFF               	movlw	255
  2073  0012DE  6F00               	movwf	___flge@ff1& (0+255),b
  2074  0012E0  0EFF               	movlw	255
  2075  0012E2  6F01               	movwf	(___flge@ff1+1)& (0+255),b
  2076  0012E4  0E7F               	movlw	127
  2077  0012E6  6F02               	movwf	(___flge@ff1+2)& (0+255),b
  2078  0012E8  0E7F               	movlw	127
  2079  0012EA  6F03               	movwf	(___flge@ff1+3)& (0+255),b
  2080  0012EC  C121  F104         	movff	strtod@_u,___flge@ff2
  2081  0012F0  C122  F105         	movff	strtod@_u+1,___flge@ff2+1
  2082  0012F4  C123  F106         	movff	strtod@_u+2,___flge@ff2+2
  2083  0012F8  C124  F107         	movff	strtod@_u+3,___flge@ff2+3
  2084  0012FC  ECE4  F018         	call	___flge	;wreg free
  2085  001300  0101               	movlb	1	; () banked
  2086  001302  B0D8               	btfsc	status,0,c
  2087  001304  D014               	goto	l498
  2088                           
  2089                           ; BSR set to: 1
  2090  001306  A11F               	btfss	strtod@flags& (0+255),0,b
  2091  001308  D009               	goto	l499
  2092                           
  2093                           ; BSR set to: 1
  2094  00130A  0E00               	movlw	0
  2095  00130C  6F19               	movwf	?_strtod& (0+255),b
  2096  00130E  0E00               	movlw	0
  2097  001310  6F1A               	movwf	(?_strtod+1)& (0+255),b
  2098  001312  0E80               	movlw	128
  2099  001314  6F1B               	movwf	(?_strtod+2)& (0+255),b
  2100  001316  0E80               	movlw	128
  2101  001318  6F1C               	movwf	(?_strtod+3)& (0+255),b
  2102                           
  2103                           ; BSR set to: 1
  2104  00131A  0012               	return	
  2105  00131C                     l499:
  2106                           
  2107                           ; BSR set to: 1
  2108                           
  2109                           ; BSR set to: 1
  2110  00131C  0E00               	movlw	0
  2111  00131E  6F19               	movwf	?_strtod& (0+255),b
  2112  001320  0E00               	movlw	0
  2113  001322  6F1A               	movwf	(?_strtod+1)& (0+255),b
  2114  001324  0E80               	movlw	128
  2115  001326  6F1B               	movwf	(?_strtod+2)& (0+255),b
  2116  001328  0E00               	movlw	0
  2117  00132A  6F1C               	movwf	(?_strtod+3)& (0+255),b
  2118                           
  2119                           ; BSR set to: 1
  2120  00132C  0012               	return	
  2121  00132E                     l498:
  2122                           
  2123                           ; BSR set to: 1
  2124                           
  2125                           ; BSR set to: 1
  2126                           
  2127                           ; BSR set to: 1
  2128  00132E  A11F               	btfss	strtod@flags& (0+255),0,b
  2129  001330  D012               	goto	l500
  2130                           
  2131                           ; BSR set to: 1
  2132  001332  C121  F100         	movff	strtod@_u,___flneg@f1
  2133  001336  C122  F101         	movff	strtod@_u+1,___flneg@f1+1
  2134  00133A  C123  F102         	movff	strtod@_u+2,___flneg@f1+2
  2135  00133E  C124  F103         	movff	strtod@_u+3,___flneg@f1+3
  2136  001342  ECC1  F01C         	call	___flneg	;wreg free
  2137  001346  C100  F121         	movff	?___flneg,strtod@_u
  2138  00134A  C101  F122         	movff	?___flneg+1,strtod@_u+1
  2139  00134E  C102  F123         	movff	?___flneg+2,strtod@_u+2
  2140  001352  C103  F124         	movff	?___flneg+3,strtod@_u+3
  2141  001356                     l500:
  2142  001356  C121  F119         	movff	strtod@_u,?_strtod
  2143  00135A  C122  F11A         	movff	strtod@_u+1,?_strtod+1
  2144  00135E  C123  F11B         	movff	strtod@_u+2,?_strtod+2
  2145  001362  C124  F11C         	movff	strtod@_u+3,?_strtod+3
  2146  001366  0012               	return	
  2147  001368                     __end_of_strtod:
  2148                           	opt stack 0
  2149                           tblptru	equ	0xFF8
  2150                           prodl	equ	0xFF3
  2151                           postinc0	equ	0xFEE
  2152                           wreg	equ	0xFE8
  2153                           indf2	equ	0xFDF
  2154                           postinc2	equ	0xFDE
  2155                           postdec2	equ	0xFDD
  2156                           fsr2h	equ	0xFDA
  2157                           fsr2l	equ	0xFD9
  2158                           status	equ	0xFD8
  2159                           
  2160 ;; *************** function _isspace *****************
  2161 ;; Defined at:
  2162 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isspace.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  c               1    wreg     unsigned char 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  c               1    2[BANK1 ] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;		None               void
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0
  2177 ;;      Locals:         0       0       2       0       0       0       0       0       0
  2178 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2179 ;;      Totals:         0       0       3       0       0       0       0       0       0
  2180 ;;Total ram usage:        3 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    4
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_strtod
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text7
  2191  003A96                     __ptext7:
  2192                           	opt stack 0
  2193  003A96                     _isspace:
  2194                           	opt stack 24
  2195                           
  2196                           ;incstack = 0
  2197                           ;isspace@c stored from wreg
  2198  003A96  0101               	movlb	1	; () banked
  2199  003A98  6F02               	movwf	isspace@c& (0+255),b
  2200  003A9A  0E01               	movlw	1
  2201  003A9C  0101               	movlb	1	; () banked
  2202  003A9E  6F01               	movwf	_isspace$890& (0+255),b
  2203                           
  2204                           ; BSR set to: 1
  2205  003AA0  0E20               	movlw	32
  2206  003AA2  1902               	xorwf	isspace@c& (0+255),w,b
  2207  003AA4  B4D8               	btfsc	status,2,c
  2208  003AA6  D008               	goto	l713
  2209                           
  2210                           ; BSR set to: 1
  2211  003AA8  0E0E               	movlw	14
  2212  003AAA  6102               	cpfslt	isspace@c& (0+255),b
  2213  003AAC  D003               	goto	u7370
  2214                           
  2215                           ; BSR set to: 1
  2216  003AAE  0E09               	movlw	9
  2217  003AB0  6102               	cpfslt	isspace@c& (0+255),b
  2218  003AB2  D002               	goto	l713
  2219  003AB4                     u7370:
  2220                           
  2221                           ; BSR set to: 1
  2222                           
  2223                           ; BSR set to: 1
  2224  003AB4  0E00               	movlw	0
  2225  003AB6  6F01               	movwf	_isspace$890& (0+255),b
  2226  003AB8                     l713:
  2227                           
  2228                           ; BSR set to: 1
  2229                           
  2230                           ; BSR set to: 1
  2231  003AB8  C101  F100         	movff	_isspace$890,??_isspace
  2232  003ABC  3100               	rrcf	??_isspace& (0+255),w,b
  2233  003ABE  0012               	return	
  2234  003AC0                     __end_of_isspace:
  2235                           	opt stack 0
  2236                           tblptru	equ	0xFF8
  2237                           prodl	equ	0xFF3
  2238                           postinc0	equ	0xFEE
  2239                           wreg	equ	0xFE8
  2240                           indf2	equ	0xFDF
  2241                           postinc2	equ	0xFDE
  2242                           postdec2	equ	0xFDD
  2243                           fsr2h	equ	0xFDA
  2244                           fsr2l	equ	0xFD9
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _isdigit *****************
  2248 ;; Defined at:
  2249 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  c               1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  c               1    2[BANK1 ] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;		None               void
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2263 ;;      Params:         0       0       0       0       0       0       0       0       0
  2264 ;;      Locals:         0       0       2       0       0       0       0       0       0
  2265 ;;      Temps:          0       0       1       0       0       0       0       0       0
  2266 ;;      Totals:         0       0       3       0       0       0       0       0       0
  2267 ;;Total ram usage:        3 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    4
  2270 ;; This function calls:
  2271 ;;		Nothing
  2272 ;; This function is called by:
  2273 ;;		_strtod
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text8
  2278  003B82                     __ptext8:
  2279                           	opt stack 0
  2280  003B82                     _isdigit:
  2281                           	opt stack 24
  2282                           
  2283                           ; BSR set to: 1
  2284                           ;incstack = 0
  2285                           ;isdigit@c stored from wreg
  2286  003B82  0101               	movlb	1	; () banked
  2287  003B84  6F02               	movwf	isdigit@c& (0+255),b
  2288  003B86  0E00               	movlw	0
  2289  003B88  0101               	movlb	1	; () banked
  2290  003B8A  6F01               	movwf	_isdigit$887& (0+255),b
  2291                           
  2292                           ; BSR set to: 1
  2293  003B8C  0E3A               	movlw	58
  2294  003B8E  6102               	cpfslt	isdigit@c& (0+255),b
  2295  003B90  D005               	goto	l708
  2296                           
  2297                           ; BSR set to: 1
  2298  003B92  0E2F               	movlw	47
  2299  003B94  6502               	cpfsgt	isdigit@c& (0+255),b
  2300  003B96  D002               	goto	l708
  2301                           
  2302                           ; BSR set to: 1
  2303  003B98  0E01               	movlw	1
  2304  003B9A  6F01               	movwf	_isdigit$887& (0+255),b
  2305  003B9C                     l708:
  2306                           
  2307                           ; BSR set to: 1
  2308                           
  2309                           ; BSR set to: 1
  2310  003B9C  C101  F100         	movff	_isdigit$887,??_isdigit
  2311  003BA0  3100               	rrcf	??_isdigit& (0+255),w,b
  2312  003BA2  0012               	return	
  2313  003BA4                     __end_of_isdigit:
  2314                           	opt stack 0
  2315                           tblptru	equ	0xFF8
  2316                           prodl	equ	0xFF3
  2317                           postinc0	equ	0xFEE
  2318                           wreg	equ	0xFE8
  2319                           indf2	equ	0xFDF
  2320                           postinc2	equ	0xFDE
  2321                           postdec2	equ	0xFDD
  2322                           fsr2h	equ	0xFDA
  2323                           fsr2l	equ	0xFD9
  2324                           status	equ	0xFD8
  2325                           
  2326 ;; *************** function ___xxtofl *****************
  2327 ;; Defined at:
  2328 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  sign            1    wreg     unsigned char 
  2331 ;;  val             4    0[BANK1 ] long 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  sign            1    8[BANK1 ] unsigned char 
  2334 ;;  arg             4   10[BANK1 ] unsigned long 
  2335 ;;  exp             1    9[BANK1 ] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  4    0[BANK1 ] unsigned char 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2345 ;;      Params:         0       0       4       0       0       0       0       0       0
  2346 ;;      Locals:         0       0       6       0       0       0       0       0       0
  2347 ;;      Temps:          0       0       4       0       0       0       0       0       0
  2348 ;;      Totals:         0       0      14       0       0       0       0       0       0
  2349 ;;Total ram usage:       14 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    4
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_strtod
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text9
  2360  002CCA                     __ptext9:
  2361                           	opt stack 0
  2362  002CCA                     ___xxtofl:
  2363                           	opt stack 24
  2364                           
  2365                           ; BSR set to: 1
  2366                           ;incstack = 0
  2367                           ;___xxtofl@sign stored from wreg
  2368  002CCA  0101               	movlb	1	; () banked
  2369  002CCC  6F08               	movwf	___xxtofl@sign& (0+255),b
  2370  002CCE  0101               	movlb	1	; () banked
  2371  002CD0  5108               	movf	___xxtofl@sign& (0+255),w,b
  2372  002CD2  A4D8               	btfss	status,2,c
  2373                           
  2374                           ; BSR set to: 1
  2375  002CD4  AF03               	btfss	(___xxtofl@val+3)& (0+255),7,b
  2376  002CD6  D01A               	goto	l940
  2377                           
  2378                           ; BSR set to: 1
  2379  002CD8  C100  F104         	movff	___xxtofl@val,??___xxtofl
  2380  002CDC  C101  F105         	movff	___xxtofl@val+1,??___xxtofl+1
  2381  002CE0  C102  F106         	movff	___xxtofl@val+2,??___xxtofl+2
  2382  002CE4  C103  F107         	movff	___xxtofl@val+3,??___xxtofl+3
  2383  002CE8  1F04               	comf	??___xxtofl& (0+255),f,b
  2384  002CEA  1F05               	comf	(??___xxtofl+1)& (0+255),f,b
  2385  002CEC  1F06               	comf	(??___xxtofl+2)& (0+255),f,b
  2386  002CEE  1F07               	comf	(??___xxtofl+3)& (0+255),f,b
  2387  002CF0  2B04               	incf	??___xxtofl& (0+255),f,b
  2388  002CF2  0E00               	movlw	0
  2389  002CF4  2305               	addwfc	(??___xxtofl+1)& (0+255),f,b
  2390  002CF6  2306               	addwfc	(??___xxtofl+2)& (0+255),f,b
  2391  002CF8  2307               	addwfc	(??___xxtofl+3)& (0+255),f,b
  2392  002CFA  C104  F10A         	movff	??___xxtofl,___xxtofl@arg
  2393  002CFE  C105  F10B         	movff	??___xxtofl+1,___xxtofl@arg+1
  2394  002D02  C106  F10C         	movff	??___xxtofl+2,___xxtofl@arg+2
  2395  002D06  C107  F10D         	movff	??___xxtofl+3,___xxtofl@arg+3
  2396  002D0A  D008               	goto	l941
  2397  002D0C                     l940:
  2398                           
  2399                           ; BSR set to: 1
  2400  002D0C  C100  F10A         	movff	___xxtofl@val,___xxtofl@arg
  2401  002D10  C101  F10B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2402  002D14  C102  F10C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2403  002D18  C103  F10D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2404  002D1C                     l941:
  2405                           
  2406                           ; BSR set to: 1
  2407                           
  2408                           ; BSR set to: 1
  2409  002D1C  5100               	movf	___xxtofl@val& (0+255),w,b
  2410  002D1E  1101               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  2411  002D20  1102               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  2412  002D22  1103               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  2413  002D24  A4D8               	btfss	status,2,c
  2414  002D26  D009               	goto	l942
  2415                           
  2416                           ; BSR set to: 1
  2417  002D28  0E00               	movlw	0
  2418  002D2A  6F00               	movwf	?___xxtofl& (0+255),b
  2419  002D2C  0E00               	movlw	0
  2420  002D2E  6F01               	movwf	(?___xxtofl+1)& (0+255),b
  2421  002D30  0E00               	movlw	0
  2422  002D32  6F02               	movwf	(?___xxtofl+2)& (0+255),b
  2423  002D34  0E00               	movlw	0
  2424  002D36  6F03               	movwf	(?___xxtofl+3)& (0+255),b
  2425                           
  2426                           ; BSR set to: 1
  2427  002D38  0012               	return	
  2428  002D3A                     l942:
  2429                           
  2430                           ; BSR set to: 1
  2431                           
  2432                           ; BSR set to: 1
  2433  002D3A  0E96               	movlw	150
  2434  002D3C  6F09               	movwf	___xxtofl@exp& (0+255),b
  2435  002D3E  D006               	goto	l944
  2436  002D40                     
  2437                           ; BSR set to: 1
  2438                           
  2439                           ; BSR set to: 1
  2440  002D40  2B09               	incf	___xxtofl@exp& (0+255),f,b
  2441  002D42  90D8               	bcf	status,0,c
  2442  002D44  330D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  2443  002D46  330C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  2444  002D48  330B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  2445  002D4A  330A               	rrcf	___xxtofl@arg& (0+255),f,b
  2446  002D4C                     l944:
  2447                           
  2448                           ; BSR set to: 1
  2449                           
  2450                           ; BSR set to: 1
  2451  002D4C  0E00               	movlw	0
  2452  002D4E  150A               	andwf	___xxtofl@arg& (0+255),w,b
  2453  002D50  6F04               	movwf	??___xxtofl& (0+255),b
  2454  002D52  0E00               	movlw	0
  2455  002D54  150B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  2456  002D56  6F05               	movwf	(??___xxtofl+1)& (0+255),b
  2457  002D58  0E00               	movlw	0
  2458  002D5A  150C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  2459  002D5C  6F06               	movwf	(??___xxtofl+2)& (0+255),b
  2460  002D5E  0EFE               	movlw	254
  2461  002D60  150D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  2462  002D62  6F07               	movwf	(??___xxtofl+3)& (0+255),b
  2463  002D64  5104               	movf	??___xxtofl& (0+255),w,b
  2464  002D66  1105               	iorwf	(??___xxtofl+1)& (0+255),w,b
  2465  002D68  1106               	iorwf	(??___xxtofl+2)& (0+255),w,b
  2466  002D6A  1107               	iorwf	(??___xxtofl+3)& (0+255),w,b
  2467  002D6C  B4D8               	btfsc	status,2,c
  2468  002D6E  D00D               	goto	l947
  2469  002D70  D7E7               	goto	l945
  2470  002D72                     
  2471                           ; BSR set to: 1
  2472                           
  2473                           ; BSR set to: 1
  2474  002D72  2B09               	incf	___xxtofl@exp& (0+255),f,b
  2475                           
  2476                           ; BSR set to: 1
  2477  002D74  0E01               	movlw	1
  2478  002D76  270A               	addwf	___xxtofl@arg& (0+255),f,b
  2479  002D78  0E00               	movlw	0
  2480  002D7A  230B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  2481  002D7C  230C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  2482  002D7E  230D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  2483                           
  2484                           ; BSR set to: 1
  2485  002D80  90D8               	bcf	status,0,c
  2486  002D82  330D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  2487  002D84  330C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  2488  002D86  330B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  2489  002D88  330A               	rrcf	___xxtofl@arg& (0+255),f,b
  2490  002D8A                     l947:
  2491                           
  2492                           ; BSR set to: 1
  2493  002D8A  0E00               	movlw	0
  2494  002D8C  150A               	andwf	___xxtofl@arg& (0+255),w,b
  2495  002D8E  6F04               	movwf	??___xxtofl& (0+255),b
  2496  002D90  0E00               	movlw	0
  2497  002D92  150B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  2498  002D94  6F05               	movwf	(??___xxtofl+1)& (0+255),b
  2499  002D96  0E00               	movlw	0
  2500  002D98  150C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  2501  002D9A  6F06               	movwf	(??___xxtofl+2)& (0+255),b
  2502  002D9C  0EFF               	movlw	255
  2503  002D9E  150D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  2504  002DA0  6F07               	movwf	(??___xxtofl+3)& (0+255),b
  2505  002DA2  5104               	movf	??___xxtofl& (0+255),w,b
  2506  002DA4  1105               	iorwf	(??___xxtofl+1)& (0+255),w,b
  2507  002DA6  1106               	iorwf	(??___xxtofl+2)& (0+255),w,b
  2508  002DA8  1107               	iorwf	(??___xxtofl+3)& (0+255),w,b
  2509  002DAA  B4D8               	btfsc	status,2,c
  2510  002DAC  D007               	goto	l950
  2511  002DAE  D7E1               	goto	l948
  2512  002DB0                     
  2513                           ; BSR set to: 1
  2514                           
  2515                           ; BSR set to: 1
  2516  002DB0  0709               	decf	___xxtofl@exp& (0+255),f,b
  2517  002DB2  90D8               	bcf	status,0,c
  2518  002DB4  370A               	rlcf	___xxtofl@arg& (0+255),f,b
  2519  002DB6  370B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  2520  002DB8  370C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  2521  002DBA  370D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  2522  002DBC                     l950:
  2523                           
  2524                           ; BSR set to: 1
  2525                           
  2526                           ; BSR set to: 1
  2527  002DBC  BF0C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  2528  002DBE  D003               	goto	u7520
  2529                           
  2530                           ; BSR set to: 1
  2531  002DC0  0E02               	movlw	2
  2532  002DC2  6109               	cpfslt	___xxtofl@exp& (0+255),b
  2533  002DC4  D7F5               	goto	l951
  2534  002DC6                     u7520:
  2535                           
  2536                           ; BSR set to: 1
  2537                           
  2538                           ; BSR set to: 1
  2539  002DC6  B109               	btfsc	___xxtofl@exp& (0+255),0,b
  2540  002DC8  D008               	goto	l955
  2541                           
  2542                           ; BSR set to: 1
  2543  002DCA  0EFF               	movlw	255
  2544  002DCC  170A               	andwf	___xxtofl@arg& (0+255),f,b
  2545  002DCE  0EFF               	movlw	255
  2546  002DD0  170B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  2547  002DD2  0E7F               	movlw	127
  2548  002DD4  170C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  2549  002DD6  0EFF               	movlw	255
  2550  002DD8  170D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  2551  002DDA                     l955:
  2552                           
  2553                           ; BSR set to: 1
  2554  002DDA  90D8               	bcf	status,0,c
  2555  002DDC  3309               	rrcf	___xxtofl@exp& (0+255),f,b
  2556  002DDE  C109  F104         	movff	___xxtofl@exp,??___xxtofl
  2557  002DE2  6B05               	clrf	(??___xxtofl+1)& (0+255),b
  2558  002DE4  6B06               	clrf	(??___xxtofl+2)& (0+255),b
  2559  002DE6  6B07               	clrf	(??___xxtofl+3)& (0+255),b
  2560  002DE8  C104  F107         	movff	??___xxtofl,??___xxtofl+3
  2561  002DEC  6B06               	clrf	(??___xxtofl+2)& (0+255),b
  2562  002DEE  6B05               	clrf	(??___xxtofl+1)& (0+255),b
  2563  002DF0  6B04               	clrf	??___xxtofl& (0+255),b
  2564  002DF2  5104               	movf	??___xxtofl& (0+255),w,b
  2565  002DF4  130A               	iorwf	___xxtofl@arg& (0+255),f,b
  2566  002DF6  5105               	movf	(??___xxtofl+1)& (0+255),w,b
  2567  002DF8  130B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  2568  002DFA  5106               	movf	(??___xxtofl+2)& (0+255),w,b
  2569  002DFC  130C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  2570  002DFE  5107               	movf	(??___xxtofl+3)& (0+255),w,b
  2571  002E00  130D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  2572                           
  2573                           ; BSR set to: 1
  2574  002E02  5108               	movf	___xxtofl@sign& (0+255),w,b
  2575  002E04  A4D8               	btfss	status,2,c
  2576                           
  2577                           ; BSR set to: 1
  2578  002E06  AF03               	btfss	(___xxtofl@val+3)& (0+255),7,b
  2579  002E08  D001               	goto	l956
  2580                           
  2581                           ; BSR set to: 1
  2582  002E0A  8F0D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  2583  002E0C                     l956:
  2584                           
  2585                           ; BSR set to: 1
  2586                           
  2587                           ; BSR set to: 1
  2588  002E0C  C10A  F100         	movff	___xxtofl@arg,?___xxtofl
  2589  002E10  C10B  F101         	movff	___xxtofl@arg+1,?___xxtofl+1
  2590  002E14  C10C  F102         	movff	___xxtofl@arg+2,?___xxtofl+2
  2591  002E18  C10D  F103         	movff	___xxtofl@arg+3,?___xxtofl+3
  2592  002E1C  0012               	return	
  2593  002E1E                     __end_of___xxtofl:
  2594                           	opt stack 0
  2595                           tblptru	equ	0xFF8
  2596                           prodl	equ	0xFF3
  2597                           postinc0	equ	0xFEE
  2598                           wreg	equ	0xFE8
  2599                           indf2	equ	0xFDF
  2600                           postinc2	equ	0xFDE
  2601                           postdec2	equ	0xFDD
  2602                           fsr2h	equ	0xFDA
  2603                           fsr2l	equ	0xFD9
  2604                           status	equ	0xFD8
  2605                           
  2606 ;; *************** function ___lmul *****************
  2607 ;; Defined at:
  2608 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  multiplier      4    0[BANK1 ] unsigned long 
  2611 ;;  multiplicand    4    4[BANK1 ] unsigned long 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  product         4    8[BANK1 ] unsigned long 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  4    0[BANK1 ] unsigned long 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2623 ;;      Params:         0       0       8       0       0       0       0       0       0
  2624 ;;      Locals:         0       0       4       0       0       0       0       0       0
  2625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2626 ;;      Totals:         0       0      12       0       0       0       0       0       0
  2627 ;;Total ram usage:       12 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:    4
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_strtod
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text10
  2638  0038B4                     __ptext10:
  2639                           	opt stack 0
  2640  0038B4                     ___lmul:
  2641                           	opt stack 24
  2642                           
  2643                           ; BSR set to: 1
  2644                           ;incstack = 0
  2645  0038B4  0E00               	movlw	0
  2646  0038B6  0101               	movlb	1	; () banked
  2647  0038B8  6F08               	movwf	___lmul@product& (0+255),b
  2648  0038BA  0E00               	movlw	0
  2649  0038BC  6F09               	movwf	(___lmul@product+1)& (0+255),b
  2650  0038BE  0E00               	movlw	0
  2651  0038C0  6F0A               	movwf	(___lmul@product+2)& (0+255),b
  2652  0038C2  0E00               	movlw	0
  2653  0038C4  6F0B               	movwf	(___lmul@product+3)& (0+255),b
  2654  0038C6                     
  2655                           ; BSR set to: 1
  2656                           
  2657                           ; BSR set to: 1
  2658  0038C6  A100               	btfss	___lmul@multiplier& (0+255),0,b
  2659  0038C8  D008               	goto	l296
  2660                           
  2661                           ; BSR set to: 1
  2662  0038CA  5104               	movf	___lmul@multiplicand& (0+255),w,b
  2663  0038CC  2708               	addwf	___lmul@product& (0+255),f,b
  2664  0038CE  5105               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  2665  0038D0  2309               	addwfc	(___lmul@product+1)& (0+255),f,b
  2666  0038D2  5106               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  2667  0038D4  230A               	addwfc	(___lmul@product+2)& (0+255),f,b
  2668  0038D6  5107               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  2669  0038D8  230B               	addwfc	(___lmul@product+3)& (0+255),f,b
  2670  0038DA                     l296:
  2671                           
  2672                           ; BSR set to: 1
  2673                           
  2674                           ; BSR set to: 1
  2675  0038DA  90D8               	bcf	status,0,c
  2676  0038DC  3704               	rlcf	___lmul@multiplicand& (0+255),f,b
  2677  0038DE  3705               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  2678  0038E0  3706               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  2679  0038E2  3707               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  2680                           
  2681                           ; BSR set to: 1
  2682  0038E4  90D8               	bcf	status,0,c
  2683  0038E6  3303               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  2684  0038E8  3302               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  2685  0038EA  3301               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  2686  0038EC  3300               	rrcf	___lmul@multiplier& (0+255),f,b
  2687  0038EE  5100               	movf	___lmul@multiplier& (0+255),w,b
  2688  0038F0  1101               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  2689  0038F2  1102               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  2690  0038F4  1103               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  2691  0038F6  A4D8               	btfss	status,2,c
  2692  0038F8  D7E6               	goto	l295
  2693                           
  2694                           ; BSR set to: 1
  2695  0038FA  C108  F100         	movff	___lmul@product,?___lmul
  2696  0038FE  C109  F101         	movff	___lmul@product+1,?___lmul+1
  2697  003902  C10A  F102         	movff	___lmul@product+2,?___lmul+2
  2698  003906  C10B  F103         	movff	___lmul@product+3,?___lmul+3
  2699                           
  2700                           ; BSR set to: 1
  2701  00390A  0012               	return		;funcret
  2702  00390C                     __end_of___lmul:
  2703                           	opt stack 0
  2704                           tblptru	equ	0xFF8
  2705                           prodl	equ	0xFF3
  2706                           postinc0	equ	0xFEE
  2707                           wreg	equ	0xFE8
  2708                           indf2	equ	0xFDF
  2709                           postinc2	equ	0xFDE
  2710                           postdec2	equ	0xFDD
  2711                           fsr2h	equ	0xFDA
  2712                           fsr2l	equ	0xFD9
  2713                           status	equ	0xFD8
  2714                           
  2715 ;; *************** function ___flneg *****************
  2716 ;; Defined at:
  2717 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  f1              4    0[BANK1 ] unsigned long 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  4    0[BANK1 ] unsigned long 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2731 ;;      Params:         0       0       4       0       0       0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2734 ;;      Totals:         0       0       4       0       0       0       0       0       0
  2735 ;;Total ram usage:        4 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    4
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_strtod
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text11
  2746  003982                     __ptext11:
  2747                           	opt stack 0
  2748  003982                     ___flneg:
  2749                           	opt stack 24
  2750                           
  2751                           ; BSR set to: 1
  2752                           ;incstack = 0
  2753  003982  0101               	movlb	1	; () banked
  2754  003984  5100               	movf	___flneg@f1& (0+255),w,b
  2755  003986  1101               	iorwf	(___flneg@f1+1)& (0+255),w,b
  2756  003988  1102               	iorwf	(___flneg@f1+2)& (0+255),w,b
  2757  00398A  1103               	iorwf	(___flneg@f1+3)& (0+255),w,b
  2758  00398C  B4D8               	btfsc	status,2,c
  2759  00398E  D008               	goto	l568
  2760                           
  2761                           ; BSR set to: 1
  2762  003990  0E00               	movlw	0
  2763  003992  1B00               	xorwf	___flneg@f1& (0+255),f,b
  2764  003994  0E00               	movlw	0
  2765  003996  1B01               	xorwf	(___flneg@f1+1)& (0+255),f,b
  2766  003998  0E00               	movlw	0
  2767  00399A  1B02               	xorwf	(___flneg@f1+2)& (0+255),f,b
  2768  00399C  0E80               	movlw	128
  2769  00399E  1B03               	xorwf	(___flneg@f1+3)& (0+255),f,b
  2770  0039A0                     l568:
  2771                           
  2772                           ; BSR set to: 1
  2773                           
  2774                           ; BSR set to: 1
  2775  0039A0  C100  F100         	movff	___flneg@f1,?___flneg
  2776  0039A4  C101  F101         	movff	___flneg@f1+1,?___flneg+1
  2777  0039A8  C102  F102         	movff	___flneg@f1+2,?___flneg+2
  2778  0039AC  C103  F103         	movff	___flneg@f1+3,?___flneg+3
  2779  0039B0  0012               	return	
  2780  0039B2                     __end_of___flneg:
  2781                           	opt stack 0
  2782                           tblptru	equ	0xFF8
  2783                           prodl	equ	0xFF3
  2784                           postinc0	equ	0xFEE
  2785                           wreg	equ	0xFE8
  2786                           indf2	equ	0xFDF
  2787                           postinc2	equ	0xFDE
  2788                           postdec2	equ	0xFDD
  2789                           fsr2h	equ	0xFDA
  2790                           fsr2l	equ	0xFD9
  2791                           status	equ	0xFD8
  2792                           
  2793 ;; *************** function ___flmul *****************
  2794 ;; Defined at:
  2795 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  b               4    0[BANK1 ] unsigned long 
  2798 ;;  a               4    4[BANK1 ] unsigned long 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  prod            4   19[BANK1 ] struct .
  2801 ;;  grs             4   14[BANK1 ] unsigned long 
  2802 ;;  temp            2   23[BANK1 ] struct .
  2803 ;;  bexp            1   18[BANK1 ] unsigned char 
  2804 ;;  aexp            1   13[BANK1 ] unsigned char 
  2805 ;;  sign            1   12[BANK1 ] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  4    0[BANK1 ] unsigned char 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0, prodl, prodh
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2815 ;;      Params:         0       0       8       0       0       0       0       0       0
  2816 ;;      Locals:         0       0      13       0       0       0       0       0       0
  2817 ;;      Temps:          0       0       4       0       0       0       0       0       0
  2818 ;;      Totals:         0       0      25       0       0       0       0       0       0
  2819 ;;Total ram usage:       25 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    4
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_strtod
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text12
  2830  0017A0                     __ptext12:
  2831                           	opt stack 0
  2832  0017A0                     ___flmul:
  2833                           	opt stack 24
  2834                           
  2835                           ; BSR set to: 1
  2836                           ;incstack = 0
  2837  0017A0  0101               	movlb	1	; () banked
  2838  0017A2  5103               	movf	(___flmul@b+3)& (0+255),w,b
  2839  0017A4  0B80               	andlw	128
  2840  0017A6  6F0C               	movwf	___flmul@sign& (0+255),b
  2841  0017A8  5103               	movf	(___flmul@b+3)& (0+255),w,b
  2842  0017AA  2503               	addwf	(___flmul@b+3)& (0+255),w,b
  2843  0017AC  6F12               	movwf	___flmul@bexp& (0+255),b
  2844                           
  2845                           ; BSR set to: 1
  2846  0017AE  BF02               	btfsc	(___flmul@b+2)& (0+255),7,b
  2847                           
  2848                           ; BSR set to: 1
  2849  0017B0  8112               	bsf	___flmul@bexp& (0+255),0,b
  2850                           
  2851                           ; BSR set to: 1
  2852                           
  2853                           ; BSR set to: 1
  2854  0017B2  5112               	movf	___flmul@bexp& (0+255),w,b
  2855  0017B4  B4D8               	btfsc	status,2,c
  2856  0017B6  D00D               	goto	l912
  2857                           
  2858                           ; BSR set to: 1
  2859  0017B8  2912               	incf	___flmul@bexp& (0+255),w,b
  2860  0017BA  A4D8               	btfss	status,2,c
  2861  0017BC  D008               	goto	l913
  2862                           
  2863                           ; BSR set to: 1
  2864  0017BE  0E00               	movlw	0
  2865  0017C0  6F00               	movwf	___flmul@b& (0+255),b
  2866  0017C2  0E00               	movlw	0
  2867  0017C4  6F01               	movwf	(___flmul@b+1)& (0+255),b
  2868  0017C6  0E00               	movlw	0
  2869  0017C8  6F02               	movwf	(___flmul@b+2)& (0+255),b
  2870  0017CA  0E00               	movlw	0
  2871  0017CC  6F03               	movwf	(___flmul@b+3)& (0+255),b
  2872  0017CE                     l913:
  2873                           
  2874                           ; BSR set to: 1
  2875                           
  2876                           ; BSR set to: 1
  2877  0017CE  8F02               	bsf	(___flmul@b+2)& (0+255),7,b
  2878  0017D0  D008               	goto	l914
  2879  0017D2                     l912:
  2880                           
  2881                           ; BSR set to: 1
  2882                           
  2883                           ; BSR set to: 1
  2884  0017D2  0E00               	movlw	0
  2885  0017D4  6F00               	movwf	___flmul@b& (0+255),b
  2886  0017D6  0E00               	movlw	0
  2887  0017D8  6F01               	movwf	(___flmul@b+1)& (0+255),b
  2888  0017DA  0E00               	movlw	0
  2889  0017DC  6F02               	movwf	(___flmul@b+2)& (0+255),b
  2890  0017DE  0E00               	movlw	0
  2891  0017E0  6F03               	movwf	(___flmul@b+3)& (0+255),b
  2892  0017E2                     l914:
  2893                           
  2894                           ; BSR set to: 1
  2895                           
  2896                           ; BSR set to: 1
  2897  0017E2  5107               	movf	(___flmul@a+3)& (0+255),w,b
  2898  0017E4  0B80               	andlw	128
  2899  0017E6  1B0C               	xorwf	___flmul@sign& (0+255),f,b
  2900                           
  2901                           ; BSR set to: 1
  2902  0017E8  5107               	movf	(___flmul@a+3)& (0+255),w,b
  2903  0017EA  2507               	addwf	(___flmul@a+3)& (0+255),w,b
  2904  0017EC  6F0D               	movwf	___flmul@aexp& (0+255),b
  2905                           
  2906                           ; BSR set to: 1
  2907  0017EE  BF06               	btfsc	(___flmul@a+2)& (0+255),7,b
  2908                           
  2909                           ; BSR set to: 1
  2910  0017F0  810D               	bsf	___flmul@aexp& (0+255),0,b
  2911                           
  2912                           ; BSR set to: 1
  2913                           
  2914                           ; BSR set to: 1
  2915  0017F2  510D               	movf	___flmul@aexp& (0+255),w,b
  2916  0017F4  B4D8               	btfsc	status,2,c
  2917  0017F6  D00D               	goto	l916
  2918                           
  2919                           ; BSR set to: 1
  2920  0017F8  290D               	incf	___flmul@aexp& (0+255),w,b
  2921  0017FA  A4D8               	btfss	status,2,c
  2922  0017FC  D008               	goto	l917
  2923                           
  2924                           ; BSR set to: 1
  2925  0017FE  0E00               	movlw	0
  2926  001800  6F04               	movwf	___flmul@a& (0+255),b
  2927  001802  0E00               	movlw	0
  2928  001804  6F05               	movwf	(___flmul@a+1)& (0+255),b
  2929  001806  0E00               	movlw	0
  2930  001808  6F06               	movwf	(___flmul@a+2)& (0+255),b
  2931  00180A  0E00               	movlw	0
  2932  00180C  6F07               	movwf	(___flmul@a+3)& (0+255),b
  2933  00180E                     l917:
  2934                           
  2935                           ; BSR set to: 1
  2936                           
  2937                           ; BSR set to: 1
  2938  00180E  8F06               	bsf	(___flmul@a+2)& (0+255),7,b
  2939  001810  D008               	goto	l918
  2940  001812                     l916:
  2941                           
  2942                           ; BSR set to: 1
  2943                           
  2944                           ; BSR set to: 1
  2945  001812  0E00               	movlw	0
  2946  001814  6F04               	movwf	___flmul@a& (0+255),b
  2947  001816  0E00               	movlw	0
  2948  001818  6F05               	movwf	(___flmul@a+1)& (0+255),b
  2949  00181A  0E00               	movlw	0
  2950  00181C  6F06               	movwf	(___flmul@a+2)& (0+255),b
  2951  00181E  0E00               	movlw	0
  2952  001820  6F07               	movwf	(___flmul@a+3)& (0+255),b
  2953  001822                     l918:
  2954                           
  2955                           ; BSR set to: 1
  2956  001822  510D               	movf	___flmul@aexp& (0+255),w,b
  2957  001824  B4D8               	btfsc	status,2,c
  2958  001826  D003               	goto	u7230
  2959                           
  2960                           ; BSR set to: 1
  2961  001828  5112               	movf	___flmul@bexp& (0+255),w,b
  2962  00182A  A4D8               	btfss	status,2,c
  2963  00182C  D009               	goto	l919
  2964  00182E                     u7230:
  2965                           
  2966                           ; BSR set to: 1
  2967                           
  2968                           ; BSR set to: 1
  2969  00182E  0E00               	movlw	0
  2970  001830  6F00               	movwf	?___flmul& (0+255),b
  2971  001832  0E00               	movlw	0
  2972  001834  6F01               	movwf	(?___flmul+1)& (0+255),b
  2973  001836  0E00               	movlw	0
  2974  001838  6F02               	movwf	(?___flmul+2)& (0+255),b
  2975  00183A  0E00               	movlw	0
  2976  00183C  6F03               	movwf	(?___flmul+3)& (0+255),b
  2977                           
  2978                           ; BSR set to: 1
  2979  00183E  0012               	return	
  2980  001840                     l919:
  2981                           
  2982                           ; BSR set to: 1
  2983                           
  2984                           ; BSR set to: 1
  2985  001840  5106               	movf	(___flmul@a+2)& (0+255),w,b
  2986  001842  0300               	mulwf	___flmul@b& (0+255),b
  2987  001844  CFF3 F117          	movff	prodl,___flmul@temp
  2988  001848  CFF4 F118          	movff	prodh,___flmul@temp+1
  2989                           
  2990                           ; BSR set to: 1
  2991  00184C  5117               	movf	___flmul@temp& (0+255),w,b
  2992  00184E  6F0E               	movwf	___flmul@grs& (0+255),b
  2993  001850  6B0F               	clrf	(___flmul@grs+1)& (0+255),b
  2994  001852  6B10               	clrf	(___flmul@grs+2)& (0+255),b
  2995  001854  6B11               	clrf	(___flmul@grs+3)& (0+255),b
  2996                           
  2997                           ; BSR set to: 1
  2998  001856  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  2999  001858  6F13               	movwf	___flmul@prod& (0+255),b
  3000  00185A  6B14               	clrf	(___flmul@prod+1)& (0+255),b
  3001  00185C  6B15               	clrf	(___flmul@prod+2)& (0+255),b
  3002  00185E  6B16               	clrf	(___flmul@prod+3)& (0+255),b
  3003  001860  5105               	movf	(___flmul@a+1)& (0+255),w,b
  3004  001862  0301               	mulwf	(___flmul@b+1)& (0+255),b
  3005  001864  CFF3 F117          	movff	prodl,___flmul@temp
  3006  001868  CFF4 F118          	movff	prodh,___flmul@temp+1
  3007                           
  3008                           ; BSR set to: 1
  3009  00186C  5117               	movf	___flmul@temp& (0+255),w,b
  3010  00186E  270E               	addwf	___flmul@grs& (0+255),f,b
  3011  001870  0E00               	movlw	0
  3012  001872  230F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3013  001874  2310               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3014  001876  2311               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3015                           
  3016                           ; BSR set to: 1
  3017  001878  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  3018  00187A  2713               	addwf	___flmul@prod& (0+255),f,b
  3019  00187C  0E00               	movlw	0
  3020  00187E  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3021  001880  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3022  001882  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3023  001884  5104               	movf	___flmul@a& (0+255),w,b
  3024  001886  0302               	mulwf	(___flmul@b+2)& (0+255),b
  3025  001888  CFF3 F117          	movff	prodl,___flmul@temp
  3026  00188C  CFF4 F118          	movff	prodh,___flmul@temp+1
  3027                           
  3028                           ; BSR set to: 1
  3029  001890  5117               	movf	___flmul@temp& (0+255),w,b
  3030  001892  270E               	addwf	___flmul@grs& (0+255),f,b
  3031  001894  0E00               	movlw	0
  3032  001896  230F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3033  001898  2310               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3034  00189A  2311               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3035                           
  3036                           ; BSR set to: 1
  3037  00189C  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  3038  00189E  2713               	addwf	___flmul@prod& (0+255),f,b
  3039  0018A0  0E00               	movlw	0
  3040  0018A2  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3041  0018A4  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3042  0018A6  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3043                           
  3044                           ; BSR set to: 1
  3045  0018A8  C110  F111         	movff	___flmul@grs+2,___flmul@grs+3
  3046  0018AC  C10F  F110         	movff	___flmul@grs+1,___flmul@grs+2
  3047  0018B0  C10E  F10F         	movff	___flmul@grs,___flmul@grs+1
  3048  0018B4  6B0E               	clrf	___flmul@grs& (0+255),b
  3049                           
  3050                           ; BSR set to: 1
  3051  0018B6  5104               	movf	___flmul@a& (0+255),w,b
  3052  0018B8  0301               	mulwf	(___flmul@b+1)& (0+255),b
  3053  0018BA  CFF3 F117          	movff	prodl,___flmul@temp
  3054  0018BE  CFF4 F118          	movff	prodh,___flmul@temp+1
  3055                           
  3056                           ; BSR set to: 1
  3057  0018C2  5117               	movf	___flmul@temp& (0+255),w,b
  3058  0018C4  270E               	addwf	___flmul@grs& (0+255),f,b
  3059  0018C6  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  3060  0018C8  230F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3061  0018CA  0E00               	movlw	0
  3062  0018CC  2310               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3063  0018CE  0E00               	movlw	0
  3064  0018D0  2311               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3065                           
  3066                           ; BSR set to: 1
  3067  0018D2  5105               	movf	(___flmul@a+1)& (0+255),w,b
  3068  0018D4  0300               	mulwf	___flmul@b& (0+255),b
  3069  0018D6  CFF3 F117          	movff	prodl,___flmul@temp
  3070  0018DA  CFF4 F118          	movff	prodh,___flmul@temp+1
  3071                           
  3072                           ; BSR set to: 1
  3073  0018DE  5117               	movf	___flmul@temp& (0+255),w,b
  3074  0018E0  270E               	addwf	___flmul@grs& (0+255),f,b
  3075  0018E2  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  3076  0018E4  230F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3077  0018E6  0E00               	movlw	0
  3078  0018E8  2310               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3079  0018EA  0E00               	movlw	0
  3080  0018EC  2311               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3081                           
  3082                           ; BSR set to: 1
  3083  0018EE  C110  F111         	movff	___flmul@grs+2,___flmul@grs+3
  3084  0018F2  C10F  F110         	movff	___flmul@grs+1,___flmul@grs+2
  3085  0018F6  C10E  F10F         	movff	___flmul@grs,___flmul@grs+1
  3086  0018FA  6B0E               	clrf	___flmul@grs& (0+255),b
  3087  0018FC  5104               	movf	___flmul@a& (0+255),w,b
  3088  0018FE  0300               	mulwf	___flmul@b& (0+255),b
  3089  001900  CFF3 F117          	movff	prodl,___flmul@temp
  3090  001904  CFF4 F118          	movff	prodh,___flmul@temp+1
  3091                           
  3092                           ; BSR set to: 1
  3093  001908  5117               	movf	___flmul@temp& (0+255),w,b
  3094  00190A  270E               	addwf	___flmul@grs& (0+255),f,b
  3095  00190C  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  3096  00190E  230F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3097  001910  0E00               	movlw	0
  3098  001912  2310               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3099  001914  0E00               	movlw	0
  3100  001916  2311               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3101                           
  3102                           ; BSR set to: 1
  3103  001918  5106               	movf	(___flmul@a+2)& (0+255),w,b
  3104  00191A  0301               	mulwf	(___flmul@b+1)& (0+255),b
  3105  00191C  CFF3 F117          	movff	prodl,___flmul@temp
  3106  001920  CFF4 F118          	movff	prodh,___flmul@temp+1
  3107  001924  5117               	movf	___flmul@temp& (0+255),w,b
  3108  001926  2713               	addwf	___flmul@prod& (0+255),f,b
  3109  001928  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  3110  00192A  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3111  00192C  0E00               	movlw	0
  3112  00192E  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3113  001930  0E00               	movlw	0
  3114  001932  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3115                           
  3116                           ; BSR set to: 1
  3117  001934  5105               	movf	(___flmul@a+1)& (0+255),w,b
  3118  001936  0302               	mulwf	(___flmul@b+2)& (0+255),b
  3119  001938  CFF3 F117          	movff	prodl,___flmul@temp
  3120  00193C  CFF4 F118          	movff	prodh,___flmul@temp+1
  3121                           
  3122                           ; BSR set to: 1
  3123  001940  5117               	movf	___flmul@temp& (0+255),w,b
  3124  001942  2713               	addwf	___flmul@prod& (0+255),f,b
  3125  001944  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  3126  001946  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3127  001948  0E00               	movlw	0
  3128  00194A  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3129  00194C  0E00               	movlw	0
  3130  00194E  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3131  001950  5106               	movf	(___flmul@a+2)& (0+255),w,b
  3132  001952  0302               	mulwf	(___flmul@b+2)& (0+255),b
  3133  001954  CFF3 F117          	movff	prodl,___flmul@temp
  3134  001958  CFF4 F118          	movff	prodh,___flmul@temp+1
  3135                           
  3136                           ; BSR set to: 1
  3137  00195C  5117               	movf	___flmul@temp& (0+255),w,b
  3138  00195E  6F08               	movwf	??___flmul& (0+255),b
  3139  001960  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  3140  001962  6F09               	movwf	(??___flmul+1)& (0+255),b
  3141  001964  6B0A               	clrf	(??___flmul+2)& (0+255),b
  3142  001966  6B0B               	clrf	(??___flmul+3)& (0+255),b
  3143  001968  C10A  F10B         	movff	??___flmul+2,??___flmul+3
  3144  00196C  C109  F10A         	movff	??___flmul+1,??___flmul+2
  3145  001970  C108  F109         	movff	??___flmul,??___flmul+1
  3146  001974  6B08               	clrf	??___flmul& (0+255),b
  3147  001976  5108               	movf	??___flmul& (0+255),w,b
  3148  001978  2713               	addwf	___flmul@prod& (0+255),f,b
  3149  00197A  5109               	movf	(??___flmul+1)& (0+255),w,b
  3150  00197C  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3151  00197E  510A               	movf	(??___flmul+2)& (0+255),w,b
  3152  001980  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3153  001982  510B               	movf	(??___flmul+3)& (0+255),w,b
  3154  001984  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3155                           
  3156                           ; BSR set to: 1
  3157  001986  C10E  F108         	movff	___flmul@grs,??___flmul
  3158  00198A  C10F  F109         	movff	___flmul@grs+1,??___flmul+1
  3159  00198E  C110  F10A         	movff	___flmul@grs+2,??___flmul+2
  3160  001992  C111  F10B         	movff	___flmul@grs+3,??___flmul+3
  3161  001996  0E19               	movlw	25
  3162  001998  D005               	goto	u7240
  3163  00199A                     u7245:
  3164  00199A  90D8               	bcf	status,0,c
  3165  00199C  330B               	rrcf	(??___flmul+3)& (0+255),f,b
  3166  00199E  330A               	rrcf	(??___flmul+2)& (0+255),f,b
  3167  0019A0  3309               	rrcf	(??___flmul+1)& (0+255),f,b
  3168  0019A2  3308               	rrcf	??___flmul& (0+255),f,b
  3169  0019A4                     u7240:
  3170  0019A4  2EE8               	decfsz	wreg,f,c
  3171  0019A6  D7F9               	goto	u7245
  3172  0019A8  5108               	movf	??___flmul& (0+255),w,b
  3173  0019AA  2713               	addwf	___flmul@prod& (0+255),f,b
  3174  0019AC  5109               	movf	(??___flmul+1)& (0+255),w,b
  3175  0019AE  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3176  0019B0  510A               	movf	(??___flmul+2)& (0+255),w,b
  3177  0019B2  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3178  0019B4  510B               	movf	(??___flmul+3)& (0+255),w,b
  3179  0019B6  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3180                           
  3181                           ; BSR set to: 1
  3182  0019B8  C110  F111         	movff	___flmul@grs+2,___flmul@grs+3
  3183  0019BC  C10F  F110         	movff	___flmul@grs+1,___flmul@grs+2
  3184  0019C0  C10E  F10F         	movff	___flmul@grs,___flmul@grs+1
  3185  0019C4  6B0E               	clrf	___flmul@grs& (0+255),b
  3186                           
  3187                           ; BSR set to: 1
  3188  0019C6  510D               	movf	___flmul@aexp& (0+255),w,b
  3189  0019C8  C112  F108         	movff	___flmul@bexp,??___flmul
  3190  0019CC  6B09               	clrf	(??___flmul+1)& (0+255),b
  3191  0019CE  2708               	addwf	??___flmul& (0+255),f,b
  3192  0019D0  0E00               	movlw	0
  3193  0019D2  2309               	addwfc	(??___flmul+1)& (0+255),f,b
  3194  0019D4  0E82               	movlw	130
  3195  0019D6  2508               	addwf	??___flmul& (0+255),w,b
  3196  0019D8  6F17               	movwf	___flmul@temp& (0+255),b
  3197  0019DA  0EFF               	movlw	255
  3198  0019DC  2109               	addwfc	(??___flmul+1)& (0+255),w,b
  3199  0019DE  6F18               	movwf	(___flmul@temp+1)& (0+255),b
  3200  0019E0  D00F               	goto	l923
  3201  0019E2                     
  3202                           ; BSR set to: 1
  3203                           
  3204                           ; BSR set to: 1
  3205  0019E2  90D8               	bcf	status,0,c
  3206  0019E4  3713               	rlcf	___flmul@prod& (0+255),f,b
  3207  0019E6  3714               	rlcf	(___flmul@prod+1)& (0+255),f,b
  3208  0019E8  3715               	rlcf	(___flmul@prod+2)& (0+255),f,b
  3209  0019EA  3716               	rlcf	(___flmul@prod+3)& (0+255),f,b
  3210                           
  3211                           ; BSR set to: 1
  3212  0019EC  BF11               	btfsc	(___flmul@grs+3)& (0+255),7,b
  3213                           
  3214                           ; BSR set to: 1
  3215  0019EE  8113               	bsf	___flmul@prod& (0+255),0,b
  3216                           
  3217                           ; BSR set to: 1
  3218  0019F0  90D8               	bcf	status,0,c
  3219  0019F2  370E               	rlcf	___flmul@grs& (0+255),f,b
  3220  0019F4  370F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  3221  0019F6  3710               	rlcf	(___flmul@grs+2)& (0+255),f,b
  3222  0019F8  3711               	rlcf	(___flmul@grs+3)& (0+255),f,b
  3223  0019FA  0717               	decf	___flmul@temp& (0+255),f,b
  3224  0019FC  A0D8               	btfss	status,0,c
  3225  0019FE  0718               	decf	(___flmul@temp+1)& (0+255),f,b
  3226  001A00                     l923:
  3227                           
  3228                           ; BSR set to: 1
  3229                           
  3230                           ; BSR set to: 1
  3231  001A00  AF15               	btfss	(___flmul@prod+2)& (0+255),7,b
  3232  001A02  D7EF               	goto	l924
  3233                           
  3234                           ; BSR set to: 1
  3235                           
  3236                           ; BSR set to: 1
  3237  001A04  0E00               	movlw	0
  3238  001A06  6F0D               	movwf	___flmul@aexp& (0+255),b
  3239                           
  3240                           ; BSR set to: 1
  3241  001A08  AF11               	btfss	(___flmul@grs+3)& (0+255),7,b
  3242  001A0A  D016               	goto	l930
  3243                           
  3244                           ; BSR set to: 1
  3245  001A0C  0EFF               	movlw	255
  3246  001A0E  150E               	andwf	___flmul@grs& (0+255),w,b
  3247  001A10  6F08               	movwf	??___flmul& (0+255),b
  3248  001A12  0EFF               	movlw	255
  3249  001A14  150F               	andwf	(___flmul@grs+1)& (0+255),w,b
  3250  001A16  6F09               	movwf	(??___flmul+1)& (0+255),b
  3251  001A18  0EFF               	movlw	255
  3252  001A1A  1510               	andwf	(___flmul@grs+2)& (0+255),w,b
  3253  001A1C  6F0A               	movwf	(??___flmul+2)& (0+255),b
  3254  001A1E  0E7F               	movlw	127
  3255  001A20  1511               	andwf	(___flmul@grs+3)& (0+255),w,b
  3256  001A22  6F0B               	movwf	(??___flmul+3)& (0+255),b
  3257  001A24  5108               	movf	??___flmul& (0+255),w,b
  3258  001A26  1109               	iorwf	(??___flmul+1)& (0+255),w,b
  3259  001A28  110A               	iorwf	(??___flmul+2)& (0+255),w,b
  3260  001A2A  110B               	iorwf	(??___flmul+3)& (0+255),w,b
  3261  001A2C  A4D8               	btfss	status,2,c
  3262  001A2E  D002               	goto	u7290
  3263                           
  3264                           ; BSR set to: 1
  3265                           
  3266                           ; BSR set to: 1
  3267  001A30  A113               	btfss	___flmul@prod& (0+255),0,b
  3268  001A32  D002               	goto	l930
  3269  001A34                     u7290:
  3270                           
  3271                           ; BSR set to: 1
  3272  001A34  0E01               	movlw	1
  3273  001A36  6F0D               	movwf	___flmul@aexp& (0+255),b
  3274  001A38                     l930:
  3275                           
  3276                           ; BSR set to: 1
  3277                           
  3278                           ; BSR set to: 1
  3279                           
  3280                           ; BSR set to: 1
  3281  001A38  510D               	movf	___flmul@aexp& (0+255),w,b
  3282  001A3A  B4D8               	btfsc	status,2,c
  3283  001A3C  D01F               	goto	l932
  3284                           
  3285                           ; BSR set to: 1
  3286  001A3E  0E01               	movlw	1
  3287  001A40  2713               	addwf	___flmul@prod& (0+255),f,b
  3288  001A42  0E00               	movlw	0
  3289  001A44  2314               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3290  001A46  2315               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3291  001A48  2316               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3292                           
  3293                           ; BSR set to: 1
  3294  001A4A  A116               	btfss	(___flmul@prod+3)& (0+255),0,b
  3295  001A4C  D017               	goto	l932
  3296                           
  3297                           ; BSR set to: 1
  3298  001A4E  C113  F108         	movff	___flmul@prod,??___flmul
  3299  001A52  C114  F109         	movff	___flmul@prod+1,??___flmul+1
  3300  001A56  C115  F10A         	movff	___flmul@prod+2,??___flmul+2
  3301  001A5A  C116  F10B         	movff	___flmul@prod+3,??___flmul+3
  3302  001A5E  350B               	rlcf	(??___flmul+3)& (0+255),w,b
  3303  001A60  330B               	rrcf	(??___flmul+3)& (0+255),f,b
  3304  001A62  330A               	rrcf	(??___flmul+2)& (0+255),f,b
  3305  001A64  3309               	rrcf	(??___flmul+1)& (0+255),f,b
  3306  001A66  3308               	rrcf	??___flmul& (0+255),f,b
  3307  001A68  C108  F113         	movff	??___flmul,___flmul@prod
  3308  001A6C  C109  F114         	movff	??___flmul+1,___flmul@prod+1
  3309  001A70  C10A  F115         	movff	??___flmul+2,___flmul@prod+2
  3310  001A74  C10B  F116         	movff	??___flmul+3,___flmul@prod+3
  3311                           
  3312                           ; BSR set to: 1
  3313  001A78  4B17               	infsnz	___flmul@temp& (0+255),f,b
  3314  001A7A  2B18               	incf	(___flmul@temp+1)& (0+255),f,b
  3315  001A7C                     l932:
  3316                           
  3317                           ; BSR set to: 1
  3318                           
  3319                           ; BSR set to: 1
  3320                           
  3321                           ; BSR set to: 1
  3322  001A7C  BF18               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3323  001A7E  D00D               	goto	l933
  3324  001A80  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  3325  001A82  E103               	bnz	u7320
  3326  001A84  2917               	incf	___flmul@temp& (0+255),w,b
  3327  001A86  A0D8               	btfss	status,0,c
  3328  001A88  D008               	goto	l933
  3329  001A8A                     u7320:
  3330                           
  3331                           ; BSR set to: 1
  3332  001A8A  0E00               	movlw	0
  3333  001A8C  6F13               	movwf	___flmul@prod& (0+255),b
  3334  001A8E  0E00               	movlw	0
  3335  001A90  6F14               	movwf	(___flmul@prod+1)& (0+255),b
  3336  001A92  0E80               	movlw	128
  3337  001A94  6F15               	movwf	(___flmul@prod+2)& (0+255),b
  3338  001A96  0E7F               	movlw	127
  3339  001A98  D020               	goto	L1
  3340  001A9A                     l933:
  3341                           
  3342                           ; BSR set to: 1
  3343                           
  3344                           ; BSR set to: 1
  3345  001A9A  BF18               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3346  001A9C  D005               	goto	u7330
  3347  001A9E  5118               	movf	(___flmul@temp+1)& (0+255),w,b
  3348  001AA0  E10E               	bnz	l935
  3349  001AA2  0517               	decf	___flmul@temp& (0+255),w,b
  3350  001AA4  B0D8               	btfsc	status,0,c
  3351  001AA6  D00B               	goto	l935
  3352  001AA8                     u7330:
  3353                           
  3354                           ; BSR set to: 1
  3355  001AA8  0E00               	movlw	0
  3356  001AAA  6F13               	movwf	___flmul@prod& (0+255),b
  3357  001AAC  0E00               	movlw	0
  3358  001AAE  6F14               	movwf	(___flmul@prod+1)& (0+255),b
  3359  001AB0  0E00               	movlw	0
  3360  001AB2  6F15               	movwf	(___flmul@prod+2)& (0+255),b
  3361  001AB4  0E00               	movlw	0
  3362  001AB6  6F16               	movwf	(___flmul@prod+3)& (0+255),b
  3363  001AB8  0E00               	movlw	0
  3364  001ABA  6F0C               	movwf	___flmul@sign& (0+255),b
  3365  001ABC  D00F               	goto	l936
  3366  001ABE                     l935:
  3367                           
  3368                           ; BSR set to: 1
  3369  001ABE  C117  F112         	movff	___flmul@temp,___flmul@bexp
  3370                           
  3371                           ; BSR set to: 1
  3372  001AC2  0EFF               	movlw	255
  3373  001AC4  1713               	andwf	___flmul@prod& (0+255),f,b
  3374  001AC6  0EFF               	movlw	255
  3375  001AC8  1714               	andwf	(___flmul@prod+1)& (0+255),f,b
  3376  001ACA  0E7F               	movlw	127
  3377  001ACC  1715               	andwf	(___flmul@prod+2)& (0+255),f,b
  3378  001ACE  0E00               	movlw	0
  3379  001AD0  1716               	andwf	(___flmul@prod+3)& (0+255),f,b
  3380                           
  3381                           ; BSR set to: 1
  3382  001AD2  B112               	btfsc	___flmul@bexp& (0+255),0,b
  3383                           
  3384                           ; BSR set to: 1
  3385  001AD4  8F15               	bsf	(___flmul@prod+2)& (0+255),7,b
  3386                           
  3387                           ; BSR set to: 1
  3388                           
  3389                           ; BSR set to: 1
  3390  001AD6  90D8               	bcf	status,0,c
  3391  001AD8  3112               	rrcf	___flmul@bexp& (0+255),w,b
  3392  001ADA                     L1:
  3393  001ADA  6F16               	movwf	(___flmul@prod+3)& (0+255),b
  3394  001ADC                     l936:
  3395                           
  3396                           ; BSR set to: 1
  3397                           
  3398                           ; BSR set to: 1
  3399                           
  3400                           ; BSR set to: 1
  3401  001ADC  510C               	movf	___flmul@sign& (0+255),w,b
  3402  001ADE  1316               	iorwf	(___flmul@prod+3)& (0+255),f,b
  3403                           
  3404                           ; BSR set to: 1
  3405  001AE0  C113  F100         	movff	___flmul@prod,?___flmul
  3406  001AE4  C114  F101         	movff	___flmul@prod+1,?___flmul+1
  3407  001AE8  C115  F102         	movff	___flmul@prod+2,?___flmul+2
  3408  001AEC  C116  F103         	movff	___flmul@prod+3,?___flmul+3
  3409  001AF0  0012               	return	
  3410  001AF2                     __end_of___flmul:
  3411                           	opt stack 0
  3412                           tblptru	equ	0xFF8
  3413                           prodh	equ	0xFF4
  3414                           prodl	equ	0xFF3
  3415                           postinc0	equ	0xFEE
  3416                           wreg	equ	0xFE8
  3417                           indf2	equ	0xFDF
  3418                           postinc2	equ	0xFDE
  3419                           postdec2	equ	0xFDD
  3420                           fsr2h	equ	0xFDA
  3421                           fsr2l	equ	0xFD9
  3422                           status	equ	0xFD8
  3423                           
  3424 ;; *************** function ___flge *****************
  3425 ;; Defined at:
  3426 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  ff1             4    0[BANK1 ] unsigned char 
  3429 ;;  ff2             4    4[BANK1 ] unsigned char 
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;		None               void
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3441 ;;      Params:         0       0       8       0       0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3443 ;;      Temps:          0       0       4       0       0       0       0       0       0
  3444 ;;      Totals:         0       0      12       0       0       0       0       0       0
  3445 ;;Total ram usage:       12 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    4
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_strtod
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text13
  3456  0031C8                     __ptext13:
  3457                           	opt stack 0
  3458  0031C8                     ___flge:
  3459                           	opt stack 24
  3460                           
  3461                           ; BSR set to: 1
  3462                           ;incstack = 0
  3463  0031C8  0E00               	movlw	0
  3464  0031CA  0101               	movlb	1	; () banked
  3465  0031CC  1500               	andwf	___flge@ff1& (0+255),w,b
  3466  0031CE  6F08               	movwf	??___flge& (0+255),b
  3467  0031D0  0E00               	movlw	0
  3468  0031D2  1501               	andwf	(___flge@ff1+1)& (0+255),w,b
  3469  0031D4  6F09               	movwf	(??___flge+1)& (0+255),b
  3470  0031D6  0E80               	movlw	128
  3471  0031D8  1502               	andwf	(___flge@ff1+2)& (0+255),w,b
  3472  0031DA  6F0A               	movwf	(??___flge+2)& (0+255),b
  3473  0031DC  0E7F               	movlw	127
  3474  0031DE  1503               	andwf	(___flge@ff1+3)& (0+255),w,b
  3475  0031E0  6F0B               	movwf	(??___flge+3)& (0+255),b
  3476  0031E2  5108               	movf	??___flge& (0+255),w,b
  3477  0031E4  1109               	iorwf	(??___flge+1)& (0+255),w,b
  3478  0031E6  110A               	iorwf	(??___flge+2)& (0+255),w,b
  3479  0031E8  110B               	iorwf	(??___flge+3)& (0+255),w,b
  3480  0031EA  A4D8               	btfss	status,2,c
  3481  0031EC  D008               	goto	l561
  3482                           
  3483                           ; BSR set to: 1
  3484  0031EE  0E00               	movlw	0
  3485  0031F0  6F00               	movwf	___flge@ff1& (0+255),b
  3486  0031F2  0E00               	movlw	0
  3487  0031F4  6F01               	movwf	(___flge@ff1+1)& (0+255),b
  3488  0031F6  0E00               	movlw	0
  3489  0031F8  6F02               	movwf	(___flge@ff1+2)& (0+255),b
  3490  0031FA  0E00               	movlw	0
  3491  0031FC  6F03               	movwf	(___flge@ff1+3)& (0+255),b
  3492  0031FE                     l561:
  3493                           
  3494                           ; BSR set to: 1
  3495                           
  3496                           ; BSR set to: 1
  3497  0031FE  0E00               	movlw	0
  3498  003200  1504               	andwf	___flge@ff2& (0+255),w,b
  3499  003202  6F08               	movwf	??___flge& (0+255),b
  3500  003204  0E00               	movlw	0
  3501  003206  1505               	andwf	(___flge@ff2+1)& (0+255),w,b
  3502  003208  6F09               	movwf	(??___flge+1)& (0+255),b
  3503  00320A  0E80               	movlw	128
  3504  00320C  1506               	andwf	(___flge@ff2+2)& (0+255),w,b
  3505  00320E  6F0A               	movwf	(??___flge+2)& (0+255),b
  3506  003210  0E7F               	movlw	127
  3507  003212  1507               	andwf	(___flge@ff2+3)& (0+255),w,b
  3508  003214  6F0B               	movwf	(??___flge+3)& (0+255),b
  3509  003216  5108               	movf	??___flge& (0+255),w,b
  3510  003218  1109               	iorwf	(??___flge+1)& (0+255),w,b
  3511  00321A  110A               	iorwf	(??___flge+2)& (0+255),w,b
  3512  00321C  110B               	iorwf	(??___flge+3)& (0+255),w,b
  3513  00321E  A4D8               	btfss	status,2,c
  3514  003220  D008               	goto	l562
  3515                           
  3516                           ; BSR set to: 1
  3517  003222  0E00               	movlw	0
  3518  003224  6F04               	movwf	___flge@ff2& (0+255),b
  3519  003226  0E00               	movlw	0
  3520  003228  6F05               	movwf	(___flge@ff2+1)& (0+255),b
  3521  00322A  0E00               	movlw	0
  3522  00322C  6F06               	movwf	(___flge@ff2+2)& (0+255),b
  3523  00322E  0E00               	movlw	0
  3524  003230  6F07               	movwf	(___flge@ff2+3)& (0+255),b
  3525  003232                     l562:
  3526                           
  3527                           ; BSR set to: 1
  3528                           
  3529                           ; BSR set to: 1
  3530  003232  AF03               	btfss	(___flge@ff1+3)& (0+255),7,b
  3531  003234  D01D               	goto	l563
  3532                           
  3533                           ; BSR set to: 1
  3534  003236  C100  F108         	movff	___flge@ff1,??___flge
  3535  00323A  C101  F109         	movff	___flge@ff1+1,??___flge+1
  3536  00323E  C102  F10A         	movff	___flge@ff1+2,??___flge+2
  3537  003242  C103  F10B         	movff	___flge@ff1+3,??___flge+3
  3538  003246  1F08               	comf	??___flge& (0+255),f,b
  3539  003248  1F09               	comf	(??___flge+1)& (0+255),f,b
  3540  00324A  1F0A               	comf	(??___flge+2)& (0+255),f,b
  3541  00324C  1F0B               	comf	(??___flge+3)& (0+255),f,b
  3542  00324E  2B08               	incf	??___flge& (0+255),f,b
  3543  003250  0E00               	movlw	0
  3544  003252  2309               	addwfc	(??___flge+1)& (0+255),f,b
  3545  003254  230A               	addwfc	(??___flge+2)& (0+255),f,b
  3546  003256  230B               	addwfc	(??___flge+3)& (0+255),f,b
  3547  003258  0E00               	movlw	0
  3548  00325A  2508               	addwf	??___flge& (0+255),w,b
  3549  00325C  6F00               	movwf	___flge@ff1& (0+255),b
  3550  00325E  0E00               	movlw	0
  3551  003260  2109               	addwfc	(??___flge+1)& (0+255),w,b
  3552  003262  6F01               	movwf	(___flge@ff1+1)& (0+255),b
  3553  003264  0E00               	movlw	0
  3554  003266  210A               	addwfc	(??___flge+2)& (0+255),w,b
  3555  003268  6F02               	movwf	(___flge@ff1+2)& (0+255),b
  3556  00326A  0E80               	movlw	128
  3557  00326C  210B               	addwfc	(??___flge+3)& (0+255),w,b
  3558  00326E  6F03               	movwf	(___flge@ff1+3)& (0+255),b
  3559  003270                     l563:
  3560                           
  3561                           ; BSR set to: 1
  3562                           
  3563                           ; BSR set to: 1
  3564  003270  AF07               	btfss	(___flge@ff2+3)& (0+255),7,b
  3565  003272  D01D               	goto	l564
  3566                           
  3567                           ; BSR set to: 1
  3568  003274  C104  F108         	movff	___flge@ff2,??___flge
  3569  003278  C105  F109         	movff	___flge@ff2+1,??___flge+1
  3570  00327C  C106  F10A         	movff	___flge@ff2+2,??___flge+2
  3571  003280  C107  F10B         	movff	___flge@ff2+3,??___flge+3
  3572  003284  1F08               	comf	??___flge& (0+255),f,b
  3573  003286  1F09               	comf	(??___flge+1)& (0+255),f,b
  3574  003288  1F0A               	comf	(??___flge+2)& (0+255),f,b
  3575  00328A  1F0B               	comf	(??___flge+3)& (0+255),f,b
  3576  00328C  2B08               	incf	??___flge& (0+255),f,b
  3577  00328E  0E00               	movlw	0
  3578  003290  2309               	addwfc	(??___flge+1)& (0+255),f,b
  3579  003292  230A               	addwfc	(??___flge+2)& (0+255),f,b
  3580  003294  230B               	addwfc	(??___flge+3)& (0+255),f,b
  3581  003296  0E00               	movlw	0
  3582  003298  2508               	addwf	??___flge& (0+255),w,b
  3583  00329A  6F04               	movwf	___flge@ff2& (0+255),b
  3584  00329C  0E00               	movlw	0
  3585  00329E  2109               	addwfc	(??___flge+1)& (0+255),w,b
  3586  0032A0  6F05               	movwf	(___flge@ff2+1)& (0+255),b
  3587  0032A2  0E00               	movlw	0
  3588  0032A4  210A               	addwfc	(??___flge+2)& (0+255),w,b
  3589  0032A6  6F06               	movwf	(___flge@ff2+2)& (0+255),b
  3590  0032A8  0E80               	movlw	128
  3591  0032AA  210B               	addwfc	(??___flge+3)& (0+255),w,b
  3592  0032AC  6F07               	movwf	(___flge@ff2+3)& (0+255),b
  3593  0032AE                     l564:
  3594                           
  3595                           ; BSR set to: 1
  3596  0032AE  0E00               	movlw	0
  3597  0032B0  1B00               	xorwf	___flge@ff1& (0+255),f,b
  3598  0032B2  0E00               	movlw	0
  3599  0032B4  1B01               	xorwf	(___flge@ff1+1)& (0+255),f,b
  3600  0032B6  0E00               	movlw	0
  3601  0032B8  1B02               	xorwf	(___flge@ff1+2)& (0+255),f,b
  3602  0032BA  0E80               	movlw	128
  3603  0032BC  1B03               	xorwf	(___flge@ff1+3)& (0+255),f,b
  3604  0032BE  0E00               	movlw	0
  3605  0032C0  1B04               	xorwf	___flge@ff2& (0+255),f,b
  3606  0032C2  0E00               	movlw	0
  3607  0032C4  1B05               	xorwf	(___flge@ff2+1)& (0+255),f,b
  3608  0032C6  0E00               	movlw	0
  3609  0032C8  1B06               	xorwf	(___flge@ff2+2)& (0+255),f,b
  3610  0032CA  0E80               	movlw	128
  3611  0032CC  1B07               	xorwf	(___flge@ff2+3)& (0+255),f,b
  3612  0032CE  5104               	movf	___flge@ff2& (0+255),w,b
  3613  0032D0  5D00               	subwf	___flge@ff1& (0+255),w,b
  3614  0032D2  5105               	movf	(___flge@ff2+1)& (0+255),w,b
  3615  0032D4  5901               	subwfb	(___flge@ff1+1)& (0+255),w,b
  3616  0032D6  5106               	movf	(___flge@ff2+2)& (0+255),w,b
  3617  0032D8  5902               	subwfb	(___flge@ff1+2)& (0+255),w,b
  3618  0032DA  5107               	movf	(___flge@ff2+3)& (0+255),w,b
  3619  0032DC  5903               	subwfb	(___flge@ff1+3)& (0+255),w,b
  3620  0032DE  B0D8               	btfsc	status,0,c
  3621  0032E0  D002               	goto	l4882
  3622                           
  3623                           ; BSR set to: 1
  3624  0032E2  90D8               	bcf	status,0,c
  3625  0032E4  0012               	return	
  3626  0032E6                     l4882:
  3627                           
  3628                           ; BSR set to: 1
  3629                           
  3630                           ; BSR set to: 1
  3631  0032E6  80D8               	bsf	status,0,c
  3632                           
  3633                           ; BSR set to: 1
  3634  0032E8  0012               	return	
  3635  0032EA                     __end_of___flge:
  3636                           	opt stack 0
  3637                           tblptru	equ	0xFF8
  3638                           prodh	equ	0xFF4
  3639                           prodl	equ	0xFF3
  3640                           postinc0	equ	0xFEE
  3641                           wreg	equ	0xFE8
  3642                           indf2	equ	0xFDF
  3643                           postinc2	equ	0xFDE
  3644                           postdec2	equ	0xFDD
  3645                           fsr2h	equ	0xFDA
  3646                           fsr2l	equ	0xFD9
  3647                           status	equ	0xFD8
  3648                           
  3649 ;; *************** function ___fldiv *****************
  3650 ;; Defined at:
  3651 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  b               4    0[BANK1 ] unsigned char 
  3654 ;;  a               4    4[BANK1 ] unsigned char 
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  grs             4   19[BANK1 ] unsigned long 
  3657 ;;  rem             4   13[BANK1 ] unsigned long 
  3658 ;;  new_exp         2   17[BANK1 ] int 
  3659 ;;  aexp            1   24[BANK1 ] unsigned char 
  3660 ;;  bexp            1   23[BANK1 ] unsigned char 
  3661 ;;  sign            1   12[BANK1 ] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  4    0[BANK1 ] unsigned char 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3671 ;;      Params:         0       0       8       0       0       0       0       0       0
  3672 ;;      Locals:         0       0      13       0       0       0       0       0       0
  3673 ;;      Temps:          0       0       4       0       0       0       0       0       0
  3674 ;;      Totals:         0       0      25       0       0       0       0       0       0
  3675 ;;Total ram usage:       25 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    4
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_strtod
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text14
  3686  00217E                     __ptext14:
  3687                           	opt stack 0
  3688  00217E                     ___fldiv:
  3689                           	opt stack 24
  3690                           
  3691                           ; BSR set to: 1
  3692                           ;incstack = 0
  3693  00217E  0101               	movlb	1	; () banked
  3694  002180  5103               	movf	(___fldiv@b+3)& (0+255),w,b
  3695  002182  0B80               	andlw	128
  3696  002184  6F0C               	movwf	___fldiv@sign& (0+255),b
  3697  002186  5103               	movf	(___fldiv@b+3)& (0+255),w,b
  3698  002188  2503               	addwf	(___fldiv@b+3)& (0+255),w,b
  3699  00218A  6F17               	movwf	___fldiv@bexp& (0+255),b
  3700                           
  3701                           ; BSR set to: 1
  3702  00218C  BF02               	btfsc	(___fldiv@b+2)& (0+255),7,b
  3703                           
  3704                           ; BSR set to: 1
  3705  00218E  8117               	bsf	___fldiv@bexp& (0+255),0,b
  3706                           
  3707                           ; BSR set to: 1
  3708                           
  3709                           ; BSR set to: 1
  3710  002190  5117               	movf	___fldiv@bexp& (0+255),w,b
  3711  002192  B4D8               	btfsc	status,2,c
  3712  002194  D00D               	goto	l878
  3713                           
  3714                           ; BSR set to: 1
  3715  002196  2917               	incf	___fldiv@bexp& (0+255),w,b
  3716  002198  A4D8               	btfss	status,2,c
  3717  00219A  D008               	goto	l879
  3718                           
  3719                           ; BSR set to: 1
  3720  00219C  0E00               	movlw	0
  3721  00219E  6F00               	movwf	___fldiv@b& (0+255),b
  3722  0021A0  0E00               	movlw	0
  3723  0021A2  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  3724  0021A4  0E00               	movlw	0
  3725  0021A6  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  3726  0021A8  0E00               	movlw	0
  3727  0021AA  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  3728  0021AC                     l879:
  3729                           
  3730                           ; BSR set to: 1
  3731                           
  3732                           ; BSR set to: 1
  3733  0021AC  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
  3734  0021AE  D006               	goto	L2
  3735  0021B0                     l878:
  3736                           
  3737                           ; BSR set to: 1
  3738                           
  3739                           ; BSR set to: 1
  3740  0021B0  0E00               	movlw	0
  3741  0021B2  6F00               	movwf	___fldiv@b& (0+255),b
  3742  0021B4  0E00               	movlw	0
  3743  0021B6  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  3744  0021B8  0E00               	movlw	0
  3745  0021BA  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  3746  0021BC                     L2:
  3747  0021BC  0E00               	movlw	0
  3748  0021BE  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  3749                           
  3750                           ; BSR set to: 1
  3751                           
  3752                           ; BSR set to: 1
  3753  0021C0  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  3754  0021C2  0B80               	andlw	128
  3755  0021C4  1B0C               	xorwf	___fldiv@sign& (0+255),f,b
  3756                           
  3757                           ; BSR set to: 1
  3758  0021C6  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  3759  0021C8  2507               	addwf	(___fldiv@a+3)& (0+255),w,b
  3760  0021CA  6F18               	movwf	___fldiv@aexp& (0+255),b
  3761                           
  3762                           ; BSR set to: 1
  3763  0021CC  BF06               	btfsc	(___fldiv@a+2)& (0+255),7,b
  3764                           
  3765                           ; BSR set to: 1
  3766  0021CE  8118               	bsf	___fldiv@aexp& (0+255),0,b
  3767                           
  3768                           ; BSR set to: 1
  3769                           
  3770                           ; BSR set to: 1
  3771  0021D0  5118               	movf	___fldiv@aexp& (0+255),w,b
  3772  0021D2  B4D8               	btfsc	status,2,c
  3773  0021D4  D00D               	goto	l882
  3774                           
  3775                           ; BSR set to: 1
  3776  0021D6  2918               	incf	___fldiv@aexp& (0+255),w,b
  3777  0021D8  A4D8               	btfss	status,2,c
  3778  0021DA  D008               	goto	l883
  3779                           
  3780                           ; BSR set to: 1
  3781  0021DC  0E00               	movlw	0
  3782  0021DE  6F04               	movwf	___fldiv@a& (0+255),b
  3783  0021E0  0E00               	movlw	0
  3784  0021E2  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  3785  0021E4  0E00               	movlw	0
  3786  0021E6  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  3787  0021E8  0E00               	movlw	0
  3788  0021EA  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  3789  0021EC                     l883:
  3790                           
  3791                           ; BSR set to: 1
  3792                           
  3793                           ; BSR set to: 1
  3794  0021EC  8F06               	bsf	(___fldiv@a+2)& (0+255),7,b
  3795  0021EE  D006               	goto	L3
  3796  0021F0                     l882:
  3797                           
  3798                           ; BSR set to: 1
  3799                           
  3800                           ; BSR set to: 1
  3801  0021F0  0E00               	movlw	0
  3802  0021F2  6F04               	movwf	___fldiv@a& (0+255),b
  3803  0021F4  0E00               	movlw	0
  3804  0021F6  6F05               	movwf	(___fldiv@a+1)& (0+255),b
  3805  0021F8  0E00               	movlw	0
  3806  0021FA  6F06               	movwf	(___fldiv@a+2)& (0+255),b
  3807  0021FC                     L3:
  3808  0021FC  0E00               	movlw	0
  3809  0021FE  6F07               	movwf	(___fldiv@a+3)& (0+255),b
  3810                           
  3811                           ; BSR set to: 1
  3812                           
  3813                           ; BSR set to: 1
  3814  002200  5104               	movf	___fldiv@a& (0+255),w,b
  3815  002202  1105               	iorwf	(___fldiv@a+1)& (0+255),w,b
  3816  002204  1106               	iorwf	(___fldiv@a+2)& (0+255),w,b
  3817  002206  1107               	iorwf	(___fldiv@a+3)& (0+255),w,b
  3818  002208  A4D8               	btfss	status,2,c
  3819  00220A  D015               	goto	l885
  3820                           
  3821                           ; BSR set to: 1
  3822  00220C  0E00               	movlw	0
  3823  00220E  6F00               	movwf	___fldiv@b& (0+255),b
  3824  002210  0E00               	movlw	0
  3825  002212  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  3826  002214  0E00               	movlw	0
  3827  002216  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  3828  002218  0E00               	movlw	0
  3829  00221A  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  3830                           
  3831                           ; BSR set to: 1
  3832  00221C  0E80               	movlw	128
  3833  00221E  1302               	iorwf	(___fldiv@b+2)& (0+255),f,b
  3834  002220  0E7F               	movlw	127
  3835  002222  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3836                           
  3837                           ; BSR set to: 1
  3838  002224  C100  F100         	movff	___fldiv@b,?___fldiv
  3839  002228  C101  F101         	movff	___fldiv@b+1,?___fldiv+1
  3840  00222C  C102  F102         	movff	___fldiv@b+2,?___fldiv+2
  3841  002230  C103  F103         	movff	___fldiv@b+3,?___fldiv+3
  3842                           
  3843                           ; BSR set to: 1
  3844  002234  0012               	return	
  3845  002236                     l885:
  3846                           
  3847                           ; BSR set to: 1
  3848                           
  3849                           ; BSR set to: 1
  3850  002236  5117               	movf	___fldiv@bexp& (0+255),w,b
  3851  002238  A4D8               	btfss	status,2,c
  3852  00223A  D011               	goto	l887
  3853                           
  3854                           ; BSR set to: 1
  3855  00223C  0E00               	movlw	0
  3856  00223E  6F00               	movwf	___fldiv@b& (0+255),b
  3857  002240  0E00               	movlw	0
  3858  002242  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  3859  002244  0E00               	movlw	0
  3860  002246  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  3861  002248  0E00               	movlw	0
  3862  00224A  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  3863                           
  3864                           ; BSR set to: 1
  3865  00224C  C100  F100         	movff	___fldiv@b,?___fldiv
  3866  002250  C101  F101         	movff	___fldiv@b+1,?___fldiv+1
  3867  002254  C102  F102         	movff	___fldiv@b+2,?___fldiv+2
  3868  002258  C103  F103         	movff	___fldiv@b+3,?___fldiv+3
  3869                           
  3870                           ; BSR set to: 1
  3871  00225C  0012               	return	
  3872  00225E                     l887:
  3873                           
  3874                           ; BSR set to: 1
  3875                           
  3876                           ; BSR set to: 1
  3877  00225E  5118               	movf	___fldiv@aexp& (0+255),w,b
  3878  002260  6F08               	movwf	??___fldiv& (0+255),b
  3879  002262  6B09               	clrf	(??___fldiv+1)& (0+255),b
  3880  002264  1F08               	comf	??___fldiv& (0+255),f,b
  3881  002266  1F09               	comf	(??___fldiv+1)& (0+255),f,b
  3882  002268  4B08               	infsnz	??___fldiv& (0+255),f,b
  3883  00226A  2B09               	incf	(??___fldiv+1)& (0+255),f,b
  3884  00226C  5117               	movf	___fldiv@bexp& (0+255),w,b
  3885  00226E  6F0A               	movwf	(??___fldiv+2)& (0+255),b
  3886  002270  6B0B               	clrf	(??___fldiv+3)& (0+255),b
  3887  002272  5108               	movf	??___fldiv& (0+255),w,b
  3888  002274  270A               	addwf	(??___fldiv+2)& (0+255),f,b
  3889  002276  5109               	movf	(??___fldiv+1)& (0+255),w,b
  3890  002278  230B               	addwfc	(??___fldiv+3)& (0+255),f,b
  3891  00227A  0E7F               	movlw	127
  3892  00227C  250A               	addwf	(??___fldiv+2)& (0+255),w,b
  3893  00227E  6F11               	movwf	___fldiv@new_exp& (0+255),b
  3894  002280  0E00               	movlw	0
  3895  002282  210B               	addwfc	(??___fldiv+3)& (0+255),w,b
  3896  002284  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3897                           
  3898                           ; BSR set to: 1
  3899  002286  C100  F10D         	movff	___fldiv@b,___fldiv@rem
  3900  00228A  C101  F10E         	movff	___fldiv@b+1,___fldiv@rem+1
  3901  00228E  C102  F10F         	movff	___fldiv@b+2,___fldiv@rem+2
  3902  002292  C103  F110         	movff	___fldiv@b+3,___fldiv@rem+3
  3903                           
  3904                           ; BSR set to: 1
  3905  002296  0E00               	movlw	0
  3906  002298  6F00               	movwf	___fldiv@b& (0+255),b
  3907  00229A  0E00               	movlw	0
  3908  00229C  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  3909  00229E  0E00               	movlw	0
  3910  0022A0  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  3911  0022A2  0E00               	movlw	0
  3912  0022A4  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  3913                           
  3914                           ; BSR set to: 1
  3915  0022A6  0E00               	movlw	0
  3916  0022A8  6F13               	movwf	___fldiv@grs& (0+255),b
  3917  0022AA  0E00               	movlw	0
  3918  0022AC  6F14               	movwf	(___fldiv@grs+1)& (0+255),b
  3919  0022AE  0E00               	movlw	0
  3920  0022B0  6F15               	movwf	(___fldiv@grs+2)& (0+255),b
  3921  0022B2  0E00               	movlw	0
  3922  0022B4  6F16               	movwf	(___fldiv@grs+3)& (0+255),b
  3923                           
  3924                           ; BSR set to: 1
  3925  0022B6  0E00               	movlw	0
  3926  0022B8  6F18               	movwf	___fldiv@aexp& (0+255),b
  3927  0022BA  D028               	goto	l888
  3928  0022BC                     
  3929                           ; BSR set to: 1
  3930                           
  3931                           ; BSR set to: 1
  3932  0022BC  5118               	movf	___fldiv@aexp& (0+255),w,b
  3933  0022BE  B4D8               	btfsc	status,2,c
  3934  0022C0  D011               	goto	l890
  3935                           
  3936                           ; BSR set to: 1
  3937  0022C2  90D8               	bcf	status,0,c
  3938  0022C4  370D               	rlcf	___fldiv@rem& (0+255),f,b
  3939  0022C6  370E               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  3940  0022C8  370F               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  3941  0022CA  3710               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  3942  0022CC  90D8               	bcf	status,0,c
  3943  0022CE  3700               	rlcf	___fldiv@b& (0+255),f,b
  3944  0022D0  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3945  0022D2  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3946  0022D4  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3947                           
  3948                           ; BSR set to: 1
  3949  0022D6  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  3950                           
  3951                           ; BSR set to: 1
  3952  0022D8  8100               	bsf	___fldiv@b& (0+255),0,b
  3953                           
  3954                           ; BSR set to: 1
  3955  0022DA  90D8               	bcf	status,0,c
  3956  0022DC  3713               	rlcf	___fldiv@grs& (0+255),f,b
  3957  0022DE  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3958  0022E0  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3959  0022E2  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3960  0022E4                     l890:
  3961                           
  3962                           ; BSR set to: 1
  3963                           
  3964                           ; BSR set to: 1
  3965  0022E4  5104               	movf	___fldiv@a& (0+255),w,b
  3966  0022E6  5D0D               	subwf	___fldiv@rem& (0+255),w,b
  3967  0022E8  5105               	movf	(___fldiv@a+1)& (0+255),w,b
  3968  0022EA  590E               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  3969  0022EC  5106               	movf	(___fldiv@a+2)& (0+255),w,b
  3970  0022EE  590F               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  3971  0022F0  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  3972  0022F2  5910               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  3973  0022F4  A0D8               	btfss	status,0,c
  3974  0022F6  D009               	goto	l892
  3975                           
  3976                           ; BSR set to: 1
  3977  0022F8  8D16               	bsf	(___fldiv@grs+3)& (0+255),6,b
  3978                           
  3979                           ; BSR set to: 1
  3980  0022FA  5104               	movf	___fldiv@a& (0+255),w,b
  3981  0022FC  5F0D               	subwf	___fldiv@rem& (0+255),f,b
  3982  0022FE  5105               	movf	(___fldiv@a+1)& (0+255),w,b
  3983  002300  5B0E               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  3984  002302  5106               	movf	(___fldiv@a+2)& (0+255),w,b
  3985  002304  5B0F               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  3986  002306  5107               	movf	(___fldiv@a+3)& (0+255),w,b
  3987  002308  5B10               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  3988  00230A                     l892:
  3989                           
  3990                           ; BSR set to: 1
  3991                           
  3992                           ; BSR set to: 1
  3993  00230A  2B18               	incf	___fldiv@aexp& (0+255),f,b
  3994  00230C                     l888:
  3995                           
  3996                           ; BSR set to: 1
  3997  00230C  0E19               	movlw	25
  3998  00230E  6518               	cpfsgt	___fldiv@aexp& (0+255),b
  3999  002310  D7D5               	goto	l889
  4000                           
  4001                           ; BSR set to: 1
  4002                           
  4003                           ; BSR set to: 1
  4004  002312  510D               	movf	___fldiv@rem& (0+255),w,b
  4005  002314  110E               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  4006  002316  110F               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  4007  002318  1110               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  4008  00231A  B4D8               	btfsc	status,2,c
  4009  00231C  D011               	goto	l895
  4010                           
  4011                           ; BSR set to: 1
  4012  00231E  8113               	bsf	___fldiv@grs& (0+255),0,b
  4013                           
  4014                           ; BSR set to: 1
  4015  002320  D00F               	goto	l895
  4016  002322                     
  4017                           ; BSR set to: 1
  4018                           
  4019                           ; BSR set to: 1
  4020  002322  90D8               	bcf	status,0,c
  4021  002324  3700               	rlcf	___fldiv@b& (0+255),f,b
  4022  002326  3701               	rlcf	(___fldiv@b+1)& (0+255),f,b
  4023  002328  3702               	rlcf	(___fldiv@b+2)& (0+255),f,b
  4024  00232A  3703               	rlcf	(___fldiv@b+3)& (0+255),f,b
  4025                           
  4026                           ; BSR set to: 1
  4027  00232C  BF16               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  4028                           
  4029                           ; BSR set to: 1
  4030  00232E  8100               	bsf	___fldiv@b& (0+255),0,b
  4031                           
  4032                           ; BSR set to: 1
  4033  002330  90D8               	bcf	status,0,c
  4034  002332  3713               	rlcf	___fldiv@grs& (0+255),f,b
  4035  002334  3714               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  4036  002336  3715               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  4037  002338  3716               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  4038  00233A  0711               	decf	___fldiv@new_exp& (0+255),f,b
  4039  00233C  A0D8               	btfss	status,0,c
  4040  00233E  0712               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  4041  002340                     l895:
  4042                           
  4043                           ; BSR set to: 1
  4044                           
  4045                           ; BSR set to: 1
  4046  002340  AF02               	btfss	(___fldiv@b+2)& (0+255),7,b
  4047  002342  D7EF               	goto	l896
  4048                           
  4049                           ; BSR set to: 1
  4050                           
  4051                           ; BSR set to: 1
  4052  002344  0E00               	movlw	0
  4053  002346  6F18               	movwf	___fldiv@aexp& (0+255),b
  4054                           
  4055                           ; BSR set to: 1
  4056  002348  AF16               	btfss	(___fldiv@grs+3)& (0+255),7,b
  4057  00234A  D016               	goto	l902
  4058                           
  4059                           ; BSR set to: 1
  4060  00234C  0EFF               	movlw	255
  4061  00234E  1513               	andwf	___fldiv@grs& (0+255),w,b
  4062  002350  6F08               	movwf	??___fldiv& (0+255),b
  4063  002352  0EFF               	movlw	255
  4064  002354  1514               	andwf	(___fldiv@grs+1)& (0+255),w,b
  4065  002356  6F09               	movwf	(??___fldiv+1)& (0+255),b
  4066  002358  0EFF               	movlw	255
  4067  00235A  1515               	andwf	(___fldiv@grs+2)& (0+255),w,b
  4068  00235C  6F0A               	movwf	(??___fldiv+2)& (0+255),b
  4069  00235E  0E7F               	movlw	127
  4070  002360  1516               	andwf	(___fldiv@grs+3)& (0+255),w,b
  4071  002362  6F0B               	movwf	(??___fldiv+3)& (0+255),b
  4072  002364  5108               	movf	??___fldiv& (0+255),w,b
  4073  002366  1109               	iorwf	(??___fldiv+1)& (0+255),w,b
  4074  002368  110A               	iorwf	(??___fldiv+2)& (0+255),w,b
  4075  00236A  110B               	iorwf	(??___fldiv+3)& (0+255),w,b
  4076  00236C  A4D8               	btfss	status,2,c
  4077  00236E  D002               	goto	u7100
  4078                           
  4079                           ; BSR set to: 1
  4080                           
  4081                           ; BSR set to: 1
  4082  002370  A100               	btfss	___fldiv@b& (0+255),0,b
  4083  002372  D002               	goto	l902
  4084  002374                     u7100:
  4085                           
  4086                           ; BSR set to: 1
  4087  002374  0E01               	movlw	1
  4088  002376  6F18               	movwf	___fldiv@aexp& (0+255),b
  4089  002378                     l902:
  4090                           
  4091                           ; BSR set to: 1
  4092                           
  4093                           ; BSR set to: 1
  4094                           
  4095                           ; BSR set to: 1
  4096  002378  5118               	movf	___fldiv@aexp& (0+255),w,b
  4097  00237A  B4D8               	btfsc	status,2,c
  4098  00237C  D01F               	goto	l904
  4099                           
  4100                           ; BSR set to: 1
  4101  00237E  0E01               	movlw	1
  4102  002380  2700               	addwf	___fldiv@b& (0+255),f,b
  4103  002382  0E00               	movlw	0
  4104  002384  2301               	addwfc	(___fldiv@b+1)& (0+255),f,b
  4105  002386  2302               	addwfc	(___fldiv@b+2)& (0+255),f,b
  4106  002388  2303               	addwfc	(___fldiv@b+3)& (0+255),f,b
  4107                           
  4108                           ; BSR set to: 1
  4109  00238A  A103               	btfss	(___fldiv@b+3)& (0+255),0,b
  4110  00238C  D017               	goto	l904
  4111                           
  4112                           ; BSR set to: 1
  4113  00238E  C100  F108         	movff	___fldiv@b,??___fldiv
  4114  002392  C101  F109         	movff	___fldiv@b+1,??___fldiv+1
  4115  002396  C102  F10A         	movff	___fldiv@b+2,??___fldiv+2
  4116  00239A  C103  F10B         	movff	___fldiv@b+3,??___fldiv+3
  4117  00239E  350B               	rlcf	(??___fldiv+3)& (0+255),w,b
  4118  0023A0  330B               	rrcf	(??___fldiv+3)& (0+255),f,b
  4119  0023A2  330A               	rrcf	(??___fldiv+2)& (0+255),f,b
  4120  0023A4  3309               	rrcf	(??___fldiv+1)& (0+255),f,b
  4121  0023A6  3308               	rrcf	??___fldiv& (0+255),f,b
  4122  0023A8  C108  F100         	movff	??___fldiv,___fldiv@b
  4123  0023AC  C109  F101         	movff	??___fldiv+1,___fldiv@b+1
  4124  0023B0  C10A  F102         	movff	??___fldiv+2,___fldiv@b+2
  4125  0023B4  C10B  F103         	movff	??___fldiv+3,___fldiv@b+3
  4126                           
  4127                           ; BSR set to: 1
  4128  0023B8  4B11               	infsnz	___fldiv@new_exp& (0+255),f,b
  4129  0023BA  2B12               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  4130  0023BC                     l904:
  4131                           
  4132                           ; BSR set to: 1
  4133                           
  4134                           ; BSR set to: 1
  4135                           
  4136                           ; BSR set to: 1
  4137  0023BC  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4138  0023BE  D010               	goto	l905
  4139  0023C0  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4140  0023C2  E103               	bnz	u7130
  4141  0023C4  2911               	incf	___fldiv@new_exp& (0+255),w,b
  4142  0023C6  A0D8               	btfss	status,0,c
  4143  0023C8  D00B               	goto	l905
  4144  0023CA                     u7130:
  4145                           
  4146                           ; BSR set to: 1
  4147  0023CA  0E00               	movlw	0
  4148  0023CC  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4149  0023CE  6911               	setf	___fldiv@new_exp& (0+255),b
  4150  0023D0  0E00               	movlw	0
  4151  0023D2  6F00               	movwf	___fldiv@b& (0+255),b
  4152  0023D4  0E00               	movlw	0
  4153  0023D6  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  4154  0023D8  0E00               	movlw	0
  4155  0023DA  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  4156  0023DC  0E00               	movlw	0
  4157  0023DE  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  4158  0023E0                     l905:
  4159                           
  4160                           ; BSR set to: 1
  4161                           
  4162                           ; BSR set to: 1
  4163  0023E0  BF12               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  4164  0023E2  D005               	goto	u7140
  4165  0023E4  5112               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  4166  0023E6  E111               	bnz	l5256
  4167  0023E8  0511               	decf	___fldiv@new_exp& (0+255),w,b
  4168  0023EA  B0D8               	btfsc	status,0,c
  4169  0023EC  D00E               	goto	l906
  4170  0023EE                     u7140:
  4171                           
  4172                           ; BSR set to: 1
  4173  0023EE  0E00               	movlw	0
  4174  0023F0  6F12               	movwf	(___fldiv@new_exp+1)& (0+255),b
  4175  0023F2  0E00               	movlw	0
  4176  0023F4  6F11               	movwf	___fldiv@new_exp& (0+255),b
  4177  0023F6  0E00               	movlw	0
  4178  0023F8  6F00               	movwf	___fldiv@b& (0+255),b
  4179  0023FA  0E00               	movlw	0
  4180  0023FC  6F01               	movwf	(___fldiv@b+1)& (0+255),b
  4181  0023FE  0E00               	movlw	0
  4182  002400  6F02               	movwf	(___fldiv@b+2)& (0+255),b
  4183  002402  0E00               	movlw	0
  4184  002404  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  4185  002406  0E00               	movlw	0
  4186  002408  6F0C               	movwf	___fldiv@sign& (0+255),b
  4187  00240A                     l906:
  4188  00240A                     l5256:
  4189                           
  4190                           ; BSR set to: 1
  4191  00240A  C111  F117         	movff	___fldiv@new_exp,___fldiv@bexp
  4192                           
  4193                           ; BSR set to: 1
  4194  00240E  A117               	btfss	___fldiv@bexp& (0+255),0,b
  4195  002410  D002               	goto	l907
  4196                           
  4197                           ; BSR set to: 1
  4198  002412  8F02               	bsf	(___fldiv@b+2)& (0+255),7,b
  4199  002414  D001               	goto	l908
  4200  002416                     l907:
  4201                           
  4202                           ; BSR set to: 1
  4203                           
  4204                           ; BSR set to: 1
  4205  002416  9F02               	bcf	(___fldiv@b+2)& (0+255),7,b
  4206  002418                     l908:
  4207                           
  4208                           ; BSR set to: 1
  4209                           
  4210                           ; BSR set to: 1
  4211  002418  90D8               	bcf	status,0,c
  4212  00241A  3117               	rrcf	___fldiv@bexp& (0+255),w,b
  4213  00241C  6F03               	movwf	(___fldiv@b+3)& (0+255),b
  4214                           
  4215                           ; BSR set to: 1
  4216  00241E  510C               	movf	___fldiv@sign& (0+255),w,b
  4217  002420  1303               	iorwf	(___fldiv@b+3)& (0+255),f,b
  4218                           
  4219                           ; BSR set to: 1
  4220  002422  C100  F100         	movff	___fldiv@b,?___fldiv
  4221  002426  C101  F101         	movff	___fldiv@b+1,?___fldiv+1
  4222  00242A  C102  F102         	movff	___fldiv@b+2,?___fldiv+2
  4223  00242E  C103  F103         	movff	___fldiv@b+3,?___fldiv+3
  4224  002432  0012               	return	
  4225  002434                     __end_of___fldiv:
  4226                           	opt stack 0
  4227                           tblptru	equ	0xFF8
  4228                           prodh	equ	0xFF4
  4229                           prodl	equ	0xFF3
  4230                           postinc0	equ	0xFEE
  4231                           wreg	equ	0xFE8
  4232                           indf2	equ	0xFDF
  4233                           postinc2	equ	0xFDE
  4234                           postdec2	equ	0xFDD
  4235                           fsr2h	equ	0xFDA
  4236                           fsr2l	equ	0xFD9
  4237                           status	equ	0xFD8
  4238                           
  4239 ;; *************** function _UART_Init *****************
  4240 ;; Defined at:
  4241 ;;		line 255 in file "main.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4255 ;;      Params:         0       0       0       0       0       0       0       0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4258 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4259 ;;Total ram usage:        0 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:    4
  4262 ;; This function calls:
  4263 ;;		Nothing
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text15
  4270  003BA4                     __ptext15:
  4271                           	opt stack 0
  4272  003BA4                     _UART_Init:
  4273                           	opt stack 26
  4274                           
  4275                           ;main.c: 257: TRISCbits.RC7 = 1;
  4276                           
  4277                           ; BSR set to: 1
  4278                           ;incstack = 0
  4279  003BA4  8E94               	bsf	3988,7,c	;volatile
  4280                           
  4281                           ;main.c: 259: TRISCbits.RC6 = 0;
  4282  003BA6  9C94               	bcf	3988,6,c	;volatile
  4283                           
  4284                           ;main.c: 262: TXSTAbits.TX9 = 0;
  4285  003BA8  9CAC               	bcf	4012,6,c	;volatile
  4286                           
  4287                           ;main.c: 265: TXSTAbits.TXEN = 1;
  4288  003BAA  8AAC               	bsf	4012,5,c	;volatile
  4289                           
  4290                           ;main.c: 268: TXSTAbits.SYNC = 0;
  4291  003BAC  98AC               	bcf	4012,4,c	;volatile
  4292                           
  4293                           ;main.c: 271: TXSTAbits.BRGH = 0;
  4294  003BAE  94AC               	bcf	4012,2,c	;volatile
  4295                           
  4296                           ;main.c: 274: RCSTAbits.SPEN = 1;
  4297  003BB0  8EAB               	bsf	4011,7,c	;volatile
  4298                           
  4299                           ;main.c: 277: RCSTAbits.CREN = 1;
  4300  003BB2  88AB               	bsf	4011,4,c	;volatile
  4301                           
  4302                           ;main.c: 280: BRG16 = 0;
  4303  003BB4  96B8               	bcf	4024,3,c	;volatile
  4304                           
  4305                           ;main.c: 283: SPBRG = 31;
  4306  003BB6  0E1F               	movlw	31
  4307  003BB8  6EAF               	movwf	4015,c	;volatile
  4308                           
  4309                           ;main.c: 286: PIR1bits.RCIF = 0;
  4310  003BBA  9A9E               	bcf	3998,5,c	;volatile
  4311                           
  4312                           ;main.c: 289: PIE1bits.RCIE = 1;
  4313  003BBC  8A9D               	bsf	3997,5,c	;volatile
  4314                           
  4315                           ;main.c: 292: INTCONbits.GIE = 1;
  4316  003BBE  8EF2               	bsf	intcon,7,c	;volatile
  4317                           
  4318                           ;main.c: 295: INTCONbits.PEIE = 1;
  4319  003BC0  8CF2               	bsf	intcon,6,c	;volatile
  4320  003BC2  0012               	return		;funcret
  4321  003BC4                     __end_of_UART_Init:
  4322                           	opt stack 0
  4323                           tblptru	equ	0xFF8
  4324                           prodh	equ	0xFF4
  4325                           prodl	equ	0xFF3
  4326                           intcon	equ	0xFF2
  4327                           postinc0	equ	0xFEE
  4328                           wreg	equ	0xFE8
  4329                           indf2	equ	0xFDF
  4330                           postinc2	equ	0xFDE
  4331                           postdec2	equ	0xFDD
  4332                           fsr2h	equ	0xFDA
  4333                           fsr2l	equ	0xFD9
  4334                           status	equ	0xFD8
  4335                           
  4336 ;; *************** function _Send *****************
  4337 ;; Defined at:
  4338 ;;		line 69 in file "main.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  data            1    wreg     unsigned char 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  data            1    0[BANK1 ] unsigned char 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4352 ;;      Params:         0       0       0       0       0       0       0       0       0
  4353 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4355 ;;      Totals:         0       0       1       0       0       0       0       0       0
  4356 ;;Total ram usage:        1 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    4
  4359 ;; This function calls:
  4360 ;;		Nothing
  4361 ;; This function is called by:
  4362 ;;		_main
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text16
  4367  003C2C                     __ptext16:
  4368                           	opt stack 0
  4369  003C2C                     _Send:
  4370                           	opt stack 26
  4371                           
  4372                           ;incstack = 0
  4373                           ;Send@data stored from wreg
  4374  003C2C  0101               	movlb	1	; () banked
  4375  003C2E  6F00               	movwf	Send@data& (0+255),b
  4376                           
  4377                           ;main.c: 71: TXREG = data;
  4378  003C30  C100  FFAD         	movff	Send@data,4013	;volatile
  4379  003C34  B2AC               	btfsc	4012,1,c	;volatile
  4380  003C36  0012               	return	
  4381  003C38  D7FD               	goto	l88
  4382  003C3A                     __end_of_Send:
  4383                           	opt stack 0
  4384                           tblptru	equ	0xFF8
  4385                           prodh	equ	0xFF4
  4386                           prodl	equ	0xFF3
  4387                           intcon	equ	0xFF2
  4388                           postinc0	equ	0xFEE
  4389                           wreg	equ	0xFE8
  4390                           indf2	equ	0xFDF
  4391                           postinc2	equ	0xFDE
  4392                           postdec2	equ	0xFDD
  4393                           fsr2h	equ	0xFDA
  4394                           fsr2l	equ	0xFD9
  4395                           status	equ	0xFD8
  4396                           
  4397 ;; *************** function _GetData *****************
  4398 ;; Defined at:
  4399 ;;		line 119 in file "main.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  y               2   11[BANK1 ] unsigned char [2]
  4404 ;;  j               1   13[BANK1 ] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0
  4415 ;;      Locals:         0       0       3       0       0       0       0       0       0
  4416 ;;      Temps:          0       0       5       0       0       0       0       0       0
  4417 ;;      Totals:         0       0       8       0       0       0       0       0       0
  4418 ;;Total ram usage:        8 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    8
  4421 ;; This function calls:
  4422 ;;		_GetKey
  4423 ;;		_lcd_msg
  4424 ;; This function is called by:
  4425 ;;		_main
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text17
  4430  0026BE                     __ptext17:
  4431                           	opt stack 0
  4432  0026BE                     _GetData:
  4433                           	opt stack 22
  4434                           
  4435                           ;main.c: 120: unsigned char j = 0;
  4436                           
  4437                           ;incstack = 0
  4438  0026BE  0E00               	movlw	0
  4439  0026C0  0101               	movlb	1	; () banked
  4440  0026C2  6F0D               	movwf	GetData@j& (0+255),b
  4441  0026C4                     
  4442                           ; BSR set to: 1
  4443                           ;main.c: 123: y[0] = GetKey();
  4444                           
  4445                           ; BSR set to: 1
  4446  0026C4  ECF9  F01D         	call	_GetKey	;wreg free
  4447  0026C8  0101               	movlb	1	; () banked
  4448  0026CA  6F0B               	movwf	GetData@y& (0+255),b
  4449                           
  4450                           ; BSR set to: 1
  4451                           ;main.c: 124: whole[j] = y[0];
  4452  0026CC  510D               	movf	GetData@j& (0+255),w,b
  4453  0026CE  0D01               	mullw	1
  4454  0026D0  0E30               	movlw	low _whole
  4455  0026D2  24F3               	addwf	prodl,w,c
  4456  0026D4  6ED9               	movwf	fsr2l,c
  4457  0026D6  0E01               	movlw	high _whole
  4458  0026D8  20F4               	addwfc	prodh,w,c
  4459  0026DA  6EDA               	movwf	fsr2h,c
  4460  0026DC  C10B  FFDF         	movff	GetData@y,indf2
  4461                           
  4462                           ; BSR set to: 1
  4463                           ;main.c: 125: y[1] = '\0';
  4464  0026E0  0E00               	movlw	0
  4465  0026E2  6F0C               	movwf	(GetData@y+1)& (0+255),b
  4466                           
  4467                           ; BSR set to: 1
  4468                           ;main.c: 126: lcd_msg(&y[0]);
  4469  0026E4  0E0B               	movlw	low GetData@y
  4470  0026E6  6F03               	movwf	lcd_msg@c& (0+255),b
  4471  0026E8  0E01               	movlw	high GetData@y
  4472  0026EA  6F04               	movwf	(lcd_msg@c+1)& (0+255),b
  4473  0026EC  EC89  F01D         	call	_lcd_msg	;wreg free
  4474                           
  4475                           ;main.c: 128: if(j == 0 && (whole[0] == '-' || whole[0] == '+')){
  4476  0026F0  0101               	movlb	1	; () banked
  4477  0026F2  510D               	movf	GetData@j& (0+255),w,b
  4478  0026F4  A4D8               	btfss	status,2,c
  4479  0026F6  D02D               	goto	l102
  4480                           
  4481                           ; BSR set to: 1
  4482  0026F8  0E2D               	movlw	45
  4483  0026FA  1930               	xorwf	_whole& (0+255),w,b
  4484  0026FC  B4D8               	btfsc	status,2,c
  4485  0026FE  D004               	goto	u8200
  4486                           
  4487                           ; BSR set to: 1
  4488  002700  0E2B               	movlw	43
  4489  002702  1930               	xorwf	_whole& (0+255),w,b
  4490  002704  A4D8               	btfss	status,2,c
  4491  002706  D025               	goto	l102
  4492  002708                     u8200:
  4493                           
  4494                           ; BSR set to: 1
  4495                           ;main.c: 129: if(whole[0] == '-'){
  4496                           
  4497                           ; BSR set to: 1
  4498  002708  0E2D               	movlw	45
  4499  00270A  1930               	xorwf	_whole& (0+255),w,b
  4500  00270C  A4D8               	btfss	status,2,c
  4501  00270E  D00B               	goto	l107
  4502                           
  4503                           ; BSR set to: 1
  4504                           ;main.c: 130: if(get_count == 0)
  4505  002710  0100               	movlb	0	; () banked
  4506  002712  5199               	movf	_get_count& (0+255),w,b
  4507  002714  A4D8               	btfss	status,2,c
  4508  002716  D002               	goto	l106
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;main.c: 131: f_operand_minus = 1;
  4512  002718  0E01               	movlw	1
  4513  00271A  6F9A               	movwf	_f_operand_minus& (0+255),b
  4514  00271C                     l106:
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;main.c: 132: if(get_count != 0)
  4518  00271C  5199               	movf	_get_count& (0+255),w,b
  4519  00271E  B4D8               	btfsc	status,2,c
  4520  002720  D002               	goto	l107
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;main.c: 133: s_operand_minus = 1;
  4524  002722  0E01               	movlw	1
  4525  002724  6F9B               	movwf	_s_operand_minus& (0+255),b
  4526  002726                     l107:
  4527                           
  4528                           ;main.c: 134: }
  4529                           ;main.c: 135: y[0] = GetKey();
  4530                           
  4531                           ; BSR set to: 0
  4532                           
  4533                           ; BSR set to: 0
  4534  002726  ECF9  F01D         	call	_GetKey	;wreg free
  4535  00272A  0101               	movlb	1	; () banked
  4536  00272C  6F0B               	movwf	GetData@y& (0+255),b
  4537                           
  4538                           ; BSR set to: 1
  4539                           ;main.c: 136: whole[j] = y[0];
  4540  00272E  510D               	movf	GetData@j& (0+255),w,b
  4541  002730  0D01               	mullw	1
  4542  002732  0E30               	movlw	low _whole
  4543  002734  24F3               	addwf	prodl,w,c
  4544  002736  6ED9               	movwf	fsr2l,c
  4545  002738  0E01               	movlw	high _whole
  4546  00273A  20F4               	addwfc	prodh,w,c
  4547  00273C  6EDA               	movwf	fsr2h,c
  4548  00273E  C10B  FFDF         	movff	GetData@y,indf2
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;main.c: 137: y[1] = '\0';
  4552  002742  0E00               	movlw	0
  4553  002744  6F0C               	movwf	(GetData@y+1)& (0+255),b
  4554                           
  4555                           ; BSR set to: 1
  4556                           ;main.c: 138: lcd_msg(&y[0]);
  4557  002746  0E0B               	movlw	low GetData@y
  4558  002748  6F03               	movwf	lcd_msg@c& (0+255),b
  4559  00274A  0E01               	movlw	high GetData@y
  4560  00274C  6F04               	movwf	(lcd_msg@c+1)& (0+255),b
  4561  00274E  EC89  F01D         	call	_lcd_msg	;wreg free
  4562  002752                     l102:
  4563                           
  4564                           ;main.c: 139: }
  4565                           ;main.c: 140: j++;
  4566  002752  0101               	movlb	1	; () banked
  4567  002754  2B0D               	incf	GetData@j& (0+255),f,b
  4568                           
  4569                           ; BSR set to: 1
  4570                           ;main.c: 141: }while(!(whole[j-1] == '+' || whole[j-1] == '=' || whole[j-1] == '-' || wh
      +                          ole[j-1] == '/' || whole[j-1] == 'x'));
  4571  002756  0EFF               	movlw	255
  4572  002758  6F06               	movwf	??_GetData& (0+255),b
  4573  00275A  0EFF               	movlw	255
  4574  00275C  6F07               	movwf	(??_GetData+1)& (0+255),b
  4575  00275E  510D               	movf	GetData@j& (0+255),w,b
  4576  002760  6F08               	movwf	(??_GetData+2)& (0+255),b
  4577  002762  6B09               	clrf	(??_GetData+3)& (0+255),b
  4578  002764  5106               	movf	??_GetData& (0+255),w,b
  4579  002766  2708               	addwf	(??_GetData+2)& (0+255),f,b
  4580  002768  5107               	movf	(??_GetData+1)& (0+255),w,b
  4581  00276A  2309               	addwfc	(??_GetData+3)& (0+255),f,b
  4582  00276C  0E30               	movlw	low _whole
  4583  00276E  2508               	addwf	(??_GetData+2)& (0+255),w,b
  4584  002770  6ED9               	movwf	fsr2l,c
  4585  002772  0E01               	movlw	high _whole
  4586  002774  2109               	addwfc	(??_GetData+3)& (0+255),w,b
  4587  002776  6EDA               	movwf	fsr2h,c
  4588  002778  0E2B               	movlw	43
  4589  00277A  18DE               	xorwf	postinc2,w,c
  4590  00277C  B4D8               	btfsc	status,2,c
  4591  00277E  D054               	goto	u8280
  4592                           
  4593                           ; BSR set to: 1
  4594  002780  0EFF               	movlw	255
  4595  002782  6F06               	movwf	??_GetData& (0+255),b
  4596  002784  0EFF               	movlw	255
  4597  002786  6F07               	movwf	(??_GetData+1)& (0+255),b
  4598  002788  510D               	movf	GetData@j& (0+255),w,b
  4599  00278A  6F08               	movwf	(??_GetData+2)& (0+255),b
  4600  00278C  6B09               	clrf	(??_GetData+3)& (0+255),b
  4601  00278E  5106               	movf	??_GetData& (0+255),w,b
  4602  002790  2708               	addwf	(??_GetData+2)& (0+255),f,b
  4603  002792  5107               	movf	(??_GetData+1)& (0+255),w,b
  4604  002794  2309               	addwfc	(??_GetData+3)& (0+255),f,b
  4605  002796  0E30               	movlw	low _whole
  4606  002798  2508               	addwf	(??_GetData+2)& (0+255),w,b
  4607  00279A  6ED9               	movwf	fsr2l,c
  4608  00279C  0E01               	movlw	high _whole
  4609  00279E  2109               	addwfc	(??_GetData+3)& (0+255),w,b
  4610  0027A0  6EDA               	movwf	fsr2h,c
  4611  0027A2  0E3D               	movlw	61
  4612  0027A4  18DE               	xorwf	postinc2,w,c
  4613  0027A6  B4D8               	btfsc	status,2,c
  4614  0027A8  D03F               	goto	u8280
  4615                           
  4616                           ; BSR set to: 1
  4617  0027AA  0EFF               	movlw	255
  4618  0027AC  6F06               	movwf	??_GetData& (0+255),b
  4619  0027AE  0EFF               	movlw	255
  4620  0027B0  6F07               	movwf	(??_GetData+1)& (0+255),b
  4621  0027B2  510D               	movf	GetData@j& (0+255),w,b
  4622  0027B4  6F08               	movwf	(??_GetData+2)& (0+255),b
  4623  0027B6  6B09               	clrf	(??_GetData+3)& (0+255),b
  4624  0027B8  5106               	movf	??_GetData& (0+255),w,b
  4625  0027BA  2708               	addwf	(??_GetData+2)& (0+255),f,b
  4626  0027BC  5107               	movf	(??_GetData+1)& (0+255),w,b
  4627  0027BE  2309               	addwfc	(??_GetData+3)& (0+255),f,b
  4628  0027C0  0E30               	movlw	low _whole
  4629  0027C2  2508               	addwf	(??_GetData+2)& (0+255),w,b
  4630  0027C4  6ED9               	movwf	fsr2l,c
  4631  0027C6  0E01               	movlw	high _whole
  4632  0027C8  2109               	addwfc	(??_GetData+3)& (0+255),w,b
  4633  0027CA  6EDA               	movwf	fsr2h,c
  4634  0027CC  0E2D               	movlw	45
  4635  0027CE  18DE               	xorwf	postinc2,w,c
  4636  0027D0  B4D8               	btfsc	status,2,c
  4637  0027D2  D02A               	goto	u8280
  4638                           
  4639                           ; BSR set to: 1
  4640  0027D4  0EFF               	movlw	255
  4641  0027D6  6F06               	movwf	??_GetData& (0+255),b
  4642  0027D8  0EFF               	movlw	255
  4643  0027DA  6F07               	movwf	(??_GetData+1)& (0+255),b
  4644  0027DC  510D               	movf	GetData@j& (0+255),w,b
  4645  0027DE  6F08               	movwf	(??_GetData+2)& (0+255),b
  4646  0027E0  6B09               	clrf	(??_GetData+3)& (0+255),b
  4647  0027E2  5106               	movf	??_GetData& (0+255),w,b
  4648  0027E4  2708               	addwf	(??_GetData+2)& (0+255),f,b
  4649  0027E6  5107               	movf	(??_GetData+1)& (0+255),w,b
  4650  0027E8  2309               	addwfc	(??_GetData+3)& (0+255),f,b
  4651  0027EA  0E30               	movlw	low _whole
  4652  0027EC  2508               	addwf	(??_GetData+2)& (0+255),w,b
  4653  0027EE  6ED9               	movwf	fsr2l,c
  4654  0027F0  0E01               	movlw	high _whole
  4655  0027F2  2109               	addwfc	(??_GetData+3)& (0+255),w,b
  4656  0027F4  6EDA               	movwf	fsr2h,c
  4657  0027F6  0E2F               	movlw	47
  4658  0027F8  18DE               	xorwf	postinc2,w,c
  4659  0027FA  B4D8               	btfsc	status,2,c
  4660  0027FC  D015               	goto	u8280
  4661                           
  4662                           ; BSR set to: 1
  4663  0027FE  0EFF               	movlw	255
  4664  002800  6F06               	movwf	??_GetData& (0+255),b
  4665  002802  0EFF               	movlw	255
  4666  002804  6F07               	movwf	(??_GetData+1)& (0+255),b
  4667  002806  510D               	movf	GetData@j& (0+255),w,b
  4668  002808  6F08               	movwf	(??_GetData+2)& (0+255),b
  4669  00280A  6B09               	clrf	(??_GetData+3)& (0+255),b
  4670  00280C  5106               	movf	??_GetData& (0+255),w,b
  4671  00280E  2708               	addwf	(??_GetData+2)& (0+255),f,b
  4672  002810  5107               	movf	(??_GetData+1)& (0+255),w,b
  4673  002812  2309               	addwfc	(??_GetData+3)& (0+255),f,b
  4674  002814  0E30               	movlw	low _whole
  4675  002816  2508               	addwf	(??_GetData+2)& (0+255),w,b
  4676  002818  6ED9               	movwf	fsr2l,c
  4677  00281A  0E01               	movlw	high _whole
  4678  00281C  2109               	addwfc	(??_GetData+3)& (0+255),w,b
  4679  00281E  6EDA               	movwf	fsr2h,c
  4680  002820  0E78               	movlw	120
  4681  002822  18DE               	xorwf	postinc2,w,c
  4682  002824  A4D8               	btfss	status,2,c
  4683  002826  D74E               	goto	l101
  4684  002828                     u8280:
  4685                           
  4686                           ; BSR set to: 1
  4687                           ;main.c: 143: if(whole[j-1] == '+' || whole[j-1] == '-' || whole[j-1] == '/' || whole[j-
      +                          1] == 'x')
  4688                           
  4689                           ; BSR set to: 1
  4690                           
  4691                           ; BSR set to: 1
  4692  002828  0EFF               	movlw	255
  4693  00282A  6F06               	movwf	??_GetData& (0+255),b
  4694  00282C  0EFF               	movlw	255
  4695  00282E  6F07               	movwf	(??_GetData+1)& (0+255),b
  4696  002830  510D               	movf	GetData@j& (0+255),w,b
  4697  002832  6F08               	movwf	(??_GetData+2)& (0+255),b
  4698  002834  6B09               	clrf	(??_GetData+3)& (0+255),b
  4699  002836  5106               	movf	??_GetData& (0+255),w,b
  4700  002838  2708               	addwf	(??_GetData+2)& (0+255),f,b
  4701  00283A  5107               	movf	(??_GetData+1)& (0+255),w,b
  4702  00283C  2309               	addwfc	(??_GetData+3)& (0+255),f,b
  4703  00283E  0E30               	movlw	low _whole
  4704  002840  2508               	addwf	(??_GetData+2)& (0+255),w,b
  4705  002842  6ED9               	movwf	fsr2l,c
  4706  002844  0E01               	movlw	high _whole
  4707  002846  2109               	addwfc	(??_GetData+3)& (0+255),w,b
  4708  002848  6EDA               	movwf	fsr2h,c
  4709  00284A  0E2B               	movlw	43
  4710  00284C  18DE               	xorwf	postinc2,w,c
  4711  00284E  B4D8               	btfsc	status,2,c
  4712  002850  D03F               	goto	u8320
  4713                           
  4714                           ; BSR set to: 1
  4715  002852  0EFF               	movlw	255
  4716  002854  6F06               	movwf	??_GetData& (0+255),b
  4717  002856  0EFF               	movlw	255
  4718  002858  6F07               	movwf	(??_GetData+1)& (0+255),b
  4719  00285A  510D               	movf	GetData@j& (0+255),w,b
  4720  00285C  6F08               	movwf	(??_GetData+2)& (0+255),b
  4721  00285E  6B09               	clrf	(??_GetData+3)& (0+255),b
  4722  002860  5106               	movf	??_GetData& (0+255),w,b
  4723  002862  2708               	addwf	(??_GetData+2)& (0+255),f,b
  4724  002864  5107               	movf	(??_GetData+1)& (0+255),w,b
  4725  002866  2309               	addwfc	(??_GetData+3)& (0+255),f,b
  4726  002868  0E30               	movlw	low _whole
  4727  00286A  2508               	addwf	(??_GetData+2)& (0+255),w,b
  4728  00286C  6ED9               	movwf	fsr2l,c
  4729  00286E  0E01               	movlw	high _whole
  4730  002870  2109               	addwfc	(??_GetData+3)& (0+255),w,b
  4731  002872  6EDA               	movwf	fsr2h,c
  4732  002874  0E2D               	movlw	45
  4733  002876  18DE               	xorwf	postinc2,w,c
  4734  002878  B4D8               	btfsc	status,2,c
  4735  00287A  D02A               	goto	u8320
  4736                           
  4737                           ; BSR set to: 1
  4738  00287C  0EFF               	movlw	255
  4739  00287E  6F06               	movwf	??_GetData& (0+255),b
  4740  002880  0EFF               	movlw	255
  4741  002882  6F07               	movwf	(??_GetData+1)& (0+255),b
  4742  002884  510D               	movf	GetData@j& (0+255),w,b
  4743  002886  6F08               	movwf	(??_GetData+2)& (0+255),b
  4744  002888  6B09               	clrf	(??_GetData+3)& (0+255),b
  4745  00288A  5106               	movf	??_GetData& (0+255),w,b
  4746  00288C  2708               	addwf	(??_GetData+2)& (0+255),f,b
  4747  00288E  5107               	movf	(??_GetData+1)& (0+255),w,b
  4748  002890  2309               	addwfc	(??_GetData+3)& (0+255),f,b
  4749  002892  0E30               	movlw	low _whole
  4750  002894  2508               	addwf	(??_GetData+2)& (0+255),w,b
  4751  002896  6ED9               	movwf	fsr2l,c
  4752  002898  0E01               	movlw	high _whole
  4753  00289A  2109               	addwfc	(??_GetData+3)& (0+255),w,b
  4754  00289C  6EDA               	movwf	fsr2h,c
  4755  00289E  0E2F               	movlw	47
  4756  0028A0  18DE               	xorwf	postinc2,w,c
  4757  0028A2  B4D8               	btfsc	status,2,c
  4758  0028A4  D015               	goto	u8320
  4759                           
  4760                           ; BSR set to: 1
  4761  0028A6  0EFF               	movlw	255
  4762  0028A8  6F06               	movwf	??_GetData& (0+255),b
  4763  0028AA  0EFF               	movlw	255
  4764  0028AC  6F07               	movwf	(??_GetData+1)& (0+255),b
  4765  0028AE  510D               	movf	GetData@j& (0+255),w,b
  4766  0028B0  6F08               	movwf	(??_GetData+2)& (0+255),b
  4767  0028B2  6B09               	clrf	(??_GetData+3)& (0+255),b
  4768  0028B4  5106               	movf	??_GetData& (0+255),w,b
  4769  0028B6  2708               	addwf	(??_GetData+2)& (0+255),f,b
  4770  0028B8  5107               	movf	(??_GetData+1)& (0+255),w,b
  4771  0028BA  2309               	addwfc	(??_GetData+3)& (0+255),f,b
  4772  0028BC  0E30               	movlw	low _whole
  4773  0028BE  2508               	addwf	(??_GetData+2)& (0+255),w,b
  4774  0028C0  6ED9               	movwf	fsr2l,c
  4775  0028C2  0E01               	movlw	high _whole
  4776  0028C4  2109               	addwfc	(??_GetData+3)& (0+255),w,b
  4777  0028C6  6EDA               	movwf	fsr2h,c
  4778  0028C8  0E78               	movlw	120
  4779  0028CA  18DE               	xorwf	postinc2,w,c
  4780  0028CC  A4D8               	btfss	status,2,c
  4781  0028CE  D013               	goto	l111
  4782  0028D0                     u8320:
  4783                           
  4784                           ; BSR set to: 1
  4785                           ;main.c: 144: proc[0] = whole[j-1];
  4786                           
  4787                           ; BSR set to: 1
  4788  0028D0  0EFF               	movlw	255
  4789  0028D2  6F06               	movwf	??_GetData& (0+255),b
  4790  0028D4  0EFF               	movlw	255
  4791  0028D6  6F07               	movwf	(??_GetData+1)& (0+255),b
  4792  0028D8  510D               	movf	GetData@j& (0+255),w,b
  4793  0028DA  6F08               	movwf	(??_GetData+2)& (0+255),b
  4794  0028DC  6B09               	clrf	(??_GetData+3)& (0+255),b
  4795  0028DE  5106               	movf	??_GetData& (0+255),w,b
  4796  0028E0  2708               	addwf	(??_GetData+2)& (0+255),f,b
  4797  0028E2  5107               	movf	(??_GetData+1)& (0+255),w,b
  4798  0028E4  2309               	addwfc	(??_GetData+3)& (0+255),f,b
  4799  0028E6  0E30               	movlw	low _whole
  4800  0028E8  2508               	addwf	(??_GetData+2)& (0+255),w,b
  4801  0028EA  6ED9               	movwf	fsr2l,c
  4802  0028EC  0E01               	movlw	high _whole
  4803  0028EE  2109               	addwfc	(??_GetData+3)& (0+255),w,b
  4804  0028F0  6EDA               	movwf	fsr2h,c
  4805  0028F2  50DF               	movf	indf2,w,c
  4806  0028F4  6F2D               	movwf	_proc& (0+255),b
  4807  0028F6                     l111:
  4808                           
  4809                           ; BSR set to: 1
  4810                           ;main.c: 145: whole[j-1] = '\0';
  4811  0028F6  0EFF               	movlw	255
  4812  0028F8  6F06               	movwf	??_GetData& (0+255),b
  4813  0028FA  0EFF               	movlw	255
  4814  0028FC  6F07               	movwf	(??_GetData+1)& (0+255),b
  4815  0028FE  510D               	movf	GetData@j& (0+255),w,b
  4816  002900  6F08               	movwf	(??_GetData+2)& (0+255),b
  4817  002902  6B09               	clrf	(??_GetData+3)& (0+255),b
  4818  002904  5106               	movf	??_GetData& (0+255),w,b
  4819  002906  2708               	addwf	(??_GetData+2)& (0+255),f,b
  4820  002908  5107               	movf	(??_GetData+1)& (0+255),w,b
  4821  00290A  2309               	addwfc	(??_GetData+3)& (0+255),f,b
  4822  00290C  0E30               	movlw	low _whole
  4823  00290E  2508               	addwf	(??_GetData+2)& (0+255),w,b
  4824  002910  6ED9               	movwf	fsr2l,c
  4825  002912  0E01               	movlw	high _whole
  4826  002914  2109               	addwfc	(??_GetData+3)& (0+255),w,b
  4827  002916  6EDA               	movwf	fsr2h,c
  4828  002918  0E00               	movlw	0
  4829  00291A  6EDF               	movwf	indf2,c
  4830                           
  4831                           ; BSR set to: 1
  4832                           ;main.c: 146: get_count++;
  4833  00291C  0100               	movlb	0	; () banked
  4834  00291E  2B99               	incf	_get_count& (0+255),f,b
  4835                           
  4836                           ; BSR set to: 0
  4837  002920  0012               	return		;funcret
  4838  002922                     __end_of_GetData:
  4839                           	opt stack 0
  4840                           tblptru	equ	0xFF8
  4841                           prodh	equ	0xFF4
  4842                           prodl	equ	0xFF3
  4843                           intcon	equ	0xFF2
  4844                           postinc0	equ	0xFEE
  4845                           wreg	equ	0xFE8
  4846                           indf2	equ	0xFDF
  4847                           postinc2	equ	0xFDE
  4848                           postdec2	equ	0xFDD
  4849                           fsr2h	equ	0xFDA
  4850                           fsr2l	equ	0xFD9
  4851                           status	equ	0xFD8
  4852                           
  4853 ;; *************** function _lcd_msg *****************
  4854 ;; Defined at:
  4855 ;;		line 198 in file "main.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  c               2    3[BANK1 ] PTR unsigned char 
  4858 ;;		 -> ISR@arra(12), GetData@y(2), 
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4870 ;;      Params:         0       0       2       0       0       0       0       0       0
  4871 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4873 ;;      Totals:         0       0       2       0       0       0       0       0       0
  4874 ;;Total ram usage:        2 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    6
  4877 ;; This function calls:
  4878 ;;		_lcd_dwr
  4879 ;; This function is called by:
  4880 ;;		_GetData
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text18
  4885  003B12                     __ptext18:
  4886                           	opt stack 0
  4887  003B12                     _lcd_msg:
  4888                           	opt stack 23
  4889                           
  4890                           ;main.c: 200: while(*c !=0){
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;incstack = 0
  4894  003B12  D00A               	goto	l132
  4895  003B14                     
  4896                           ;main.c: 201: lcd_dwr(*c++);
  4897  003B14  C103  FFD9         	movff	lcd_msg@c,fsr2l
  4898  003B18  C104  FFDA         	movff	lcd_msg@c+1,fsr2h
  4899  003B1C  50DF               	movf	indf2,w,c
  4900  003B1E  ECD9  F01C         	call	_lcd_dwr
  4901  003B22  0101               	movlb	1	; () banked
  4902  003B24  4B03               	infsnz	lcd_msg@c& (0+255),f,b
  4903  003B26  2B04               	incf	(lcd_msg@c+1)& (0+255),f,b
  4904  003B28                     l132:
  4905                           
  4906                           ; BSR set to: 1
  4907  003B28  C103  FFD9         	movff	lcd_msg@c,fsr2l
  4908  003B2C  C104  FFDA         	movff	lcd_msg@c+1,fsr2h
  4909  003B30  50DF               	movf	indf2,w,c
  4910  003B32  B4D8               	btfsc	status,2,c
  4911  003B34  0012               	return	
  4912  003B36  D7EE               	goto	l133
  4913  003B38                     __end_of_lcd_msg:
  4914                           	opt stack 0
  4915                           tblptru	equ	0xFF8
  4916                           prodh	equ	0xFF4
  4917                           prodl	equ	0xFF3
  4918                           intcon	equ	0xFF2
  4919                           postinc0	equ	0xFEE
  4920                           wreg	equ	0xFE8
  4921                           indf2	equ	0xFDF
  4922                           postinc2	equ	0xFDE
  4923                           postdec2	equ	0xFDD
  4924                           fsr2h	equ	0xFDA
  4925                           fsr2l	equ	0xFD9
  4926                           status	equ	0xFD8
  4927                           
  4928 ;; *************** function _lcd_dwr *****************
  4929 ;; Defined at:
  4930 ;;		line 184 in file "main.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  x               1    wreg     unsigned char 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  x               1    2[BANK1 ] unsigned char 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0, cstack
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4944 ;;      Params:         0       0       0       0       0       0       0       0       0
  4945 ;;      Locals:         0       0       1       0       0       0       0       0       0
  4946 ;;      Temps:          0       0       1       0       0       0       0       0       0
  4947 ;;      Totals:         0       0       2       0       0       0       0       0       0
  4948 ;;Total ram usage:        2 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    5
  4951 ;; This function calls:
  4952 ;;		_lcd_lat
  4953 ;; This function is called by:
  4954 ;;		_lcd_msg
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text19
  4959  0039B2                     __ptext19:
  4960                           	opt stack 0
  4961  0039B2                     _lcd_dwr:
  4962                           	opt stack 23
  4963                           
  4964                           ;incstack = 0
  4965                           ;lcd_dwr@x stored from wreg
  4966  0039B2  0101               	movlb	1	; () banked
  4967  0039B4  6F02               	movwf	lcd_dwr@x& (0+255),b
  4968                           
  4969                           ;main.c: 186: PORTDbits.RD0 = 1;
  4970  0039B6  8083               	bsf	3971,0,c	;volatile
  4971                           
  4972                           ;main.c: 187: PORTD &= 0x0F;
  4973  0039B8  0E0F               	movlw	15
  4974  0039BA  1683               	andwf	3971,f,c	;volatile
  4975                           
  4976                           ;main.c: 188: PORTD |= ( (x & 0xF0));
  4977  0039BC  0101               	movlb	1	; () banked
  4978  0039BE  5102               	movf	lcd_dwr@x& (0+255),w,b
  4979  0039C0  0BF0               	andlw	240
  4980  0039C2  1283               	iorwf	3971,f,c	;volatile
  4981                           
  4982                           ; BSR set to: 1
  4983                           ;main.c: 189: lcd_lat();
  4984  0039C4  ECEE  F01D         	call	_lcd_lat	;wreg free
  4985                           
  4986                           ;main.c: 191: PORTD &= 0x0F;
  4987  0039C8  0E0F               	movlw	15
  4988  0039CA  1683               	andwf	3971,f,c	;volatile
  4989                           
  4990                           ;main.c: 193: PORTD |= ((x & 0x0F) << 4);
  4991  0039CC  C102  F101         	movff	lcd_dwr@x,??_lcd_dwr
  4992  0039D0  0E0F               	movlw	15
  4993  0039D2  0101               	movlb	1	; () banked
  4994  0039D4  1701               	andwf	??_lcd_dwr& (0+255),f,b
  4995  0039D6  3901               	swapf	??_lcd_dwr& (0+255),w,b
  4996  0039D8  0BF0               	andlw	240
  4997  0039DA  1283               	iorwf	3971,f,c	;volatile
  4998                           
  4999                           ; BSR set to: 1
  5000                           ;main.c: 194: lcd_lat();
  5001  0039DC  ECEE  F01D         	call	_lcd_lat	;wreg free
  5002  0039E0  0012               	return		;funcret
  5003  0039E2                     __end_of_lcd_dwr:
  5004                           	opt stack 0
  5005                           tblptru	equ	0xFF8
  5006                           prodh	equ	0xFF4
  5007                           prodl	equ	0xFF3
  5008                           intcon	equ	0xFF2
  5009                           postinc0	equ	0xFEE
  5010                           wreg	equ	0xFE8
  5011                           indf2	equ	0xFDF
  5012                           postinc2	equ	0xFDE
  5013                           postdec2	equ	0xFDD
  5014                           fsr2h	equ	0xFDA
  5015                           fsr2l	equ	0xFD9
  5016                           status	equ	0xFD8
  5017                           
  5018 ;; *************** function _lcd_lat *****************
  5019 ;; Defined at:
  5020 ;;		line 156 in file "main.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5034 ;;      Params:         0       0       0       0       0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5036 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5037 ;;      Totals:         0       0       1       0       0       0       0       0       0
  5038 ;;Total ram usage:        1 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    4
  5041 ;; This function calls:
  5042 ;;		Nothing
  5043 ;; This function is called by:
  5044 ;;		_lcd_cmd
  5045 ;;		_lcd_cmd_hf
  5046 ;;		_lcd_dwr
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text20
  5051  003BDC                     __ptext20:
  5052                           	opt stack 0
  5053  003BDC                     _lcd_lat:
  5054                           	opt stack 24
  5055                           
  5056                           ;main.c: 158: PORTDbits.RD1 =1 ;
  5057                           
  5058                           ;incstack = 0
  5059  003BDC  8283               	bsf	3971,1,c	;volatile
  5060                           
  5061                           ;main.c: 159: _delay((unsigned long)((1)*(20000000/4000.0)));
  5062  003BDE  0E07               	movlw	7
  5063  003BE0  0101               	movlb	1	; () banked
  5064  003BE2  6F00               	movwf	??_lcd_lat& (0+255),b
  5065  003BE4  0E7D               	movlw	125
  5066  003BE6                     u8627:
  5067  003BE6  2EE8               	decfsz	wreg,f,c
  5068  003BE8  D7FE               	bra	u8627
  5069  003BEA  2F00               	decfsz	??_lcd_lat& (0+255),f,b
  5070  003BEC  D7FC               	bra	u8627
  5071                           
  5072                           ;main.c: 160: PORTDbits.RD1=0;
  5073  003BEE  9283               	bcf	3971,1,c	;volatile
  5074  003BF0  0012               	return		;funcret
  5075  003BF2                     __end_of_lcd_lat:
  5076                           	opt stack 0
  5077                           tblptru	equ	0xFF8
  5078                           prodh	equ	0xFF4
  5079                           prodl	equ	0xFF3
  5080                           intcon	equ	0xFF2
  5081                           postinc0	equ	0xFEE
  5082                           wreg	equ	0xFE8
  5083                           indf2	equ	0xFDF
  5084                           postinc2	equ	0xFDE
  5085                           postdec2	equ	0xFDD
  5086                           fsr2h	equ	0xFDA
  5087                           fsr2l	equ	0xFD9
  5088                           status	equ	0xFD8
  5089                           
  5090 ;; *************** function _GetKey *****************
  5091 ;; Defined at:
  5092 ;;		line 312 in file "main.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;		None
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  key             1    5[BANK1 ] unsigned char 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      unsigned char 
  5099 ;; Registers used:
  5100 ;;		wreg, status,2, status,0, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5106 ;;      Params:         0       0       0       0       0       0       0       0       0
  5107 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5109 ;;      Totals:         0       0       1       0       0       0       0       0       0
  5110 ;;Total ram usage:        1 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    7
  5113 ;; This function calls:
  5114 ;;		_KeyRelease
  5115 ;;		_TaraKey
  5116 ;; This function is called by:
  5117 ;;		_main
  5118 ;;		_GetData
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text21
  5123  003BF2                     __ptext21:
  5124                           	opt stack 0
  5125  003BF2                     _GetKey:
  5126                           	opt stack 23
  5127                           
  5128                           ;main.c: 314: unsigned char key;
  5129                           ;main.c: 316: KeyRelease();
  5130                           
  5131                           ;incstack = 0
  5132  003BF2  ECF1  F01C         	call	_KeyRelease	;wreg free
  5133  003BF6                     l158:
  5134                           
  5135                           ;main.c: 319: key = TaraKey();
  5136  003BF6  EC91  F014         	call	_TaraKey	;wreg free
  5137  003BFA  0101               	movlb	1	; () banked
  5138  003BFC  6F05               	movwf	GetKey@key& (0+255),b
  5139                           
  5140                           ; BSR set to: 1
  5141                           ;main.c: 320: } while (key == 0xFF);
  5142  003BFE  2905               	incf	GetKey@key& (0+255),w,b
  5143  003C00  B4D8               	btfsc	status,2,c
  5144  003C02  D7F9               	goto	l158
  5145                           
  5146                           ; BSR set to: 1
  5147                           ;main.c: 322: return key;
  5148                           
  5149                           ; BSR set to: 1
  5150  003C04  5105               	movf	GetKey@key& (0+255),w,b
  5151  003C06  0012               	return	
  5152  003C08                     __end_of_GetKey:
  5153                           	opt stack 0
  5154                           tblptru	equ	0xFF8
  5155                           prodh	equ	0xFF4
  5156                           prodl	equ	0xFF3
  5157                           intcon	equ	0xFF2
  5158                           postinc0	equ	0xFEE
  5159                           wreg	equ	0xFE8
  5160                           indf2	equ	0xFDF
  5161                           postinc2	equ	0xFDE
  5162                           postdec2	equ	0xFDD
  5163                           fsr2h	equ	0xFDA
  5164                           fsr2l	equ	0xFD9
  5165                           status	equ	0xFD8
  5166                           
  5167 ;; *************** function _KeyRelease *****************
  5168 ;; Defined at:
  5169 ;;		line 298 in file "main.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;		None
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  key             1    4[BANK1 ] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5183 ;;      Params:         0       0       0       0       0       0       0       0       0
  5184 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5185 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5186 ;;      Totals:         0       0       2       0       0       0       0       0       0
  5187 ;;Total ram usage:        2 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    6
  5190 ;; This function calls:
  5191 ;;		_TaraKey
  5192 ;; This function is called by:
  5193 ;;		_GetKey
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text22
  5198  0039E2                     __ptext22:
  5199                           	opt stack 0
  5200  0039E2                     _KeyRelease:
  5201                           	opt stack 23
  5202                           
  5203                           ;main.c: 303: key = TaraKey();
  5204                           
  5205                           ;main.c: 302: do {
  5206                           
  5207                           ; BSR set to: 1
  5208                           ;incstack = 0
  5209                           ;main.c: 300: unsigned char key;
  5210                           ;main.c: 301: do {
  5211  0039E2  EC91  F014         	call	_TaraKey	;wreg free
  5212  0039E6  0101               	movlb	1	; () banked
  5213  0039E8  6F04               	movwf	KeyRelease@key& (0+255),b
  5214                           
  5215                           ; BSR set to: 1
  5216                           ;main.c: 304: } while (key != 0xFF);
  5217  0039EA  2904               	incf	KeyRelease@key& (0+255),w,b
  5218  0039EC  A4D8               	btfss	status,2,c
  5219  0039EE  D7F9               	goto	_KeyRelease
  5220                           
  5221                           ; BSR set to: 1
  5222                           ;main.c: 306: _delay((unsigned long)((1)*(20000000/4000.0)));
  5223                           
  5224                           ; BSR set to: 1
  5225  0039F0  0E07               	movlw	7
  5226  0039F2  0101               	movlb	1	; () banked
  5227  0039F4  6F03               	movwf	??_KeyRelease& (0+255),b
  5228  0039F6  0E7D               	movlw	125
  5229  0039F8                     u8637:
  5230  0039F8  2EE8               	decfsz	wreg,f,c
  5231  0039FA  D7FE               	bra	u8637
  5232  0039FC  2F03               	decfsz	??_KeyRelease& (0+255),f,b
  5233  0039FE  D7FC               	bra	u8637
  5234                           
  5235                           ;main.c: 308: key = TaraKey();
  5236  003A00  EC91  F014         	call	_TaraKey	;wreg free
  5237  003A04  0101               	movlb	1	; () banked
  5238  003A06  6F04               	movwf	KeyRelease@key& (0+255),b
  5239                           
  5240                           ; BSR set to: 1
  5241                           ;main.c: 309: } while (key != 0xFF);
  5242  003A08  2904               	incf	KeyRelease@key& (0+255),w,b
  5243  003A0A  B4D8               	btfsc	status,2,c
  5244  003A0C  0012               	return	
  5245  003A0E  D7E9               	goto	_KeyRelease
  5246  003A10                     __end_of_KeyRelease:
  5247                           	opt stack 0
  5248                           tblptru	equ	0xFF8
  5249                           prodh	equ	0xFF4
  5250                           prodl	equ	0xFF3
  5251                           intcon	equ	0xFF2
  5252                           postinc0	equ	0xFEE
  5253                           wreg	equ	0xFE8
  5254                           indf2	equ	0xFDF
  5255                           postinc2	equ	0xFDE
  5256                           postdec2	equ	0xFDD
  5257                           fsr2h	equ	0xFDA
  5258                           fsr2l	equ	0xFD9
  5259                           status	equ	0xFD8
  5260                           
  5261 ;; *************** function _TaraKey *****************
  5262 ;; Defined at:
  5263 ;;		line 325 in file "main.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;		None
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;		None
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      unsigned char 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2, status,0, cstack
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5277 ;;      Params:         0       0       0       0       0       0       0       0       0
  5278 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5279 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5280 ;;      Totals:         0       0       1       0       0       0       0       0       0
  5281 ;;Total ram usage:        1 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:    5
  5284 ;; This function calls:
  5285 ;;		_KeyOther
  5286 ;; This function is called by:
  5287 ;;		_KeyRelease
  5288 ;;		_GetKey
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text23
  5293  002922                     __ptext23:
  5294                           	opt stack 0
  5295  002922                     _TaraKey:
  5296                           	opt stack 24
  5297                           
  5298                           ;main.c: 327: PORTBbits.RB0 = 0;
  5299                           
  5300                           ; BSR set to: 1
  5301                           ;incstack = 0
  5302  002922  9081               	bcf	3969,0,c	;volatile
  5303                           
  5304                           ;main.c: 328: PORTBbits.RB1 = 1;
  5305  002924  8281               	bsf	3969,1,c	;volatile
  5306                           
  5307                           ;main.c: 329: PORTBbits.RB2 = 1;
  5308  002926  8481               	bsf	3969,2,c	;volatile
  5309                           
  5310                           ;main.c: 330: PORTBbits.RB3 = 1;
  5311  002928  8681               	bsf	3969,3,c	;volatile
  5312                           
  5313                           ;main.c: 332: _delay((unsigned long)((2)*(20000000/4000.0)));
  5314  00292A  0E0D               	movlw	13
  5315  00292C  0101               	movlb	1	; () banked
  5316  00292E  6F02               	movwf	??_TaraKey& (0+255),b
  5317  002930  0EFB               	movlw	251
  5318  002932                     u8647:
  5319  002932  2EE8               	decfsz	wreg,f,c
  5320  002934  D7FE               	bra	u8647
  5321  002936  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5322  002938  D7FC               	bra	u8647
  5323  00293A  D000               	nop2	
  5324                           
  5325                           ;main.c: 333: if (PORTBbits.RB4 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return(55);}
  5326  00293C  B881               	btfsc	3969,4,c	;volatile
  5327  00293E  D00B               	goto	l163
  5328  002940  0E41               	movlw	65
  5329  002942  0101               	movlb	1	; () banked
  5330  002944  6F02               	movwf	??_TaraKey& (0+255),b
  5331  002946  0EEE               	movlw	238
  5332  002948                     u8657:
  5333  002948  2EE8               	decfsz	wreg,f,c
  5334  00294A  D7FE               	bra	u8657
  5335  00294C  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5336  00294E  D7FC               	bra	u8657
  5337  002950  F000               	nop	
  5338  002952  0E37               	movlw	55
  5339  002954  0012               	return	
  5340  002956                     l163:
  5341                           
  5342                           ;main.c: 334: if (PORTBbits.RB5 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('8');}
  5343  002956  BA81               	btfsc	3969,5,c	;volatile
  5344  002958  D00B               	goto	l165
  5345  00295A  0E41               	movlw	65
  5346  00295C  0101               	movlb	1	; () banked
  5347  00295E  6F02               	movwf	??_TaraKey& (0+255),b
  5348  002960  0EEE               	movlw	238
  5349  002962                     u8667:
  5350  002962  2EE8               	decfsz	wreg,f,c
  5351  002964  D7FE               	bra	u8667
  5352  002966  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5353  002968  D7FC               	bra	u8667
  5354  00296A  F000               	nop	
  5355  00296C  0E38               	movlw	56
  5356  00296E  0012               	return	
  5357  002970                     l165:
  5358                           
  5359                           ;main.c: 335: if (PORTBbits.RB6 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('9');}
  5360  002970  BC81               	btfsc	3969,6,c	;volatile
  5361  002972  D00B               	goto	l166
  5362  002974  0E41               	movlw	65
  5363  002976  0101               	movlb	1	; () banked
  5364  002978  6F02               	movwf	??_TaraKey& (0+255),b
  5365  00297A  0EEE               	movlw	238
  5366  00297C                     u8677:
  5367  00297C  2EE8               	decfsz	wreg,f,c
  5368  00297E  D7FE               	bra	u8677
  5369  002980  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5370  002982  D7FC               	bra	u8677
  5371  002984  F000               	nop	
  5372  002986  0E39               	movlw	57
  5373  002988  0012               	return	
  5374  00298A                     l166:
  5375                           
  5376                           ;main.c: 336: if (PORTBbits.RB7 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('/');}
  5377  00298A  BE81               	btfsc	3969,7,c	;volatile
  5378  00298C  D00B               	goto	l167
  5379  00298E  0E41               	movlw	65
  5380  002990  0101               	movlb	1	; () banked
  5381  002992  6F02               	movwf	??_TaraKey& (0+255),b
  5382  002994  0EEE               	movlw	238
  5383  002996                     u8687:
  5384  002996  2EE8               	decfsz	wreg,f,c
  5385  002998  D7FE               	bra	u8687
  5386  00299A  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5387  00299C  D7FC               	bra	u8687
  5388  00299E  F000               	nop	
  5389  0029A0  0E2F               	movlw	47
  5390  0029A2  0012               	return	
  5391  0029A4                     l167:
  5392                           
  5393                           ;main.c: 338: PORTBbits.RB0 = 1;
  5394  0029A4  8081               	bsf	3969,0,c	;volatile
  5395                           
  5396                           ;main.c: 339: PORTBbits.RB1 = 0;
  5397  0029A6  9281               	bcf	3969,1,c	;volatile
  5398                           
  5399                           ;main.c: 340: PORTBbits.RB2 = 1;
  5400  0029A8  8481               	bsf	3969,2,c	;volatile
  5401                           
  5402                           ;main.c: 341: PORTBbits.RB3 = 1;
  5403  0029AA  8681               	bsf	3969,3,c	;volatile
  5404                           
  5405                           ;main.c: 343: _delay((unsigned long)((2)*(20000000/4000.0)));
  5406  0029AC  0E0D               	movlw	13
  5407  0029AE  0101               	movlb	1	; () banked
  5408  0029B0  6F02               	movwf	??_TaraKey& (0+255),b
  5409  0029B2  0EFB               	movlw	251
  5410  0029B4                     u8697:
  5411  0029B4  2EE8               	decfsz	wreg,f,c
  5412  0029B6  D7FE               	bra	u8697
  5413  0029B8  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5414  0029BA  D7FC               	bra	u8697
  5415  0029BC  D000               	nop2	
  5416                           
  5417                           ;main.c: 344: if (PORTBbits.RB4 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('4');}
  5418  0029BE  B881               	btfsc	3969,4,c	;volatile
  5419  0029C0  D00B               	goto	l168
  5420  0029C2  0E41               	movlw	65
  5421  0029C4  0101               	movlb	1	; () banked
  5422  0029C6  6F02               	movwf	??_TaraKey& (0+255),b
  5423  0029C8  0EEE               	movlw	238
  5424  0029CA                     u8707:
  5425  0029CA  2EE8               	decfsz	wreg,f,c
  5426  0029CC  D7FE               	bra	u8707
  5427  0029CE  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5428  0029D0  D7FC               	bra	u8707
  5429  0029D2  F000               	nop	
  5430  0029D4  0E34               	movlw	52
  5431  0029D6  0012               	return	
  5432  0029D8                     l168:
  5433                           
  5434                           ;main.c: 345: if (PORTBbits.RB5 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('5');}
  5435  0029D8  BA81               	btfsc	3969,5,c	;volatile
  5436  0029DA  D00B               	goto	l169
  5437  0029DC  0E41               	movlw	65
  5438  0029DE  0101               	movlb	1	; () banked
  5439  0029E0  6F02               	movwf	??_TaraKey& (0+255),b
  5440  0029E2  0EEE               	movlw	238
  5441  0029E4                     u8717:
  5442  0029E4  2EE8               	decfsz	wreg,f,c
  5443  0029E6  D7FE               	bra	u8717
  5444  0029E8  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5445  0029EA  D7FC               	bra	u8717
  5446  0029EC  F000               	nop	
  5447  0029EE  0E35               	movlw	53
  5448  0029F0  0012               	return	
  5449  0029F2                     l169:
  5450                           
  5451                           ;main.c: 346: if (PORTBbits.RB6 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('6');}
  5452  0029F2  BC81               	btfsc	3969,6,c	;volatile
  5453  0029F4  D00B               	goto	l170
  5454  0029F6  0E41               	movlw	65
  5455  0029F8  0101               	movlb	1	; () banked
  5456  0029FA  6F02               	movwf	??_TaraKey& (0+255),b
  5457  0029FC  0EEE               	movlw	238
  5458  0029FE                     u8727:
  5459  0029FE  2EE8               	decfsz	wreg,f,c
  5460  002A00  D7FE               	bra	u8727
  5461  002A02  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5462  002A04  D7FC               	bra	u8727
  5463  002A06  F000               	nop	
  5464  002A08  0E36               	movlw	54
  5465  002A0A  0012               	return	
  5466  002A0C                     l170:
  5467                           
  5468                           ;main.c: 347: if (PORTBbits.RB7 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('x');}
  5469  002A0C  BE81               	btfsc	3969,7,c	;volatile
  5470  002A0E  D00B               	goto	l171
  5471  002A10  0E41               	movlw	65
  5472  002A12  0101               	movlb	1	; () banked
  5473  002A14  6F02               	movwf	??_TaraKey& (0+255),b
  5474  002A16  0EEE               	movlw	238
  5475  002A18                     u8737:
  5476  002A18  2EE8               	decfsz	wreg,f,c
  5477  002A1A  D7FE               	bra	u8737
  5478  002A1C  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5479  002A1E  D7FC               	bra	u8737
  5480  002A20  F000               	nop	
  5481  002A22  0E78               	movlw	120
  5482  002A24  0012               	return	
  5483  002A26                     l171:
  5484                           
  5485                           ;main.c: 349: PORTBbits.RB0 = 1;
  5486  002A26  8081               	bsf	3969,0,c	;volatile
  5487                           
  5488                           ;main.c: 350: PORTBbits.RB1 = 1;
  5489  002A28  8281               	bsf	3969,1,c	;volatile
  5490                           
  5491                           ;main.c: 351: PORTBbits.RB2 = 0;
  5492  002A2A  9481               	bcf	3969,2,c	;volatile
  5493                           
  5494                           ;main.c: 352: PORTBbits.RB3 = 1;
  5495  002A2C  8681               	bsf	3969,3,c	;volatile
  5496                           
  5497                           ;main.c: 354: _delay((unsigned long)((2)*(20000000/4000.0)));
  5498  002A2E  0E0D               	movlw	13
  5499  002A30  0101               	movlb	1	; () banked
  5500  002A32  6F02               	movwf	??_TaraKey& (0+255),b
  5501  002A34  0EFB               	movlw	251
  5502  002A36                     u8747:
  5503  002A36  2EE8               	decfsz	wreg,f,c
  5504  002A38  D7FE               	bra	u8747
  5505  002A3A  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5506  002A3C  D7FC               	bra	u8747
  5507  002A3E  D000               	nop2	
  5508                           
  5509                           ;main.c: 355: if (PORTBbits.RB4 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('1');}
  5510  002A40  B881               	btfsc	3969,4,c	;volatile
  5511  002A42  D00B               	goto	l172
  5512  002A44  0E41               	movlw	65
  5513  002A46  0101               	movlb	1	; () banked
  5514  002A48  6F02               	movwf	??_TaraKey& (0+255),b
  5515  002A4A  0EEE               	movlw	238
  5516  002A4C                     u8757:
  5517  002A4C  2EE8               	decfsz	wreg,f,c
  5518  002A4E  D7FE               	bra	u8757
  5519  002A50  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5520  002A52  D7FC               	bra	u8757
  5521  002A54  F000               	nop	
  5522  002A56  0E31               	movlw	49
  5523  002A58  0012               	return	
  5524  002A5A                     l172:
  5525                           
  5526                           ;main.c: 356: if (PORTBbits.RB5 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('2');}
  5527  002A5A  BA81               	btfsc	3969,5,c	;volatile
  5528  002A5C  D00B               	goto	l173
  5529  002A5E  0E41               	movlw	65
  5530  002A60  0101               	movlb	1	; () banked
  5531  002A62  6F02               	movwf	??_TaraKey& (0+255),b
  5532  002A64  0EEE               	movlw	238
  5533  002A66                     u8767:
  5534  002A66  2EE8               	decfsz	wreg,f,c
  5535  002A68  D7FE               	bra	u8767
  5536  002A6A  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5537  002A6C  D7FC               	bra	u8767
  5538  002A6E  F000               	nop	
  5539  002A70  0E32               	movlw	50
  5540  002A72  0012               	return	
  5541  002A74                     l173:
  5542                           
  5543                           ;main.c: 357: if (PORTBbits.RB6 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('3');}
  5544  002A74  BC81               	btfsc	3969,6,c	;volatile
  5545  002A76  D00B               	goto	l174
  5546  002A78  0E41               	movlw	65
  5547  002A7A  0101               	movlb	1	; () banked
  5548  002A7C  6F02               	movwf	??_TaraKey& (0+255),b
  5549  002A7E  0EEE               	movlw	238
  5550  002A80                     u8777:
  5551  002A80  2EE8               	decfsz	wreg,f,c
  5552  002A82  D7FE               	bra	u8777
  5553  002A84  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5554  002A86  D7FC               	bra	u8777
  5555  002A88  F000               	nop	
  5556  002A8A  0E33               	movlw	51
  5557  002A8C  0012               	return	
  5558  002A8E                     l174:
  5559                           
  5560                           ;main.c: 358: if (PORTBbits.RB7 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('-');}
  5561  002A8E  BE81               	btfsc	3969,7,c	;volatile
  5562  002A90  D00B               	goto	l175
  5563  002A92  0E41               	movlw	65
  5564  002A94  0101               	movlb	1	; () banked
  5565  002A96  6F02               	movwf	??_TaraKey& (0+255),b
  5566  002A98  0EEE               	movlw	238
  5567  002A9A                     u8787:
  5568  002A9A  2EE8               	decfsz	wreg,f,c
  5569  002A9C  D7FE               	bra	u8787
  5570  002A9E  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5571  002AA0  D7FC               	bra	u8787
  5572  002AA2  F000               	nop	
  5573  002AA4  0E2D               	movlw	45
  5574  002AA6  0012               	return	
  5575  002AA8                     l175:
  5576                           
  5577                           ;main.c: 360: PORTBbits.RB0 = 1;
  5578  002AA8  8081               	bsf	3969,0,c	;volatile
  5579                           
  5580                           ;main.c: 361: PORTBbits.RB1 = 1;
  5581  002AAA  8281               	bsf	3969,1,c	;volatile
  5582                           
  5583                           ;main.c: 362: PORTBbits.RB2 = 1;
  5584  002AAC  8481               	bsf	3969,2,c	;volatile
  5585                           
  5586                           ;main.c: 363: PORTBbits.RB3 = 0;
  5587  002AAE  9681               	bcf	3969,3,c	;volatile
  5588                           
  5589                           ;main.c: 365: _delay((unsigned long)((2)*(20000000/4000.0)));
  5590  002AB0  0E0D               	movlw	13
  5591  002AB2  0101               	movlb	1	; () banked
  5592  002AB4  6F02               	movwf	??_TaraKey& (0+255),b
  5593  002AB6  0EFB               	movlw	251
  5594  002AB8                     u8797:
  5595  002AB8  2EE8               	decfsz	wreg,f,c
  5596  002ABA  D7FE               	bra	u8797
  5597  002ABC  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5598  002ABE  D7FC               	bra	u8797
  5599  002AC0  D000               	nop2	
  5600                           
  5601                           ;main.c: 366: if (PORTBbits.RB4 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('N');}
  5602  002AC2  B881               	btfsc	3969,4,c	;volatile
  5603  002AC4  D00B               	goto	l176
  5604  002AC6  0E41               	movlw	65
  5605  002AC8  0101               	movlb	1	; () banked
  5606  002ACA  6F02               	movwf	??_TaraKey& (0+255),b
  5607  002ACC  0EEE               	movlw	238
  5608  002ACE                     u8807:
  5609  002ACE  2EE8               	decfsz	wreg,f,c
  5610  002AD0  D7FE               	bra	u8807
  5611  002AD2  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5612  002AD4  D7FC               	bra	u8807
  5613  002AD6  F000               	nop	
  5614  002AD8  0E4E               	movlw	78
  5615  002ADA  0012               	return	
  5616  002ADC                     l176:
  5617                           
  5618                           ;main.c: 367: if (PORTBbits.RB5 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('0');}
  5619  002ADC  BA81               	btfsc	3969,5,c	;volatile
  5620  002ADE  D00B               	goto	l177
  5621  002AE0  0E41               	movlw	65
  5622  002AE2  0101               	movlb	1	; () banked
  5623  002AE4  6F02               	movwf	??_TaraKey& (0+255),b
  5624  002AE6  0EEE               	movlw	238
  5625  002AE8                     u8817:
  5626  002AE8  2EE8               	decfsz	wreg,f,c
  5627  002AEA  D7FE               	bra	u8817
  5628  002AEC  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5629  002AEE  D7FC               	bra	u8817
  5630  002AF0  F000               	nop	
  5631  002AF2  0E30               	movlw	48
  5632  002AF4  0012               	return	
  5633  002AF6                     l177:
  5634                           
  5635                           ;main.c: 368: if (PORTBbits.RB6 == 0){
  5636  002AF6  AC81               	btfss	3969,6,c	;volatile
  5637  002AF8  D00D               	goto	l179
  5638  002AFA  D010               	goto	l178
  5639  002AFC                     
  5640                           ;main.c: 371: {
  5641                           ;main.c: 373: if( KeyOther('=') == '0'){
  5642  002AFC  0E3D               	movlw	61
  5643  002AFE  EC9D  F015         	call	_KeyOther
  5644  002B02  0A30               	xorlw	48
  5645  002B04  A4D8               	btfss	status,2,c
  5646  002B06  D002               	goto	l181
  5647                           
  5648                           ;main.c: 375: return '.';
  5649  002B08  0E2E               	movlw	46
  5650  002B0A  0012               	return	
  5651  002B0C                     l181:
  5652                           
  5653                           ;main.c: 376: }
  5654                           ;main.c: 378: PORTBbits.RB0 = 1;
  5655  002B0C  8081               	bsf	3969,0,c	;volatile
  5656                           
  5657                           ;main.c: 379: PORTBbits.RB1 = 1;
  5658  002B0E  8281               	bsf	3969,1,c	;volatile
  5659                           
  5660                           ;main.c: 380: PORTBbits.RB2 = 1;
  5661  002B10  8481               	bsf	3969,2,c	;volatile
  5662                           
  5663                           ;main.c: 381: PORTBbits.RB3 = 0;
  5664  002B12  9681               	bcf	3969,3,c	;volatile
  5665  002B14                     l179:
  5666  002B14  AC81               	btfss	3969,6,c	;volatile
  5667  002B16  D7F2               	goto	l180
  5668                           
  5669                           ;main.c: 383: }
  5670                           ;main.c: 384: return '=';
  5671  002B18  0E3D               	movlw	61
  5672  002B1A  0012               	return	
  5673  002B1C                     l178:
  5674                           
  5675                           ;main.c: 385: }
  5676                           ;main.c: 386: if (PORTBbits.RB7 == 0){ _delay((unsigned long)((10)*(20000000/4000.0))); 
      +                          return('+');}
  5677  002B1C  BE81               	btfsc	3969,7,c	;volatile
  5678  002B1E  D00B               	goto	l183
  5679  002B20  0E41               	movlw	65
  5680  002B22  0101               	movlb	1	; () banked
  5681  002B24  6F02               	movwf	??_TaraKey& (0+255),b
  5682  002B26  0EEE               	movlw	238
  5683  002B28                     u8827:
  5684  002B28  2EE8               	decfsz	wreg,f,c
  5685  002B2A  D7FE               	bra	u8827
  5686  002B2C  2F02               	decfsz	??_TaraKey& (0+255),f,b
  5687  002B2E  D7FC               	bra	u8827
  5688  002B30  F000               	nop	
  5689  002B32  0E2B               	movlw	43
  5690  002B34  0012               	return	
  5691  002B36                     l183:
  5692                           
  5693                           ;main.c: 388: return (0xff);
  5694  002B36  0EFF               	movlw	255
  5695  002B38  0012               	return	
  5696  002B3A                     __end_of_TaraKey:
  5697                           	opt stack 0
  5698                           tblptru	equ	0xFF8
  5699                           prodh	equ	0xFF4
  5700                           prodl	equ	0xFF3
  5701                           intcon	equ	0xFF2
  5702                           postinc0	equ	0xFEE
  5703                           wreg	equ	0xFE8
  5704                           indf2	equ	0xFDF
  5705                           postinc2	equ	0xFDE
  5706                           postdec2	equ	0xFDD
  5707                           fsr2h	equ	0xFDA
  5708                           fsr2l	equ	0xFD9
  5709                           status	equ	0xFD8
  5710                           
  5711 ;; *************** function _KeyOther *****************
  5712 ;; Defined at:
  5713 ;;		line 392 in file "main.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  key             1    wreg     unsigned char 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  key             1    1[BANK1 ] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  1    wreg      unsigned char 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5727 ;;      Params:         0       0       0       0       0       0       0       0       0
  5728 ;;      Locals:         0       0       1       0       0       0       0       0       0
  5729 ;;      Temps:          0       0       1       0       0       0       0       0       0
  5730 ;;      Totals:         0       0       2       0       0       0       0       0       0
  5731 ;;Total ram usage:        2 bytes
  5732 ;; Hardware stack levels used:    1
  5733 ;; Hardware stack levels required when called:    4
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		_TaraKey
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text24
  5742  002B3A                     __ptext24:
  5743                           	opt stack 0
  5744  002B3A                     _KeyOther:
  5745                           	opt stack 24
  5746                           
  5747                           ;incstack = 0
  5748                           ;KeyOther@key stored from wreg
  5749  002B3A  0101               	movlb	1	; () banked
  5750  002B3C  6F01               	movwf	KeyOther@key& (0+255),b
  5751                           
  5752                           ;main.c: 394: PORTBbits.RB0 = 0;
  5753  002B3E  9081               	bcf	3969,0,c	;volatile
  5754                           
  5755                           ;main.c: 395: PORTBbits.RB1 = 1;
  5756  002B40  8281               	bsf	3969,1,c	;volatile
  5757                           
  5758                           ;main.c: 396: PORTBbits.RB2 = 1;
  5759  002B42  8481               	bsf	3969,2,c	;volatile
  5760                           
  5761                           ;main.c: 397: PORTBbits.RB3 = 1;
  5762  002B44  8681               	bsf	3969,3,c	;volatile
  5763                           
  5764                           ;main.c: 399: _delay((unsigned long)((2)*(20000000/4000.0)));
  5765  002B46  0E0D               	movlw	13
  5766  002B48  0101               	movlb	1	; () banked
  5767  002B4A  6F00               	movwf	??_KeyOther& (0+255),b
  5768  002B4C  0EFB               	movlw	251
  5769  002B4E                     u8837:
  5770  002B4E  2EE8               	decfsz	wreg,f,c
  5771  002B50  D7FE               	bra	u8837
  5772  002B52  2F00               	decfsz	??_KeyOther& (0+255),f,b
  5773  002B54  D7FC               	bra	u8837
  5774  002B56  D000               	nop2	
  5775                           
  5776                           ;main.c: 400: if ((PORTBbits.RB4 == 0) && (key != 55)) return(55);
  5777  002B58  B881               	btfsc	3969,4,c	;volatile
  5778  002B5A  D007               	goto	l186
  5779  002B5C  0E37               	movlw	55
  5780  002B5E  0101               	movlb	1	; () banked
  5781  002B60  1901               	xorwf	KeyOther@key& (0+255),w,b
  5782  002B62  B4D8               	btfsc	status,2,c
  5783  002B64  D002               	goto	l186
  5784                           
  5785                           ; BSR set to: 1
  5786  002B66  0E37               	movlw	55
  5787                           
  5788                           ; BSR set to: 1
  5789  002B68  0012               	return	
  5790  002B6A                     l186:
  5791                           
  5792                           ;main.c: 401: if ((PORTBbits.RB5 == 0) && (key != '8')) return('8');
  5793  002B6A  BA81               	btfsc	3969,5,c	;volatile
  5794  002B6C  D007               	goto	l188
  5795  002B6E  0E38               	movlw	56
  5796  002B70  0101               	movlb	1	; () banked
  5797  002B72  1901               	xorwf	KeyOther@key& (0+255),w,b
  5798  002B74  B4D8               	btfsc	status,2,c
  5799  002B76  D002               	goto	l188
  5800                           
  5801                           ; BSR set to: 1
  5802  002B78  0E38               	movlw	56
  5803                           
  5804                           ; BSR set to: 1
  5805  002B7A  0012               	return	
  5806  002B7C                     l188:
  5807                           
  5808                           ;main.c: 402: if ((PORTBbits.RB6 == 0) && (key != '9')) return('9');
  5809  002B7C  BC81               	btfsc	3969,6,c	;volatile
  5810  002B7E  D007               	goto	l189
  5811  002B80  0E39               	movlw	57
  5812  002B82  0101               	movlb	1	; () banked
  5813  002B84  1901               	xorwf	KeyOther@key& (0+255),w,b
  5814  002B86  B4D8               	btfsc	status,2,c
  5815  002B88  D002               	goto	l189
  5816                           
  5817                           ; BSR set to: 1
  5818  002B8A  0E39               	movlw	57
  5819                           
  5820                           ; BSR set to: 1
  5821  002B8C  0012               	return	
  5822  002B8E                     l189:
  5823                           
  5824                           ;main.c: 403: if ((PORTBbits.RB7 == 0) && (key != '/')) return('/');
  5825  002B8E  BE81               	btfsc	3969,7,c	;volatile
  5826  002B90  D007               	goto	l190
  5827  002B92  0E2F               	movlw	47
  5828  002B94  0101               	movlb	1	; () banked
  5829  002B96  1901               	xorwf	KeyOther@key& (0+255),w,b
  5830  002B98  B4D8               	btfsc	status,2,c
  5831  002B9A  D002               	goto	l190
  5832                           
  5833                           ; BSR set to: 1
  5834  002B9C  0E2F               	movlw	47
  5835                           
  5836                           ; BSR set to: 1
  5837  002B9E  0012               	return	
  5838  002BA0                     l190:
  5839                           
  5840                           ;main.c: 405: PORTBbits.RB0 = 1;
  5841  002BA0  8081               	bsf	3969,0,c	;volatile
  5842                           
  5843                           ;main.c: 406: PORTBbits.RB1 = 0;
  5844  002BA2  9281               	bcf	3969,1,c	;volatile
  5845                           
  5846                           ;main.c: 407: PORTBbits.RB2 = 1;
  5847  002BA4  8481               	bsf	3969,2,c	;volatile
  5848                           
  5849                           ;main.c: 408: PORTBbits.RB3 = 1;
  5850  002BA6  8681               	bsf	3969,3,c	;volatile
  5851                           
  5852                           ;main.c: 410: _delay((unsigned long)((2)*(20000000/4000.0)));
  5853  002BA8  0E0D               	movlw	13
  5854  002BAA  0101               	movlb	1	; () banked
  5855  002BAC  6F00               	movwf	??_KeyOther& (0+255),b
  5856  002BAE  0EFB               	movlw	251
  5857  002BB0                     u8847:
  5858  002BB0  2EE8               	decfsz	wreg,f,c
  5859  002BB2  D7FE               	bra	u8847
  5860  002BB4  2F00               	decfsz	??_KeyOther& (0+255),f,b
  5861  002BB6  D7FC               	bra	u8847
  5862  002BB8  D000               	nop2	
  5863                           
  5864                           ;main.c: 411: if ((PORTBbits.RB4 == 0) && (key != '4')) return('4');
  5865  002BBA  B881               	btfsc	3969,4,c	;volatile
  5866  002BBC  D007               	goto	l191
  5867  002BBE  0E34               	movlw	52
  5868  002BC0  0101               	movlb	1	; () banked
  5869  002BC2  1901               	xorwf	KeyOther@key& (0+255),w,b
  5870  002BC4  B4D8               	btfsc	status,2,c
  5871  002BC6  D002               	goto	l191
  5872                           
  5873                           ; BSR set to: 1
  5874  002BC8  0E34               	movlw	52
  5875                           
  5876                           ; BSR set to: 1
  5877  002BCA  0012               	return	
  5878  002BCC                     l191:
  5879                           
  5880                           ;main.c: 412: if ((PORTBbits.RB5 == 0) && (key != '5')) return('5');
  5881  002BCC  BA81               	btfsc	3969,5,c	;volatile
  5882  002BCE  D007               	goto	l192
  5883  002BD0  0E35               	movlw	53
  5884  002BD2  0101               	movlb	1	; () banked
  5885  002BD4  1901               	xorwf	KeyOther@key& (0+255),w,b
  5886  002BD6  B4D8               	btfsc	status,2,c
  5887  002BD8  D002               	goto	l192
  5888                           
  5889                           ; BSR set to: 1
  5890  002BDA  0E35               	movlw	53
  5891                           
  5892                           ; BSR set to: 1
  5893  002BDC  0012               	return	
  5894  002BDE                     l192:
  5895                           
  5896                           ;main.c: 413: if ((PORTBbits.RB6 == 0) && (key != '6')) return('6');
  5897  002BDE  BC81               	btfsc	3969,6,c	;volatile
  5898  002BE0  D007               	goto	l193
  5899  002BE2  0E36               	movlw	54
  5900  002BE4  0101               	movlb	1	; () banked
  5901  002BE6  1901               	xorwf	KeyOther@key& (0+255),w,b
  5902  002BE8  B4D8               	btfsc	status,2,c
  5903  002BEA  D002               	goto	l193
  5904                           
  5905                           ; BSR set to: 1
  5906  002BEC  0E36               	movlw	54
  5907                           
  5908                           ; BSR set to: 1
  5909  002BEE  0012               	return	
  5910  002BF0                     l193:
  5911                           
  5912                           ;main.c: 414: if ((PORTBbits.RB7 == 0) && (key != 'x')) return('x');
  5913  002BF0  BE81               	btfsc	3969,7,c	;volatile
  5914  002BF2  D007               	goto	l194
  5915  002BF4  0E78               	movlw	120
  5916  002BF6  0101               	movlb	1	; () banked
  5917  002BF8  1901               	xorwf	KeyOther@key& (0+255),w,b
  5918  002BFA  B4D8               	btfsc	status,2,c
  5919  002BFC  D002               	goto	l194
  5920                           
  5921                           ; BSR set to: 1
  5922  002BFE  0E78               	movlw	120
  5923                           
  5924                           ; BSR set to: 1
  5925  002C00  0012               	return	
  5926  002C02                     l194:
  5927                           
  5928                           ;main.c: 416: PORTBbits.RB0 = 1;
  5929  002C02  8081               	bsf	3969,0,c	;volatile
  5930                           
  5931                           ;main.c: 417: PORTBbits.RB1 = 1;
  5932  002C04  8281               	bsf	3969,1,c	;volatile
  5933                           
  5934                           ;main.c: 418: PORTBbits.RB2 = 0;
  5935  002C06  9481               	bcf	3969,2,c	;volatile
  5936                           
  5937                           ;main.c: 419: PORTBbits.RB3 = 1;
  5938  002C08  8681               	bsf	3969,3,c	;volatile
  5939                           
  5940                           ;main.c: 421: _delay((unsigned long)((2)*(20000000/4000.0)));
  5941  002C0A  0E0D               	movlw	13
  5942  002C0C  0101               	movlb	1	; () banked
  5943  002C0E  6F00               	movwf	??_KeyOther& (0+255),b
  5944  002C10  0EFB               	movlw	251
  5945  002C12                     u8857:
  5946  002C12  2EE8               	decfsz	wreg,f,c
  5947  002C14  D7FE               	bra	u8857
  5948  002C16  2F00               	decfsz	??_KeyOther& (0+255),f,b
  5949  002C18  D7FC               	bra	u8857
  5950  002C1A  D000               	nop2	
  5951                           
  5952                           ;main.c: 422: if ((PORTBbits.RB4 == 0) && (key != '1')) return('1');
  5953  002C1C  B881               	btfsc	3969,4,c	;volatile
  5954  002C1E  D007               	goto	l195
  5955  002C20  0E31               	movlw	49
  5956  002C22  0101               	movlb	1	; () banked
  5957  002C24  1901               	xorwf	KeyOther@key& (0+255),w,b
  5958  002C26  B4D8               	btfsc	status,2,c
  5959  002C28  D002               	goto	l195
  5960                           
  5961                           ; BSR set to: 1
  5962  002C2A  0E31               	movlw	49
  5963                           
  5964                           ; BSR set to: 1
  5965  002C2C  0012               	return	
  5966  002C2E                     l195:
  5967                           
  5968                           ;main.c: 423: if ((PORTBbits.RB5 == 0) && (key != '2')) return('2');
  5969  002C2E  BA81               	btfsc	3969,5,c	;volatile
  5970  002C30  D007               	goto	l196
  5971  002C32  0E32               	movlw	50
  5972  002C34  0101               	movlb	1	; () banked
  5973  002C36  1901               	xorwf	KeyOther@key& (0+255),w,b
  5974  002C38  B4D8               	btfsc	status,2,c
  5975  002C3A  D002               	goto	l196
  5976                           
  5977                           ; BSR set to: 1
  5978  002C3C  0E32               	movlw	50
  5979                           
  5980                           ; BSR set to: 1
  5981  002C3E  0012               	return	
  5982  002C40                     l196:
  5983                           
  5984                           ;main.c: 424: if ((PORTBbits.RB6 == 0) && (key != '3')) return('3');
  5985  002C40  BC81               	btfsc	3969,6,c	;volatile
  5986  002C42  D007               	goto	l197
  5987  002C44  0E33               	movlw	51
  5988  002C46  0101               	movlb	1	; () banked
  5989  002C48  1901               	xorwf	KeyOther@key& (0+255),w,b
  5990  002C4A  B4D8               	btfsc	status,2,c
  5991  002C4C  D002               	goto	l197
  5992                           
  5993                           ; BSR set to: 1
  5994  002C4E  0E33               	movlw	51
  5995                           
  5996                           ; BSR set to: 1
  5997  002C50  0012               	return	
  5998  002C52                     l197:
  5999                           
  6000                           ;main.c: 425: if ((PORTBbits.RB7 == 0) && (key != '-')) return('-');
  6001  002C52  BE81               	btfsc	3969,7,c	;volatile
  6002  002C54  D007               	goto	l198
  6003  002C56  0E2D               	movlw	45
  6004  002C58  0101               	movlb	1	; () banked
  6005  002C5A  1901               	xorwf	KeyOther@key& (0+255),w,b
  6006  002C5C  B4D8               	btfsc	status,2,c
  6007  002C5E  D002               	goto	l198
  6008                           
  6009                           ; BSR set to: 1
  6010  002C60  0E2D               	movlw	45
  6011                           
  6012                           ; BSR set to: 1
  6013  002C62  0012               	return	
  6014  002C64                     l198:
  6015                           
  6016                           ;main.c: 427: PORTBbits.RB0 = 1;
  6017  002C64  8081               	bsf	3969,0,c	;volatile
  6018                           
  6019                           ;main.c: 428: PORTBbits.RB1 = 1;
  6020  002C66  8281               	bsf	3969,1,c	;volatile
  6021                           
  6022                           ;main.c: 429: PORTBbits.RB2 = 1;
  6023  002C68  8481               	bsf	3969,2,c	;volatile
  6024                           
  6025                           ;main.c: 430: PORTBbits.RB3 = 0;
  6026  002C6A  9681               	bcf	3969,3,c	;volatile
  6027                           
  6028                           ;main.c: 432: _delay((unsigned long)((2)*(20000000/4000.0)));
  6029  002C6C  0E0D               	movlw	13
  6030  002C6E  0101               	movlb	1	; () banked
  6031  002C70  6F00               	movwf	??_KeyOther& (0+255),b
  6032  002C72  0EFB               	movlw	251
  6033  002C74                     u8867:
  6034  002C74  2EE8               	decfsz	wreg,f,c
  6035  002C76  D7FE               	bra	u8867
  6036  002C78  2F00               	decfsz	??_KeyOther& (0+255),f,b
  6037  002C7A  D7FC               	bra	u8867
  6038  002C7C  D000               	nop2	
  6039                           
  6040                           ;main.c: 433: if ((PORTBbits.RB4 == 0) && (key != 'N')) return('N');
  6041  002C7E  B881               	btfsc	3969,4,c	;volatile
  6042  002C80  D007               	goto	l199
  6043  002C82  0E4E               	movlw	78
  6044  002C84  0101               	movlb	1	; () banked
  6045  002C86  1901               	xorwf	KeyOther@key& (0+255),w,b
  6046  002C88  B4D8               	btfsc	status,2,c
  6047  002C8A  D002               	goto	l199
  6048                           
  6049                           ; BSR set to: 1
  6050  002C8C  0E4E               	movlw	78
  6051                           
  6052                           ; BSR set to: 1
  6053  002C8E  0012               	return	
  6054  002C90                     l199:
  6055                           
  6056                           ;main.c: 434: if ((PORTBbits.RB5 == 0) && (key != '0')) return('0');
  6057  002C90  BA81               	btfsc	3969,5,c	;volatile
  6058  002C92  D007               	goto	l200
  6059  002C94  0E30               	movlw	48
  6060  002C96  0101               	movlb	1	; () banked
  6061  002C98  1901               	xorwf	KeyOther@key& (0+255),w,b
  6062  002C9A  B4D8               	btfsc	status,2,c
  6063  002C9C  D002               	goto	l200
  6064                           
  6065                           ; BSR set to: 1
  6066  002C9E  0E30               	movlw	48
  6067                           
  6068                           ; BSR set to: 1
  6069  002CA0  0012               	return	
  6070  002CA2                     l200:
  6071                           
  6072                           ;main.c: 435: if ((PORTBbits.RB6 == 0) && (key != '=')) return('=');
  6073  002CA2  BC81               	btfsc	3969,6,c	;volatile
  6074  002CA4  D007               	goto	l201
  6075  002CA6  0E3D               	movlw	61
  6076  002CA8  0101               	movlb	1	; () banked
  6077  002CAA  1901               	xorwf	KeyOther@key& (0+255),w,b
  6078  002CAC  B4D8               	btfsc	status,2,c
  6079  002CAE  D002               	goto	l201
  6080                           
  6081                           ; BSR set to: 1
  6082  002CB0  0E3D               	movlw	61
  6083                           
  6084                           ; BSR set to: 1
  6085  002CB2  0012               	return	
  6086  002CB4                     l201:
  6087                           
  6088                           ;main.c: 436: if ((PORTBbits.RB7 == 0) && (key != '+')) return('+');
  6089  002CB4  BE81               	btfsc	3969,7,c	;volatile
  6090  002CB6  D007               	goto	l202
  6091  002CB8  0E2B               	movlw	43
  6092  002CBA  0101               	movlb	1	; () banked
  6093  002CBC  1901               	xorwf	KeyOther@key& (0+255),w,b
  6094  002CBE  B4D8               	btfsc	status,2,c
  6095  002CC0  D002               	goto	l202
  6096                           
  6097                           ; BSR set to: 1
  6098  002CC2  0E2B               	movlw	43
  6099                           
  6100                           ; BSR set to: 1
  6101  002CC4  0012               	return	
  6102  002CC6                     l202:
  6103                           
  6104                           ;main.c: 438: return (0xff);
  6105                           
  6106                           ; BSR set to: 1
  6107  002CC6  0EFF               	movlw	255
  6108  002CC8  0012               	return	
  6109  002CCA                     __end_of_KeyOther:
  6110                           	opt stack 0
  6111                           tblptru	equ	0xFF8
  6112                           prodh	equ	0xFF4
  6113                           prodl	equ	0xFF3
  6114                           intcon	equ	0xFF2
  6115                           postinc0	equ	0xFEE
  6116                           wreg	equ	0xFE8
  6117                           indf2	equ	0xFDF
  6118                           postinc2	equ	0xFDE
  6119                           postdec2	equ	0xFDD
  6120                           fsr2h	equ	0xFDA
  6121                           fsr2l	equ	0xFD9
  6122                           status	equ	0xFD8
  6123                           
  6124 ;; *************** function _ISR *****************
  6125 ;; Defined at:
  6126 ;;		line 217 in file "main.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;		None
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  arra           12   43[BANK0 ] unsigned char [12]
  6131 ;;  al              4   56[BANK0 ] struct .
  6132 ;;  a               1   55[BANK0 ] unsigned char 
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6142 ;;      Params:         0       0       0       0       0       0       0       0       0
  6143 ;;      Locals:         0      17       0       0       0       0       0       0       0
  6144 ;;      Temps:          0      18       0       0       0       0       0       0       0
  6145 ;;      Totals:         0      35       0       0       0       0       0       0       0
  6146 ;;Total ram usage:       35 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; Hardware stack levels required when called:    3
  6149 ;; This function calls:
  6150 ;;		_sprintf
  6151 ;;		i2_lcd_msg
  6152 ;; This function is called by:
  6153 ;;		Interrupt level 2
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	intcode
  6158  000008                     __pintcode:
  6159                           	opt stack 0
  6160  000008                     _ISR:
  6161                           	opt stack 22
  6162                           
  6163                           ;incstack = 0
  6164  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  6165  00000A  ED05  F01A         	call	int_func,f	;refresh shadow registers
  6166                           tblptru	equ	0xFF8
  6167                           prodh	equ	0xFF4
  6168                           prodl	equ	0xFF3
  6169                           intcon	equ	0xFF2
  6170                           postinc0	equ	0xFEE
  6171                           wreg	equ	0xFE8
  6172                           indf2	equ	0xFDF
  6173                           postinc2	equ	0xFDE
  6174                           postdec2	equ	0xFDD
  6175                           fsr2h	equ	0xFDA
  6176                           fsr2l	equ	0xFD9
  6177                           status	equ	0xFD8
  6178                           
  6179                           	psect	intcode_body
  6180  00340A                     __pintcode_body:
  6181                           	opt stack 22
  6182  00340A                     int_func:
  6183                           	opt stack 22
  6184  00340A  0006               	pop		; remove dummy address from shadow register refresh
  6185  00340C  CFFA F0B5          	movff	pclath,??_ISR
  6186  003410  CFFB F0B6          	movff	pclatu,??_ISR+1
  6187  003414  CFE9 F0B7          	movff	fsr0l,??_ISR+2
  6188  003418  CFEA F0B8          	movff	fsr0h,??_ISR+3
  6189  00341C  CFE1 F0B9          	movff	fsr1l,??_ISR+4
  6190  003420  CFE2 F0BA          	movff	fsr1h,??_ISR+5
  6191  003424  CFD9 F0BB          	movff	fsr2l,??_ISR+6
  6192  003428  CFDA F0BC          	movff	fsr2h,??_ISR+7
  6193  00342C  CFF3 F0BD          	movff	prodl,??_ISR+8
  6194  003430  CFF4 F0BE          	movff	prodh,??_ISR+9
  6195  003434  CFF6 F0BF          	movff	tblptrl,??_ISR+10
  6196  003438  CFF7 F0C0          	movff	tblptrh,??_ISR+11
  6197  00343C  CFF8 F0C1          	movff	tblptru,??_ISR+12
  6198  003440  CFF5 F0C2          	movff	tablat,??_ISR+13
  6199  003444  C05E  F0C3         	movff	btemp,??_ISR+14
  6200  003448  C05F  F0C4         	movff	btemp+1,??_ISR+15
  6201  00344C  C060  F0C5         	movff	btemp+2,??_ISR+16
  6202  003450  C061  F0C6         	movff	btemp+3,??_ISR+17
  6203                           
  6204                           ;main.c: 221: unsigned char a;
  6205                           ;main.c: 223: if(PIR1bits.RCIF == 1)
  6206  003454  AA9E               	btfss	3998,5,c	;volatile
  6207  003456  D040               	goto	i2l144
  6208                           
  6209                           ;main.c: 224: {
  6210                           ;main.c: 227: t_float al;
  6211                           ;main.c: 228: a = RCREG;
  6212  003458  CFAE F0D3          	movff	4014,ISR@a	;volatile
  6213                           
  6214                           ;main.c: 229: char arra[12];
  6215                           ;main.c: 231: bufferread[11] = bufferread[10];
  6216  00345C  C083  F084         	movff	_bufferread+10,_bufferread+11
  6217                           
  6218                           ;main.c: 232: bufferread[10] = bufferread[9];
  6219  003460  C082  F083         	movff	_bufferread+9,_bufferread+10
  6220                           
  6221                           ;main.c: 233: bufferread[9] = bufferread[8];
  6222  003464  C081  F082         	movff	_bufferread+8,_bufferread+9
  6223                           
  6224                           ;main.c: 234: bufferread[8] = bufferread[7];
  6225  003468  C080  F081         	movff	_bufferread+7,_bufferread+8
  6226                           
  6227                           ;main.c: 235: bufferread[7] = bufferread[6];
  6228  00346C  C07F  F080         	movff	_bufferread+6,_bufferread+7
  6229                           
  6230                           ;main.c: 236: bufferread[6] = bufferread[5];
  6231  003470  C07E  F07F         	movff	_bufferread+5,_bufferread+6
  6232                           
  6233                           ;main.c: 237: bufferread[5] = bufferread[4];
  6234  003474  C07D  F07E         	movff	_bufferread+4,_bufferread+5
  6235                           
  6236                           ;main.c: 238: bufferread[4] = bufferread[3];
  6237  003478  C07C  F07D         	movff	_bufferread+3,_bufferread+4
  6238                           
  6239                           ;main.c: 239: bufferread[3] = bufferread[2];
  6240  00347C  C07B  F07C         	movff	_bufferread+2,_bufferread+3
  6241                           
  6242                           ;main.c: 240: bufferread[2] = bufferread[1];
  6243  003480  C07A  F07B         	movff	_bufferread+1,_bufferread+2
  6244                           
  6245                           ;main.c: 241: bufferread[1] = a;
  6246  003484  C0D3  F07A         	movff	ISR@a,_bufferread+1
  6247                           
  6248                           ;main.c: 243: if(bufferread[5] == 255 && bufferread[6] == 170){
  6249  003488  0100               	movlb	0	; () banked
  6250  00348A  297E               	incf	(_bufferread+5)& (0+255),w,b
  6251  00348C  A4D8               	btfss	status,2,c
  6252  00348E  D024               	goto	i2l144
  6253                           
  6254                           ; BSR set to: 0
  6255  003490  0EAA               	movlw	170
  6256  003492  197F               	xorwf	(_bufferread+6)& (0+255),w,b
  6257  003494  A4D8               	btfss	status,2,c
  6258  003496  D020               	goto	i2l144
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;main.c: 245: al.B0 = bufferread[4];
  6262  003498  C07D  F0D4         	movff	_bufferread+4,ISR@al
  6263                           
  6264                           ;main.c: 246: al.B1 = bufferread[3];
  6265  00349C  C07C  F0D5         	movff	_bufferread+3,ISR@al+1
  6266                           
  6267                           ;main.c: 247: al.B2 = bufferread[2];
  6268  0034A0  C07B  F0D6         	movff	_bufferread+2,ISR@al+2
  6269                           
  6270                           ;main.c: 248: al.B3 = bufferread[1];
  6271  0034A4  C07A  F0D7         	movff	_bufferread+1,ISR@al+3
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;main.c: 249: sprintf(arra,"%f", al.FV);
  6275  0034A8  0EC7               	movlw	low ISR@arra
  6276  0034AA  6E51               	movwf	sprintf@sp,c
  6277  0034AC  0E00               	movlw	high ISR@arra
  6278  0034AE  6E52               	movwf	sprintf@sp+1,c
  6279  0034B0  0E91               	movlw	low STR_1
  6280  0034B2  6E53               	movwf	sprintf@f,c
  6281  0034B4  0E08               	movlw	high STR_1
  6282  0034B6  6E54               	movwf	sprintf@f+1,c
  6283  0034B8  C0D4  F055         	movff	ISR@al,?_sprintf+4
  6284  0034BC  C0D5  F056         	movff	ISR@al+1,?_sprintf+5
  6285  0034C0  C0D6  F057         	movff	ISR@al+2,?_sprintf+6
  6286  0034C4  C0D7  F058         	movff	ISR@al+3,?_sprintf+7
  6287  0034C8  EC4B  F004         	call	_sprintf	;wreg free
  6288                           
  6289                           ;main.c: 250: lcd_msg(arra);
  6290  0034CC  0EC7               	movlw	low ISR@arra
  6291  0034CE  6E04               	movwf	i2lcd_msg@c,c
  6292  0034D0  0E00               	movlw	high ISR@arra
  6293  0034D2  6E05               	movwf	i2lcd_msg@c+1,c
  6294  0034D4  ECAF  F01D         	call	i2_lcd_msg	;wreg free
  6295  0034D8                     i2l144:
  6296  0034D8  C0C6  F061         	movff	??_ISR+17,btemp+3
  6297  0034DC  C0C5  F060         	movff	??_ISR+16,btemp+2
  6298  0034E0  C0C4  F05F         	movff	??_ISR+15,btemp+1
  6299  0034E4  C0C3  F05E         	movff	??_ISR+14,btemp
  6300  0034E8  C0C2  FFF5         	movff	??_ISR+13,tablat
  6301  0034EC  C0C1  FFF8         	movff	??_ISR+12,tblptru
  6302  0034F0  C0C0  FFF7         	movff	??_ISR+11,tblptrh
  6303  0034F4  C0BF  FFF6         	movff	??_ISR+10,tblptrl
  6304  0034F8  C0BE  FFF4         	movff	??_ISR+9,prodh
  6305  0034FC  C0BD  FFF3         	movff	??_ISR+8,prodl
  6306  003500  C0BC  FFDA         	movff	??_ISR+7,fsr2h
  6307  003504  C0BB  FFD9         	movff	??_ISR+6,fsr2l
  6308  003508  C0BA  FFE2         	movff	??_ISR+5,fsr1h
  6309  00350C  C0B9  FFE1         	movff	??_ISR+4,fsr1l
  6310  003510  C0B8  FFEA         	movff	??_ISR+3,fsr0h
  6311  003514  C0B7  FFE9         	movff	??_ISR+2,fsr0l
  6312  003518  C0B6  FFFB         	movff	??_ISR+1,pclatu
  6313  00351C  C0B5  FFFA         	movff	??_ISR,pclath
  6314  003520  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6315  003522  0011               	retfie		f
  6316  003524                     __end_of_ISR:
  6317                           	opt stack 0
  6318                           pclatu	equ	0xFFB
  6319                           pclath	equ	0xFFA
  6320                           tblptru	equ	0xFF8
  6321                           tblptrh	equ	0xFF7
  6322                           tblptrl	equ	0xFF6
  6323                           tablat	equ	0xFF5
  6324                           prodh	equ	0xFF4
  6325                           prodl	equ	0xFF3
  6326                           intcon	equ	0xFF2
  6327                           postinc0	equ	0xFEE
  6328                           fsr0h	equ	0xFEA
  6329                           fsr0l	equ	0xFE9
  6330                           wreg	equ	0xFE8
  6331                           fsr1h	equ	0xFE2
  6332                           fsr1l	equ	0xFE1
  6333                           indf2	equ	0xFDF
  6334                           postinc2	equ	0xFDE
  6335                           postdec2	equ	0xFDD
  6336                           fsr2h	equ	0xFDA
  6337                           fsr2l	equ	0xFD9
  6338                           status	equ	0xFD8
  6339                           
  6340 ;; *************** function i2_lcd_msg *****************
  6341 ;; Defined at:
  6342 ;;		line 198 in file "main.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  c               2    3[COMRAM] PTR unsigned char 
  6345 ;;		 -> ISR@arra(12), GetData@y(2), 
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;		None
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  1    wreg      void 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6357 ;;      Params:         2       0       0       0       0       0       0       0       0
  6358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6360 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6361 ;;Total ram usage:        2 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:    2
  6364 ;; This function calls:
  6365 ;;		i2_lcd_dwr
  6366 ;; This function is called by:
  6367 ;;		_ISR
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text26
  6372  003B5E                     __ptext26:
  6373                           	opt stack 0
  6374  003B5E                     i2_lcd_msg:
  6375                           	opt stack 22
  6376                           
  6377                           ;main.c: 200: while(*c !=0){
  6378                           
  6379                           ;incstack = 0
  6380  003B5E  D009               	goto	i2l132
  6381  003B60                     
  6382                           ;main.c: 201: lcd_dwr(*c++);
  6383  003B60  C004  FFD9         	movff	i2lcd_msg@c,fsr2l
  6384  003B64  C005  FFDA         	movff	i2lcd_msg@c+1,fsr2h
  6385  003B68  50DF               	movf	indf2,w,c
  6386  003B6A  EC60  F01D         	call	i2_lcd_dwr
  6387  003B6E  4A04               	infsnz	i2lcd_msg@c,f,c
  6388  003B70  2A05               	incf	i2lcd_msg@c+1,f,c
  6389  003B72                     i2l132:
  6390  003B72  C004  FFD9         	movff	i2lcd_msg@c,fsr2l
  6391  003B76  C005  FFDA         	movff	i2lcd_msg@c+1,fsr2h
  6392  003B7A  50DF               	movf	indf2,w,c
  6393  003B7C  B4D8               	btfsc	status,2,c
  6394  003B7E  0012               	return	
  6395  003B80  D7EF               	goto	i2l133
  6396  003B82                     __end_ofi2_lcd_msg:
  6397                           	opt stack 0
  6398                           pclatu	equ	0xFFB
  6399                           pclath	equ	0xFFA
  6400                           tblptru	equ	0xFF8
  6401                           tblptrh	equ	0xFF7
  6402                           tblptrl	equ	0xFF6
  6403                           tablat	equ	0xFF5
  6404                           prodh	equ	0xFF4
  6405                           prodl	equ	0xFF3
  6406                           intcon	equ	0xFF2
  6407                           postinc0	equ	0xFEE
  6408                           fsr0h	equ	0xFEA
  6409                           fsr0l	equ	0xFE9
  6410                           wreg	equ	0xFE8
  6411                           fsr1h	equ	0xFE2
  6412                           fsr1l	equ	0xFE1
  6413                           indf2	equ	0xFDF
  6414                           postinc2	equ	0xFDE
  6415                           postdec2	equ	0xFDD
  6416                           fsr2h	equ	0xFDA
  6417                           fsr2l	equ	0xFD9
  6418                           status	equ	0xFD8
  6419                           
  6420 ;; *************** function i2_lcd_dwr *****************
  6421 ;; Defined at:
  6422 ;;		line 184 in file "main.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;  x               1    wreg     unsigned char 
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  x               1    2[COMRAM] unsigned char 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  1    wreg      void 
  6429 ;; Registers used:
  6430 ;;		wreg, status,2, status,0, cstack
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6436 ;;      Params:         0       0       0       0       0       0       0       0       0
  6437 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6438 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6439 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6440 ;;Total ram usage:        2 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    1
  6443 ;; This function calls:
  6444 ;;		i2_lcd_lat
  6445 ;; This function is called by:
  6446 ;;		i2_lcd_msg
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text27
  6451  003AC0                     __ptext27:
  6452                           	opt stack 0
  6453  003AC0                     i2_lcd_dwr:
  6454                           	opt stack 22
  6455                           
  6456                           ;incstack = 0
  6457                           ;i2lcd_dwr@x stored from wreg
  6458  003AC0  6E03               	movwf	i2lcd_dwr@x,c
  6459                           
  6460                           ;main.c: 186: PORTDbits.RD0 = 1;
  6461  003AC2  8083               	bsf	3971,0,c	;volatile
  6462                           
  6463                           ;main.c: 187: PORTD &= 0x0F;
  6464  003AC4  0E0F               	movlw	15
  6465  003AC6  1683               	andwf	3971,f,c	;volatile
  6466                           
  6467                           ;main.c: 188: PORTD |= ( (x & 0xF0));
  6468  003AC8  5003               	movf	i2lcd_dwr@x,w,c
  6469  003ACA  0BF0               	andlw	240
  6470  003ACC  1283               	iorwf	3971,f,c	;volatile
  6471                           
  6472                           ;main.c: 189: lcd_lat();
  6473  003ACE  EC04  F01E         	call	i2_lcd_lat	;wreg free
  6474                           
  6475                           ;main.c: 191: PORTD &= 0x0F;
  6476  003AD2  0E0F               	movlw	15
  6477  003AD4  1683               	andwf	3971,f,c	;volatile
  6478                           
  6479                           ;main.c: 193: PORTD |= ((x & 0x0F) << 4);
  6480  003AD6  C003  F002         	movff	i2lcd_dwr@x,??i2_lcd_dwr
  6481  003ADA  0E0F               	movlw	15
  6482  003ADC  1602               	andwf	??i2_lcd_dwr,f,c
  6483  003ADE  3802               	swapf	??i2_lcd_dwr,w,c
  6484  003AE0  0BF0               	andlw	240
  6485  003AE2  1283               	iorwf	3971,f,c	;volatile
  6486                           
  6487                           ;main.c: 194: lcd_lat();
  6488  003AE4  EC04  F01E         	call	i2_lcd_lat	;wreg free
  6489  003AE8  0012               	return		;funcret
  6490  003AEA                     __end_ofi2_lcd_dwr:
  6491                           	opt stack 0
  6492                           pclatu	equ	0xFFB
  6493                           pclath	equ	0xFFA
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           prodh	equ	0xFF4
  6499                           prodl	equ	0xFF3
  6500                           intcon	equ	0xFF2
  6501                           postinc0	equ	0xFEE
  6502                           fsr0h	equ	0xFEA
  6503                           fsr0l	equ	0xFE9
  6504                           wreg	equ	0xFE8
  6505                           fsr1h	equ	0xFE2
  6506                           fsr1l	equ	0xFE1
  6507                           indf2	equ	0xFDF
  6508                           postinc2	equ	0xFDE
  6509                           postdec2	equ	0xFDD
  6510                           fsr2h	equ	0xFDA
  6511                           fsr2l	equ	0xFD9
  6512                           status	equ	0xFD8
  6513                           
  6514 ;; *************** function i2_lcd_lat *****************
  6515 ;; Defined at:
  6516 ;;		line 156 in file "main.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;		None
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;		None
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  1    wreg      void 
  6523 ;; Registers used:
  6524 ;;		wreg
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6530 ;;      Params:         0       0       0       0       0       0       0       0       0
  6531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6532 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6533 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6534 ;;Total ram usage:        1 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		i2_lcd_dwr
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text28
  6544  003C08                     __ptext28:
  6545                           	opt stack 0
  6546  003C08                     i2_lcd_lat:
  6547                           	opt stack 22
  6548                           
  6549                           ;main.c: 158: PORTDbits.RD1 =1 ;
  6550                           
  6551                           ;incstack = 0
  6552  003C08  8283               	bsf	3971,1,c	;volatile
  6553                           
  6554                           ;main.c: 159: _delay((unsigned long)((1)*(20000000/4000.0)));
  6555  003C0A  0E07               	movlw	7
  6556  003C0C  6E01               	movwf	??i2_lcd_lat& (0+255),c
  6557  003C0E  0E7D               	movlw	125
  6558  003C10                     i2u887_47:
  6559  003C10  2EE8               	decfsz	wreg,f,c
  6560  003C12  D7FE               	bra	i2u887_47
  6561  003C14  2E01               	decfsz	??i2_lcd_lat& (0+255),f,c
  6562  003C16  D7FC               	bra	i2u887_47
  6563  003C18  F000               	nop	
  6564                           
  6565                           ;main.c: 160: PORTDbits.RD1=0;
  6566  003C1A  9283               	bcf	3971,1,c	;volatile
  6567  003C1C  0012               	return		;funcret
  6568  003C1E                     __end_ofi2_lcd_lat:
  6569                           	opt stack 0
  6570                           pclatu	equ	0xFFB
  6571                           pclath	equ	0xFFA
  6572                           tblptru	equ	0xFF8
  6573                           tblptrh	equ	0xFF7
  6574                           tblptrl	equ	0xFF6
  6575                           tablat	equ	0xFF5
  6576                           prodh	equ	0xFF4
  6577                           prodl	equ	0xFF3
  6578                           intcon	equ	0xFF2
  6579                           postinc0	equ	0xFEE
  6580                           fsr0h	equ	0xFEA
  6581                           fsr0l	equ	0xFE9
  6582                           wreg	equ	0xFE8
  6583                           fsr1h	equ	0xFE2
  6584                           fsr1l	equ	0xFE1
  6585                           indf2	equ	0xFDF
  6586                           postinc2	equ	0xFDE
  6587                           postdec2	equ	0xFDD
  6588                           fsr2h	equ	0xFDA
  6589                           fsr2l	equ	0xFD9
  6590                           status	equ	0xFD8
  6591                           
  6592 ;; *************** function _sprintf *****************
  6593 ;; Defined at:
  6594 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  sp              2   80[COMRAM] PTR unsigned char 
  6597 ;;		 -> ISR@arra(12), 
  6598 ;;  f               2   82[COMRAM] PTR const unsigned char 
  6599 ;;		 -> STR_1(3), 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  fval            4   20[BANK0 ] PTR const unsigned char 
  6602 ;;  tmpval          4   16[BANK0 ] struct .
  6603 ;;  val             4   10[BANK0 ] unsigned long 
  6604 ;;  cp              3    0        PTR const unsigned char 
  6605 ;;  exp             2   14[BANK0 ] int 
  6606 ;;  prec            2    8[BANK0 ] int 
  6607 ;;  flag            2    6[BANK0 ] unsigned short 
  6608 ;;  ap              2    4[BANK0 ] PTR void [1]
  6609 ;;		 -> ?_sprintf(2), 
  6610 ;;  len             2    0        unsigned int 
  6611 ;;  width           2    0        int 
  6612 ;;  c               1   24[BANK0 ] char 
  6613 ;;  d               1    0        unsigned char 
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  2   80[COMRAM] int 
  6616 ;; Registers used:
  6617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6623 ;;      Params:         8       0       0       0       0       0       0       0       0
  6624 ;;      Locals:         0      25       0       0       0       0       0       0       0
  6625 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6626 ;;      Totals:        10      25       0       0       0       0       0       0       0
  6627 ;;Total ram usage:       35 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:    2
  6630 ;; This function calls:
  6631 ;;		___awdiv
  6632 ;;		___fladd
  6633 ;;		___flsub
  6634 ;;		___fltol
  6635 ;;		___lldiv
  6636 ;;		___llmod
  6637 ;;		___wmul
  6638 ;;		__div_to_l_
  6639 ;;		__tdiv_to_l_
  6640 ;;		_fround
  6641 ;;		_scale
  6642 ;;		i2___flge
  6643 ;;		i2___flmul
  6644 ;;		i2___flneg
  6645 ;;		i2___xxtofl
  6646 ;; This function is called by:
  6647 ;;		_ISR
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text29
  6652  000896                     __ptext29:
  6653                           	opt stack 0
  6654  000896                     _sprintf:
  6655                           	opt stack 22
  6656                           
  6657                           ;doprnt.c: 494: va_list ap;
  6658                           ;doprnt.c: 499: signed char c;
  6659                           ;doprnt.c: 501: int width;
  6660                           ;doprnt.c: 504: int prec;
  6661                           ;doprnt.c: 508: unsigned short flag;
  6662                           ;doprnt.c: 515: char d;
  6663                           ;doprnt.c: 516: double fval;
  6664                           ;doprnt.c: 517: int exp;
  6665                           ;doprnt.c: 523: union {
  6666                           ;doprnt.c: 524: unsigned long vd;
  6667                           ;doprnt.c: 525: double integ;
  6668                           ;doprnt.c: 526: } tmpval;
  6669                           ;doprnt.c: 528: unsigned long val;
  6670                           ;doprnt.c: 529: unsigned len;
  6671                           ;doprnt.c: 530: const char * cp;
  6672                           ;doprnt.c: 533: *ap = __va_start();
  6673                           
  6674                           ;incstack = 0
  6675  000896  0E55               	movlw	low (?_sprintf+4)
  6676  000898  0100               	movlb	0	; () banked
  6677  00089A  6FA0               	movwf	sprintf@ap& (0+255),b
  6678  00089C  0E00               	movlw	high (?_sprintf+4)
  6679  00089E  6FA1               	movwf	(sprintf@ap+1)& (0+255),b
  6680                           
  6681                           ;doprnt.c: 536: while(c = *f++) {
  6682  0008A0  D329               	goto	i2l281
  6683  0008A2                     
  6684                           ; BSR set to: 0
  6685                           ;doprnt.c: 538: if(c != '%')
  6686                           
  6687                           ; BSR set to: 0
  6688  0008A2  0E25               	movlw	37
  6689  0008A4  19B4               	xorwf	sprintf@c& (0+255),w,b
  6690  0008A6  B4D8               	btfsc	status,2,c
  6691  0008A8  D007               	goto	i2l237
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;doprnt.c: 540: {
  6695                           ;doprnt.c: 541: ((*sp++ = (c)));
  6696  0008AA  C051  FFD9         	movff	sprintf@sp,fsr2l
  6697  0008AE  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  6698  0008B2  C0B4  FFDF         	movff	sprintf@c,indf2
  6699  0008B6  D31C               	goto	i2l6152
  6700  0008B8                     i2l237:
  6701                           
  6702                           ; BSR set to: 0
  6703                           ;doprnt.c: 543: }
  6704                           ;doprnt.c: 548: flag = 0;
  6705                           
  6706                           ; BSR set to: 0
  6707  0008B8  0E00               	movlw	0
  6708  0008BA  6FA3               	movwf	(sprintf@flag+1)& (0+255),b
  6709  0008BC  0E00               	movlw	0
  6710  0008BE  6FA2               	movwf	sprintf@flag& (0+255),b
  6711                           
  6712                           ;doprnt.c: 635: switch(c = *f++) {
  6713  0008C0  D002               	goto	i2l238
  6714  0008C2                     
  6715                           ; BSR set to: 0
  6716                           ;doprnt.c: 663: flag |= 0x400;
  6717                           
  6718                           ; BSR set to: 0
  6719  0008C2  85A3               	bsf	(sprintf@flag+1)& (0+255),2,b
  6720                           
  6721                           ;doprnt.c: 664: break;
  6722  0008C4  D011               	goto	i2l242
  6723  0008C6                     i2l238:
  6724                           
  6725                           ; BSR set to: 0
  6726                           
  6727                           ; BSR set to: 0
  6728  0008C6  C053  FFF6         	movff	sprintf@f,tblptrl
  6729  0008CA  C054  FFF7         	movff	sprintf@f+1,tblptrh
  6730  0008CE  4A53               	infsnz	sprintf@f,f,c
  6731  0008D0  2A54               	incf	sprintf@f+1,f,c
  6732  0008D2                     	if	0	;tblptru may be non-zero
  6733  0008D2                     	endif
  6734  0008D2                     	if	0	;tblptru may be non-zero
  6735  0008D2                     	endif
  6736  0008D2  0008               	tblrd		*
  6737  0008D4  CFF5 F0B4          	movff	tablat,sprintf@c
  6738  0008D8  51B4               	movf	sprintf@c& (0+255),w,b
  6739                           
  6740                           ; Switch size 1, requested type "space"
  6741                           ; Number of cases is 2, Range of values is 0 to 102
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte            7     4 (average)
  6745                           ;	Chosen strategy is simple_byte
  6746  0008DA  0A00               	xorlw	0	; case 0
  6747  0008DC  B4D8               	btfsc	status,2,c
  6748  0008DE  D316               	goto	i2u857_40
  6749  0008E0  0A66               	xorlw	102	; case 102
  6750  0008E2  B4D8               	btfsc	status,2,c
  6751  0008E4  D7EE               	goto	i2l241
  6752  0008E6  D306               	goto	i2l281
  6753  0008E8                     i2l242:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;doprnt.c: 825: if(flag & (0x700)) {
  6757                           
  6758                           ; BSR set to: 0
  6759  0008E8  0E07               	movlw	7
  6760  0008EA  15A3               	andwf	(sprintf@flag+1)& (0+255),w,b
  6761  0008EC  B4D8               	btfsc	status,2,c
  6762  0008EE  D2F0               	goto	i2l244
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;doprnt.c: 829: prec = 6;
  6766  0008F0  0E00               	movlw	0
  6767  0008F2  6FA5               	movwf	(sprintf@prec+1)& (0+255),b
  6768  0008F4  0E06               	movlw	6
  6769  0008F6  6FA4               	movwf	sprintf@prec& (0+255),b
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6773  0008F8  C0A0  FFD9         	movff	sprintf@ap,fsr2l
  6774  0008FC  C0A1  FFDA         	movff	sprintf@ap+1,fsr2h
  6775  000900  CFDE F0B0          	movff	postinc2,sprintf@fval
  6776  000904  CFDE F0B1          	movff	postinc2,sprintf@fval+1
  6777  000908  CFDE F0B2          	movff	postinc2,sprintf@fval+2
  6778  00090C  CFDE F0B3          	movff	postinc2,sprintf@fval+3
  6779                           
  6780                           ; BSR set to: 0
  6781  000910  0E04               	movlw	4
  6782  000912  27A0               	addwf	sprintf@ap& (0+255),f,b
  6783  000914  0E00               	movlw	0
  6784  000916  23A1               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;doprnt.c: 831: if(fval < 0.0) {
  6788  000918  AFB3               	btfss	(sprintf@fval+3)& (0+255),7,b
  6789  00091A  D015               	goto	i2l245
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;doprnt.c: 832: fval = -fval;
  6793  00091C  C0B0  F001         	movff	sprintf@fval,i2___flneg@f1
  6794  000920  C0B1  F002         	movff	sprintf@fval+1,i2___flneg@f1+1
  6795  000924  C0B2  F003         	movff	sprintf@fval+2,i2___flneg@f1+2
  6796  000928  C0B3  F004         	movff	sprintf@fval+3,i2___flneg@f1+3
  6797  00092C  EC08  F01D         	call	i2___flneg	;wreg free
  6798  000930  C001  F0B0         	movff	?i2___flneg,sprintf@fval
  6799  000934  C002  F0B1         	movff	?i2___flneg+1,sprintf@fval+1
  6800  000938  C003  F0B2         	movff	?i2___flneg+2,sprintf@fval+2
  6801  00093C  C004  F0B3         	movff	?i2___flneg+3,sprintf@fval+3
  6802                           
  6803                           ;doprnt.c: 833: flag |= 0x03;
  6804  000940  0E03               	movlw	3
  6805  000942  0100               	movlb	0	; () banked
  6806  000944  13A2               	iorwf	sprintf@flag& (0+255),f,b
  6807  000946                     i2l245:
  6808                           
  6809                           ; BSR set to: 0
  6810                           ;doprnt.c: 834: }
  6811                           ;doprnt.c: 835: exp = 0;
  6812                           
  6813                           ; BSR set to: 0
  6814  000946  0E00               	movlw	0
  6815  000948  6FAB               	movwf	(sprintf@exp+1)& (0+255),b
  6816  00094A  0E00               	movlw	0
  6817  00094C  6FAA               	movwf	sprintf@exp& (0+255),b
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;doprnt.c: 836: if( fval!=0) {
  6821  00094E  51B0               	movf	sprintf@fval& (0+255),w,b
  6822  000950  11B1               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6823  000952  11B2               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6824  000954  11B3               	iorwf	(sprintf@fval+3)& (0+255),w,b
  6825  000956  B4D8               	btfsc	status,2,c
  6826  000958  D082               	goto	i2l250
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6830  00095A  35B2               	rlcf	(sprintf@fval+2)& (0+255),w,b
  6831  00095C  35B3               	rlcf	(sprintf@fval+3)& (0+255),w,b
  6832  00095E  0F82               	addlw	130
  6833  000960  6FAA               	movwf	sprintf@exp& (0+255),b
  6834  000962  6BAB               	clrf	(sprintf@exp+1)& (0+255),b
  6835  000964  0EFF               	movlw	255
  6836  000966  23AB               	addwfc	(sprintf@exp+1)& (0+255),f,b
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;doprnt.c: 838: exp--;
  6840  000968  07AA               	decf	sprintf@exp& (0+255),f,b
  6841  00096A  A0D8               	btfss	status,0,c
  6842  00096C  07AB               	decf	(sprintf@exp+1)& (0+255),f,b
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;doprnt.c: 839: exp *= 3;
  6846  00096E  C0AA  F001         	movff	sprintf@exp,___wmul@multiplier
  6847  000972  C0AB  F002         	movff	sprintf@exp+1,___wmul@multiplier+1
  6848  000976  0E00               	movlw	0
  6849  000978  6E04               	movwf	___wmul@multiplicand+1,c
  6850  00097A  0E03               	movlw	3
  6851  00097C  6E03               	movwf	___wmul@multiplicand,c
  6852  00097E  EC9C  F01D         	call	___wmul	;wreg free
  6853  000982  C001  F0AA         	movff	?___wmul,sprintf@exp
  6854  000986  C002  F0AB         	movff	?___wmul+1,sprintf@exp+1
  6855                           
  6856                           ;doprnt.c: 840: exp /= 10;
  6857  00098A  C0AA  F007         	movff	sprintf@exp,___awdiv@dividend
  6858  00098E  C0AB  F008         	movff	sprintf@exp+1,___awdiv@dividend+1
  6859  000992  0E00               	movlw	0
  6860  000994  6E0A               	movwf	___awdiv@divisor+1,c
  6861  000996  0E0A               	movlw	10
  6862  000998  6E09               	movwf	___awdiv@divisor,c
  6863  00099A  EC6C  F01B         	call	___awdiv	;wreg free
  6864  00099E  C007  F0AA         	movff	?___awdiv,sprintf@exp
  6865  0009A2  C008  F0AB         	movff	?___awdiv+1,sprintf@exp+1
  6866                           
  6867                           ;doprnt.c: 841: if(exp < 0)
  6868  0009A6  0100               	movlb	0	; () banked
  6869  0009A8  AFAB               	btfss	(sprintf@exp+1)& (0+255),7,b
  6870  0009AA  D003               	goto	i2l247
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;doprnt.c: 842: exp--;
  6874  0009AC  07AA               	decf	sprintf@exp& (0+255),f,b
  6875  0009AE  A0D8               	btfss	status,0,c
  6876  0009B0  07AB               	decf	(sprintf@exp+1)& (0+255),f,b
  6877  0009B2                     i2l247:
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6881                           
  6882                           ; BSR set to: 0
  6883  0009B2  51AA               	movf	sprintf@exp& (0+255),w,b
  6884  0009B4  0800               	sublw	0
  6885  0009B6  ECB4  F009         	call	_scale
  6886  0009BA  C028  F0AC         	movff	?_scale,sprintf@tmpval
  6887  0009BE  C029  F0AD         	movff	?_scale+1,sprintf@tmpval+1
  6888  0009C2  C02A  F0AE         	movff	?_scale+2,sprintf@tmpval+2
  6889  0009C6  C02B  F0AF         	movff	?_scale+3,sprintf@tmpval+3
  6890                           
  6891                           ;doprnt.c: 847: tmpval.integ *= fval;
  6892  0009CA  C0AC  F00F         	movff	sprintf@tmpval,i2___flmul@b
  6893  0009CE  C0AD  F010         	movff	sprintf@tmpval+1,i2___flmul@b+1
  6894  0009D2  C0AE  F011         	movff	sprintf@tmpval+2,i2___flmul@b+2
  6895  0009D6  C0AF  F012         	movff	sprintf@tmpval+3,i2___flmul@b+3
  6896  0009DA  C0B0  F013         	movff	sprintf@fval,i2___flmul@a
  6897  0009DE  C0B1  F014         	movff	sprintf@fval+1,i2___flmul@a+1
  6898  0009E2  C0B2  F015         	movff	sprintf@fval+2,i2___flmul@a+2
  6899  0009E6  C0B3  F016         	movff	sprintf@fval+3,i2___flmul@a+3
  6900  0009EA  EC79  F00D         	call	i2___flmul	;wreg free
  6901  0009EE  C00F  F0AC         	movff	?i2___flmul,sprintf@tmpval
  6902  0009F2  C010  F0AD         	movff	?i2___flmul+1,sprintf@tmpval+1
  6903  0009F6  C011  F0AE         	movff	?i2___flmul+2,sprintf@tmpval+2
  6904  0009FA  C012  F0AF         	movff	?i2___flmul+3,sprintf@tmpval+3
  6905                           
  6906                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6907  0009FE  C0AC  F001         	movff	sprintf@tmpval,i2___flge@ff1
  6908  000A02  C0AD  F002         	movff	sprintf@tmpval+1,i2___flge@ff1+1
  6909  000A06  C0AE  F003         	movff	sprintf@tmpval+2,i2___flge@ff1+2
  6910  000A0A  C0AF  F004         	movff	sprintf@tmpval+3,i2___flge@ff1+3
  6911  000A0E  0E00               	movlw	0
  6912  000A10  6E05               	movwf	i2___flge@ff2,c
  6913  000A12  0E00               	movlw	0
  6914  000A14  6E06               	movwf	i2___flge@ff2+1,c
  6915  000A16  0E80               	movlw	128
  6916  000A18  6E07               	movwf	i2___flge@ff2+2,c
  6917  000A1A  0E3F               	movlw	63
  6918  000A1C  6E08               	movwf	i2___flge@ff2+3,c
  6919  000A1E  EC75  F019         	call	i2___flge	;wreg free
  6920  000A22  B0D8               	btfsc	status,0,c
  6921  000A24  D005               	goto	i2l248
  6922                           
  6923                           ;doprnt.c: 849: exp--;
  6924  000A26  0100               	movlb	0	; () banked
  6925  000A28  07AA               	decf	sprintf@exp& (0+255),f,b
  6926  000A2A  A0D8               	btfss	status,0,c
  6927  000A2C  07AB               	decf	(sprintf@exp+1)& (0+255),f,b
  6928  000A2E  D017               	goto	i2l250
  6929  000A30                     i2l248:
  6930                           
  6931                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6932                           
  6933                           ; BSR set to: 0
  6934  000A30  C0AC  F001         	movff	sprintf@tmpval,i2___flge@ff1
  6935  000A34  C0AD  F002         	movff	sprintf@tmpval+1,i2___flge@ff1+1
  6936  000A38  C0AE  F003         	movff	sprintf@tmpval+2,i2___flge@ff1+2
  6937  000A3C  C0AF  F004         	movff	sprintf@tmpval+3,i2___flge@ff1+3
  6938  000A40  0E00               	movlw	0
  6939  000A42  6E05               	movwf	i2___flge@ff2,c
  6940  000A44  0E00               	movlw	0
  6941  000A46  6E06               	movwf	i2___flge@ff2+1,c
  6942  000A48  0E20               	movlw	32
  6943  000A4A  6E07               	movwf	i2___flge@ff2+2,c
  6944  000A4C  0E41               	movlw	65
  6945  000A4E  6E08               	movwf	i2___flge@ff2+3,c
  6946  000A50  EC75  F019         	call	i2___flge	;wreg free
  6947  000A54  A0D8               	btfss	status,0,c
  6948  000A56  D003               	goto	i2l250
  6949                           
  6950                           ;doprnt.c: 851: exp++;
  6951  000A58  0100               	movlb	0	; () banked
  6952  000A5A  4BAA               	infsnz	sprintf@exp& (0+255),f,b
  6953  000A5C  2BAB               	incf	(sprintf@exp+1)& (0+255),f,b
  6954  000A5E                     i2l250:
  6955                           
  6956                           ;doprnt.c: 852: }
  6957                           ;doprnt.c: 1112: if(prec <= 12)
  6958                           
  6959                           ; BSR set to: 0
  6960                           
  6961                           ; BSR set to: 0
  6962                           
  6963                           ; BSR set to: 0
  6964  000A5E  0100               	movlb	0	; () banked
  6965  000A60  BFA5               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6966  000A62  D006               	goto	i2u840_40
  6967  000A64  51A5               	movf	(sprintf@prec+1)& (0+255),w,b
  6968  000A66  E121               	bnz	i2l6048
  6969  000A68  0E0D               	movlw	13
  6970  000A6A  5DA4               	subwf	sprintf@prec& (0+255),w,b
  6971  000A6C  B0D8               	btfsc	status,0,c
  6972  000A6E  D01D               	goto	i2l251
  6973  000A70                     i2u840_40:
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;doprnt.c: 1113: fval += fround(prec);
  6977  000A70  C0B0  F035         	movff	sprintf@fval,___fladd@b
  6978  000A74  C0B1  F036         	movff	sprintf@fval+1,___fladd@b+1
  6979  000A78  C0B2  F037         	movff	sprintf@fval+2,___fladd@b+2
  6980  000A7C  C0B3  F038         	movff	sprintf@fval+3,___fladd@b+3
  6981  000A80  51A4               	movf	sprintf@prec& (0+255),w,b
  6982  000A82  EC1A  F012         	call	_fround
  6983  000A86  C028  F039         	movff	?_fround,___fladd@a
  6984  000A8A  C029  F03A         	movff	?_fround+1,___fladd@a+1
  6985  000A8E  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  6986  000A92  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  6987  000A96  EC21  F00F         	call	___fladd	;wreg free
  6988  000A9A  C035  F0B0         	movff	?___fladd,sprintf@fval
  6989  000A9E  C036  F0B1         	movff	?___fladd+1,sprintf@fval+1
  6990  000AA2  C037  F0B2         	movff	?___fladd+2,sprintf@fval+2
  6991  000AA6  C038  F0B3         	movff	?___fladd+3,sprintf@fval+3
  6992  000AAA                     i2l251:
  6993  000AAA                     i2l6048:
  6994                           
  6995                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6996  000AAA  0100               	movlb	0	; () banked
  6997  000AAC  BFAB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6998  000AAE  D006               	goto	i2u841_40
  6999  000AB0  51AB               	movf	(sprintf@exp+1)& (0+255),w,b
  7000  000AB2  E123               	bnz	i2l6056
  7001  000AB4  0E0A               	movlw	10
  7002  000AB6  5DAA               	subwf	sprintf@exp& (0+255),w,b
  7003  000AB8  B0D8               	btfsc	status,0,c
  7004  000ABA  D01F               	goto	i2u844_40
  7005  000ABC                     i2u841_40:
  7006                           
  7007                           ; BSR set to: 0
  7008  000ABC  51B0               	movf	sprintf@fval& (0+255),w,b
  7009  000ABE  11B1               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7010  000AC0  11B2               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7011  000AC2  11B3               	iorwf	(sprintf@fval+3)& (0+255),w,b
  7012  000AC4  B4D8               	btfsc	status,2,c
  7013  000AC6  D064               	goto	i2l252
  7014                           
  7015                           ; BSR set to: 0
  7016  000AC8  C0B0  F031         	movff	sprintf@fval,___fltol@f1
  7017  000ACC  C0B1  F032         	movff	sprintf@fval+1,___fltol@f1+1
  7018  000AD0  C0B2  F033         	movff	sprintf@fval+2,___fltol@f1+2
  7019  000AD4  C0B3  F034         	movff	sprintf@fval+3,___fltol@f1+3
  7020  000AD8  EC92  F01A         	call	___fltol	;wreg free
  7021  000ADC  5031               	movf	?___fltol,w,c
  7022  000ADE  1032               	iorwf	?___fltol+1,w,c
  7023  000AE0  1033               	iorwf	?___fltol+2,w,c
  7024  000AE2  1034               	iorwf	?___fltol+3,w,c
  7025  000AE4  A4D8               	btfss	status,2,c
  7026  000AE6  D054               	goto	i2l252
  7027  000AE8  0100               	movlb	0	; () banked
  7028  000AEA  BFAB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7029  000AEC  D051               	goto	i2l252
  7030  000AEE  51AB               	movf	(sprintf@exp+1)& (0+255),w,b
  7031  000AF0  E104               	bnz	i2l6056
  7032  000AF2  0E02               	movlw	2
  7033  000AF4  5DAA               	subwf	sprintf@exp& (0+255),w,b
  7034  000AF6  A0D8               	btfss	status,0,c
  7035  000AF8  D04B               	goto	i2l252
  7036  000AFA                     i2u844_40:
  7037  000AFA                     i2l6056:
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7041  000AFA  C0AC  F001         	movff	sprintf@tmpval,i2___flge@ff1
  7042  000AFE  C0AD  F002         	movff	sprintf@tmpval+1,i2___flge@ff1+1
  7043  000B02  C0AE  F003         	movff	sprintf@tmpval+2,i2___flge@ff1+2
  7044  000B06  C0AF  F004         	movff	sprintf@tmpval+3,i2___flge@ff1+3
  7045  000B0A  0E5F               	movlw	95
  7046  000B0C  6E05               	movwf	i2___flge@ff2,c
  7047  000B0E  0E70               	movlw	112
  7048  000B10  6E06               	movwf	i2___flge@ff2+1,c
  7049  000B12  0E89               	movlw	137
  7050  000B14  6E07               	movwf	i2___flge@ff2+2,c
  7051  000B16  0E40               	movlw	64
  7052  000B18  6E08               	movwf	i2___flge@ff2+3,c
  7053  000B1A  EC75  F019         	call	i2___flge	;wreg free
  7054  000B1E  B0D8               	btfsc	status,0,c
  7055  000B20  D003               	goto	i2l255
  7056                           
  7057                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7058  000B22  0100               	movlb	0	; () banked
  7059  000B24  0EF7               	movlw	247
  7060  000B26  D002               	goto	L4
  7061  000B28                     i2l255:
  7062                           
  7063                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7064                           
  7065                           ; BSR set to: 0
  7066  000B28  0100               	movlb	0	; () banked
  7067  000B2A  0EF8               	movlw	248
  7068  000B2C                     L4:
  7069  000B2C  27AA               	addwf	sprintf@exp& (0+255),f,b
  7070  000B2E  0EFF               	movlw	255
  7071  000B30  23AB               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7075                           
  7076                           ; BSR set to: 0
  7077  000B32  51AA               	movf	sprintf@exp& (0+255),w,b
  7078  000B34  ECB4  F009         	call	_scale
  7079  000B38  C028  F0AC         	movff	?_scale,sprintf@tmpval
  7080  000B3C  C029  F0AD         	movff	?_scale+1,sprintf@tmpval+1
  7081  000B40  C02A  F0AE         	movff	?_scale+2,sprintf@tmpval+2
  7082  000B44  C02B  F0AF         	movff	?_scale+3,sprintf@tmpval+3
  7083  000B48  C0B0  F001         	movff	sprintf@fval,__div_to_l_@f1
  7084  000B4C  C0B1  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  7085  000B50  C0B2  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  7086  000B54  C0B3  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  7087  000B58  C0AC  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  7088  000B5C  C0AD  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  7089  000B60  C0AE  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  7090  000B64  C0AF  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  7091  000B68  EC50  F018         	call	__div_to_l_	;wreg free
  7092  000B6C  C001  F0A6         	movff	?__div_to_l_,sprintf@val
  7093  000B70  C002  F0A7         	movff	?__div_to_l_+1,sprintf@val+1
  7094  000B74  C003  F0A8         	movff	?__div_to_l_+2,sprintf@val+2
  7095  000B78  C004  F0A9         	movff	?__div_to_l_+3,sprintf@val+3
  7096                           
  7097                           ;doprnt.c: 1129: fval = 0.0;
  7098  000B7C  0E00               	movlw	0
  7099  000B7E  0100               	movlb	0	; () banked
  7100  000B80  6FB0               	movwf	sprintf@fval& (0+255),b
  7101  000B82  0E00               	movlw	0
  7102  000B84  6FB1               	movwf	(sprintf@fval+1)& (0+255),b
  7103  000B86  0E00               	movlw	0
  7104  000B88  6FB2               	movwf	(sprintf@fval+2)& (0+255),b
  7105  000B8A  0E00               	movlw	0
  7106  000B8C  6FB3               	movwf	(sprintf@fval+3)& (0+255),b
  7107                           
  7108                           ;doprnt.c: 1130: } else {
  7109  000B8E  D03C               	goto	i2l261
  7110  000B90                     i2l252:
  7111                           
  7112                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7113                           
  7114                           ; BSR set to: 0
  7115  000B90  C0B0  F031         	movff	sprintf@fval,___fltol@f1
  7116  000B94  C0B1  F032         	movff	sprintf@fval+1,___fltol@f1+1
  7117  000B98  C0B2  F033         	movff	sprintf@fval+2,___fltol@f1+2
  7118  000B9C  C0B3  F034         	movff	sprintf@fval+3,___fltol@f1+3
  7119  000BA0  EC92  F01A         	call	___fltol	;wreg free
  7120  000BA4  C031  F0A6         	movff	?___fltol,sprintf@val
  7121  000BA8  C032  F0A7         	movff	?___fltol+1,sprintf@val+1
  7122  000BAC  C033  F0A8         	movff	?___fltol+2,sprintf@val+2
  7123  000BB0  C034  F0A9         	movff	?___fltol+3,sprintf@val+3
  7124                           
  7125                           ;doprnt.c: 1132: fval -= (double)val;
  7126  000BB4  C0B0  F049         	movff	sprintf@fval,___flsub@b
  7127  000BB8  C0B1  F04A         	movff	sprintf@fval+1,___flsub@b+1
  7128  000BBC  C0B2  F04B         	movff	sprintf@fval+2,___flsub@b+2
  7129  000BC0  C0B3  F04C         	movff	sprintf@fval+3,___flsub@b+3
  7130  000BC4  C0A6  F001         	movff	sprintf@val,i2___xxtofl@val
  7131  000BC8  C0A7  F002         	movff	sprintf@val+1,i2___xxtofl@val+1
  7132  000BCC  C0A8  F003         	movff	sprintf@val+2,i2___xxtofl@val+2
  7133  000BD0  C0A9  F004         	movff	sprintf@val+3,i2___xxtofl@val+3
  7134  000BD4  0E00               	movlw	0
  7135  000BD6  EC0F  F017         	call	i2___xxtofl
  7136  000BDA  C001  F04D         	movff	?i2___xxtofl,___flsub@a
  7137  000BDE  C002  F04E         	movff	?i2___xxtofl+1,___flsub@a+1
  7138  000BE2  C003  F04F         	movff	?i2___xxtofl+2,___flsub@a+2
  7139  000BE6  C004  F050         	movff	?i2___xxtofl+3,___flsub@a+3
  7140  000BEA  EC86  F01C         	call	___flsub	;wreg free
  7141  000BEE  C049  F0B0         	movff	?___flsub,sprintf@fval
  7142  000BF2  C04A  F0B1         	movff	?___flsub+1,sprintf@fval+1
  7143  000BF6  C04B  F0B2         	movff	?___flsub+2,sprintf@fval+2
  7144  000BFA  C04C  F0B3         	movff	?___flsub+3,sprintf@fval+3
  7145                           
  7146                           ;doprnt.c: 1133: exp = 0;
  7147  000BFE  0E00               	movlw	0
  7148  000C00  0100               	movlb	0	; () banked
  7149  000C02  6FAB               	movwf	(sprintf@exp+1)& (0+255),b
  7150  000C04  0E00               	movlw	0
  7151  000C06  6FAA               	movwf	sprintf@exp& (0+255),b
  7152  000C08                     i2l261:
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;doprnt.c: 1134: }
  7156                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7157                           
  7158                           ; BSR set to: 0
  7159  000C08  0E01               	movlw	1
  7160  000C0A  6FB4               	movwf	sprintf@c& (0+255),b
  7161  000C0C                     i2l6076:
  7162                           
  7163                           ; BSR set to: 0
  7164  000C0C  0E0A               	movlw	10
  7165  000C0E  19B4               	xorwf	sprintf@c& (0+255),w,b
  7166  000C10  B4D8               	btfsc	status,2,c
  7167  000C12  D018               	goto	i2u848_40
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;doprnt.c: 1137: if(val < dpowers[c])
  7171                           
  7172                           ; BSR set to: 0
  7173                           
  7174                           ; BSR set to: 0
  7175  000C14  51B4               	movf	sprintf@c& (0+255),w,b
  7176  000C16  0D04               	mullw	4
  7177  000C18  0E69               	movlw	low _dpowers
  7178  000C1A  24F3               	addwf	prodl,w,c
  7179  000C1C  6EF6               	movwf	tblptrl,c
  7180  000C1E  0E08               	movlw	high _dpowers
  7181  000C20  20F4               	addwfc	prodh,w,c
  7182  000C22  6EF7               	movwf	tblptrh,c
  7183  000C24                     	if	0	;There are less than 3 active tblptr bytes
  7184  000C24                     	endif
  7185  000C24  0009               	tblrd		*+
  7186  000C26  50F5               	movf	tablat,w,c
  7187  000C28  5DA6               	subwf	sprintf@val& (0+255),w,b
  7188  000C2A  0009               	tblrd		*+
  7189  000C2C  50F5               	movf	tablat,w,c
  7190  000C2E  59A7               	subwfb	(sprintf@val+1)& (0+255),w,b
  7191  000C30  0009               	tblrd		*+
  7192  000C32  50F5               	movf	tablat,w,c
  7193  000C34  59A8               	subwfb	(sprintf@val+2)& (0+255),w,b
  7194  000C36  0009               	tblrd		*+
  7195  000C38  50F5               	movf	tablat,w,c
  7196  000C3A  59A9               	subwfb	(sprintf@val+3)& (0+255),w,b
  7197  000C3C  A0D8               	btfss	status,0,c
  7198  000C3E  D002               	goto	i2u848_40
  7199                           
  7200                           ; BSR set to: 0
  7201                           
  7202                           ; BSR set to: 0
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;doprnt.c: 1138: break;
  7206  000C40  2BB4               	incf	sprintf@c& (0+255),f,b
  7207  000C42  D7E4               	goto	i2l6076
  7208  000C44                     i2u848_40:
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;doprnt.c: 1175: {
  7212                           ;doprnt.c: 1188: if(flag & 0x03)
  7213                           
  7214                           ; BSR set to: 0
  7215  000C44  0E03               	movlw	3
  7216  000C46  15A2               	andwf	sprintf@flag& (0+255),w,b
  7217  000C48  6E59               	movwf	??_sprintf& (0+255),c
  7218  000C4A  0E00               	movlw	0
  7219  000C4C  15A3               	andwf	(sprintf@flag+1)& (0+255),w,b
  7220  000C4E  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  7221  000C50  5059               	movf	??_sprintf,w,c
  7222  000C52  105A               	iorwf	??_sprintf+1,w,c
  7223  000C54  B4D8               	btfsc	status,2,c
  7224  000C56  D050               	goto	i2l266
  7225                           
  7226                           ; BSR set to: 0
  7227                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7228  000C58  C051  FFD9         	movff	sprintf@sp,fsr2l
  7229  000C5C  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  7230  000C60  0E2D               	movlw	45
  7231  000C62  D047               	goto	L5
  7232  000C64                     
  7233                           ; BSR set to: 0
  7234                           ;doprnt.c: 1200: {
  7235                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7236                           
  7237                           ; BSR set to: 0
  7238  000C64  C0A6  F001         	movff	sprintf@val,___lldiv@dividend
  7239  000C68  C0A7  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  7240  000C6C  C0A8  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  7241  000C70  C0A9  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  7242  000C74  51B4               	movf	sprintf@c& (0+255),w,b
  7243  000C76  0D04               	mullw	4
  7244  000C78  0E69               	movlw	low _dpowers
  7245  000C7A  24F3               	addwf	prodl,w,c
  7246  000C7C  6EF6               	movwf	tblptrl,c
  7247  000C7E  0E08               	movlw	high _dpowers
  7248  000C80  20F4               	addwfc	prodh,w,c
  7249  000C82  6EF7               	movwf	tblptrh,c
  7250  000C84                     	if	0	;There are less than 3 active tblptr bytes
  7251  000C84                     	endif
  7252  000C84  0009               	tblrd		*+
  7253  000C86  CFF5 F005          	movff	tablat,___lldiv@divisor
  7254  000C8A  0009               	tblrd		*+
  7255  000C8C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  7256  000C90  0009               	tblrd		*+
  7257  000C92  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  7258  000C96  000A               	tblrd		*-
  7259  000C98  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  7260  000C9C  ECAE  F01B         	call	___lldiv	;wreg free
  7261  000CA0  C001  F0AC         	movff	?___lldiv,sprintf@tmpval
  7262  000CA4  C002  F0AD         	movff	?___lldiv+1,sprintf@tmpval+1
  7263  000CA8  C003  F0AE         	movff	?___lldiv+2,sprintf@tmpval+2
  7264  000CAC  C004  F0AF         	movff	?___lldiv+3,sprintf@tmpval+3
  7265                           
  7266                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7267  000CB0  C0AC  F001         	movff	sprintf@tmpval,___llmod@dividend
  7268  000CB4  C0AD  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7269  000CB8  C0AE  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7270  000CBC  C0AF  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7271  000CC0  0E0A               	movlw	10
  7272  000CC2  6E05               	movwf	___llmod@divisor,c
  7273  000CC4  0E00               	movlw	0
  7274  000CC6  6E06               	movwf	___llmod@divisor+1,c
  7275  000CC8  0E00               	movlw	0
  7276  000CCA  6E07               	movwf	___llmod@divisor+2,c
  7277  000CCC  0E00               	movlw	0
  7278  000CCE  6E08               	movwf	___llmod@divisor+3,c
  7279  000CD0  EC27  F01C         	call	___llmod	;wreg free
  7280  000CD4  C001  F0AC         	movff	?___llmod,sprintf@tmpval
  7281  000CD8  C002  F0AD         	movff	?___llmod+1,sprintf@tmpval+1
  7282  000CDC  C003  F0AE         	movff	?___llmod+2,sprintf@tmpval+2
  7283  000CE0  C004  F0AF         	movff	?___llmod+3,sprintf@tmpval+3
  7284                           
  7285                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7286  000CE4  0100               	movlb	0	; () banked
  7287  000CE6  51AC               	movf	sprintf@tmpval& (0+255),w,b
  7288  000CE8  0F30               	addlw	48
  7289  000CEA  C051  FFD9         	movff	sprintf@sp,fsr2l
  7290  000CEE  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  7291  000CF2                     L5:
  7292  000CF2  6EDF               	movwf	indf2,c
  7293                           
  7294                           ; BSR set to: 0
  7295  000CF4  4A51               	infsnz	sprintf@sp,f,c
  7296  000CF6  2A52               	incf	sprintf@sp+1,f,c
  7297  000CF8                     i2l266:
  7298                           
  7299                           ; BSR set to: 0
  7300                           
  7301                           ; BSR set to: 0
  7302  000CF8  07B4               	decf	sprintf@c& (0+255),f,b
  7303  000CFA  29B4               	incf	sprintf@c& (0+255),w,b
  7304  000CFC  B4D8               	btfsc	status,2,c
  7305  000CFE  D00C               	goto	i2l269
  7306  000D00  D7B1               	goto	i2l267
  7307  000D02                     i2l6104:
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7311  000D02  C051  FFD9         	movff	sprintf@sp,fsr2l
  7312  000D06  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  7313  000D0A  0E30               	movlw	48
  7314  000D0C  6EDF               	movwf	indf2,c
  7315                           
  7316                           ; BSR set to: 0
  7317  000D0E  4A51               	infsnz	sprintf@sp,f,c
  7318  000D10  2A52               	incf	sprintf@sp+1,f,c
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;doprnt.c: 1209: exp--;
  7322  000D12  07AA               	decf	sprintf@exp& (0+255),f,b
  7323  000D14  A0D8               	btfss	status,0,c
  7324  000D16  07AB               	decf	(sprintf@exp+1)& (0+255),f,b
  7325  000D18                     i2l269:
  7326                           
  7327                           ; BSR set to: 0
  7328                           
  7329                           ; BSR set to: 0
  7330  000D18  BFAB               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7331  000D1A  D005               	goto	i2u851_40
  7332  000D1C  51AB               	movf	(sprintf@exp+1)& (0+255),w,b
  7333  000D1E  E1F1               	bnz	i2l6104
  7334  000D20  05AA               	decf	sprintf@exp& (0+255),w,b
  7335  000D22  B0D8               	btfsc	status,0,c
  7336  000D24  D7EE               	goto	i2l270
  7337  000D26                     i2u851_40:
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;doprnt.c: 1210: }
  7341                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7342                           
  7343                           ; BSR set to: 0
  7344  000D26  BFA5               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7345  000D28  D009               	goto	i2l272
  7346  000D2A  51A5               	movf	(sprintf@prec+1)& (0+255),w,b
  7347  000D2C  E104               	bnz	i2u852_40
  7348  000D2E  0E09               	movlw	9
  7349  000D30  5DA4               	subwf	sprintf@prec& (0+255),w,b
  7350  000D32  A0D8               	btfss	status,0,c
  7351  000D34  D003               	goto	i2l272
  7352  000D36                     i2u852_40:
  7353                           
  7354                           ; BSR set to: 0
  7355                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7356  000D36  0E08               	movlw	8
  7357  000D38  6FB4               	movwf	sprintf@c& (0+255),b
  7358  000D3A  D002               	goto	i2l273
  7359  000D3C                     i2l272:
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;doprnt.c: 1213: else
  7363                           ;doprnt.c: 1214: c = prec;
  7364  000D3C  C0A4  F0B4         	movff	sprintf@prec,sprintf@c
  7365  000D40                     i2l273:
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;doprnt.c: 1215: prec -= c;
  7369                           
  7370                           ; BSR set to: 0
  7371  000D40  51B4               	movf	sprintf@c& (0+255),w,b
  7372  000D42  5FA4               	subwf	sprintf@prec& (0+255),f,b
  7373  000D44  0E00               	movlw	0
  7374  000D46  BFB4               	btfsc	sprintf@c& (0+255),7,b
  7375  000D48  0EFF               	movlw	255
  7376  000D4A  5BA5               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;doprnt.c: 1219: if(c)
  7380  000D4C  51B4               	movf	sprintf@c& (0+255),w,b
  7381  000D4E  B4D8               	btfsc	status,2,c
  7382  000D50  D008               	goto	i2l274
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7386  000D52  C051  FFD9         	movff	sprintf@sp,fsr2l
  7387  000D56  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  7388  000D5A  0E2E               	movlw	46
  7389  000D5C  6EDF               	movwf	indf2,c
  7390                           
  7391                           ; BSR set to: 0
  7392  000D5E  4A51               	infsnz	sprintf@sp,f,c
  7393  000D60  2A52               	incf	sprintf@sp+1,f,c
  7394  000D62                     i2l274:
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7398                           
  7399                           ; BSR set to: 0
  7400  000D62  51B4               	movf	sprintf@c& (0+255),w,b
  7401  000D64  ECB4  F009         	call	_scale
  7402  000D68  C028  F09C         	movff	?_scale,_sprintf$1290
  7403  000D6C  C029  F09D         	movff	?_scale+1,_sprintf$1290+1
  7404  000D70  C02A  F09E         	movff	?_scale+2,_sprintf$1290+2
  7405  000D74  C02B  F09F         	movff	?_scale+3,_sprintf$1290+3
  7406                           
  7407                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7408  000D78  C0B0  F013         	movff	sprintf@fval,i2___flmul@a
  7409  000D7C  C0B1  F014         	movff	sprintf@fval+1,i2___flmul@a+1
  7410  000D80  C0B2  F015         	movff	sprintf@fval+2,i2___flmul@a+2
  7411  000D84  C0B3  F016         	movff	sprintf@fval+3,i2___flmul@a+3
  7412  000D88  C09C  F00F         	movff	_sprintf$1290,i2___flmul@b
  7413  000D8C  C09D  F010         	movff	_sprintf$1290+1,i2___flmul@b+1
  7414  000D90  C09E  F011         	movff	_sprintf$1290+2,i2___flmul@b+2
  7415  000D94  C09F  F012         	movff	_sprintf$1290+3,i2___flmul@b+3
  7416  000D98  EC79  F00D         	call	i2___flmul	;wreg free
  7417  000D9C  C00F  F031         	movff	?i2___flmul,___fltol@f1
  7418  000DA0  C010  F032         	movff	?i2___flmul+1,___fltol@f1+1
  7419  000DA4  C011  F033         	movff	?i2___flmul+2,___fltol@f1+2
  7420  000DA8  C012  F034         	movff	?i2___flmul+3,___fltol@f1+3
  7421  000DAC  EC92  F01A         	call	___fltol	;wreg free
  7422  000DB0  C031  F0A6         	movff	?___fltol,sprintf@val
  7423  000DB4  C032  F0A7         	movff	?___fltol+1,sprintf@val+1
  7424  000DB8  C033  F0A8         	movff	?___fltol+2,sprintf@val+2
  7425  000DBC  C034  F0A9         	movff	?___fltol+3,sprintf@val+3
  7426                           
  7427                           ;doprnt.c: 1228: while(c--) {
  7428  000DC0  D071               	goto	i2l275
  7429  000DC2                     
  7430                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7431  000DC2  C0A6  F001         	movff	sprintf@val,___lldiv@dividend
  7432  000DC6  C0A7  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  7433  000DCA  C0A8  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  7434  000DCE  C0A9  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  7435  000DD2  0100               	movlb	0	; () banked
  7436  000DD4  51B4               	movf	sprintf@c& (0+255),w,b
  7437  000DD6  0D04               	mullw	4
  7438  000DD8  0E69               	movlw	low _dpowers
  7439  000DDA  24F3               	addwf	prodl,w,c
  7440  000DDC  6EF6               	movwf	tblptrl,c
  7441  000DDE  0E08               	movlw	high _dpowers
  7442  000DE0  20F4               	addwfc	prodh,w,c
  7443  000DE2  6EF7               	movwf	tblptrh,c
  7444  000DE4                     	if	0	;There are less than 3 active tblptr bytes
  7445  000DE4                     	endif
  7446  000DE4  0009               	tblrd		*+
  7447  000DE6  CFF5 F005          	movff	tablat,___lldiv@divisor
  7448  000DEA  0009               	tblrd		*+
  7449  000DEC  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  7450  000DF0  0009               	tblrd		*+
  7451  000DF2  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  7452  000DF6  000A               	tblrd		*-
  7453  000DF8  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  7454  000DFC  ECAE  F01B         	call	___lldiv	;wreg free
  7455  000E00  C001  F0AC         	movff	?___lldiv,sprintf@tmpval
  7456  000E04  C002  F0AD         	movff	?___lldiv+1,sprintf@tmpval+1
  7457  000E08  C003  F0AE         	movff	?___lldiv+2,sprintf@tmpval+2
  7458  000E0C  C004  F0AF         	movff	?___lldiv+3,sprintf@tmpval+3
  7459                           
  7460                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7461  000E10  C0AC  F001         	movff	sprintf@tmpval,___llmod@dividend
  7462  000E14  C0AD  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  7463  000E18  C0AE  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  7464  000E1C  C0AF  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  7465  000E20  0E0A               	movlw	10
  7466  000E22  6E05               	movwf	___llmod@divisor,c
  7467  000E24  0E00               	movlw	0
  7468  000E26  6E06               	movwf	___llmod@divisor+1,c
  7469  000E28  0E00               	movlw	0
  7470  000E2A  6E07               	movwf	___llmod@divisor+2,c
  7471  000E2C  0E00               	movlw	0
  7472  000E2E  6E08               	movwf	___llmod@divisor+3,c
  7473  000E30  EC27  F01C         	call	___llmod	;wreg free
  7474  000E34  C001  F0AC         	movff	?___llmod,sprintf@tmpval
  7475  000E38  C002  F0AD         	movff	?___llmod+1,sprintf@tmpval+1
  7476  000E3C  C003  F0AE         	movff	?___llmod+2,sprintf@tmpval+2
  7477  000E40  C004  F0AF         	movff	?___llmod+3,sprintf@tmpval+3
  7478                           
  7479                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7480  000E44  0100               	movlb	0	; () banked
  7481  000E46  51AC               	movf	sprintf@tmpval& (0+255),w,b
  7482  000E48  0F30               	addlw	48
  7483  000E4A  C051  FFD9         	movff	sprintf@sp,fsr2l
  7484  000E4E  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  7485  000E52  6EDF               	movwf	indf2,c
  7486                           
  7487                           ; BSR set to: 0
  7488  000E54  4A51               	infsnz	sprintf@sp,f,c
  7489  000E56  2A52               	incf	sprintf@sp+1,f,c
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;doprnt.c: 1232: val %= dpowers[c];
  7493  000E58  C0A6  F001         	movff	sprintf@val,___llmod@dividend
  7494  000E5C  C0A7  F002         	movff	sprintf@val+1,___llmod@dividend+1
  7495  000E60  C0A8  F003         	movff	sprintf@val+2,___llmod@dividend+2
  7496  000E64  C0A9  F004         	movff	sprintf@val+3,___llmod@dividend+3
  7497  000E68  51B4               	movf	sprintf@c& (0+255),w,b
  7498  000E6A  0D04               	mullw	4
  7499  000E6C  0E69               	movlw	low _dpowers
  7500  000E6E  24F3               	addwf	prodl,w,c
  7501  000E70  6EF6               	movwf	tblptrl,c
  7502  000E72  0E08               	movlw	high _dpowers
  7503  000E74  20F4               	addwfc	prodh,w,c
  7504  000E76  6EF7               	movwf	tblptrh,c
  7505  000E78                     	if	0	;There are less than 3 active tblptr bytes
  7506  000E78                     	endif
  7507  000E78  0009               	tblrd		*+
  7508  000E7A  CFF5 F005          	movff	tablat,___llmod@divisor
  7509  000E7E  0009               	tblrd		*+
  7510  000E80  CFF5 F006          	movff	tablat,___llmod@divisor+1
  7511  000E84  0009               	tblrd		*+
  7512  000E86  CFF5 F007          	movff	tablat,___llmod@divisor+2
  7513  000E8A  000A               	tblrd		*-
  7514  000E8C  CFF5 F008          	movff	tablat,___llmod@divisor+3
  7515  000E90  EC27  F01C         	call	___llmod	;wreg free
  7516  000E94  C001  F0A6         	movff	?___llmod,sprintf@val
  7517  000E98  C002  F0A7         	movff	?___llmod+1,sprintf@val+1
  7518  000E9C  C003  F0A8         	movff	?___llmod+2,sprintf@val+2
  7519  000EA0  C004  F0A9         	movff	?___llmod+3,sprintf@val+3
  7520  000EA4                     i2l275:
  7521  000EA4  0100               	movlb	0	; () banked
  7522  000EA6  07B4               	decf	sprintf@c& (0+255),f,b
  7523  000EA8  29B4               	incf	sprintf@c& (0+255),w,b
  7524  000EAA  B4D8               	btfsc	status,2,c
  7525  000EAC  D00C               	goto	i2l278
  7526  000EAE  D789               	goto	i2l276
  7527  000EB0                     
  7528                           ; BSR set to: 0
  7529                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7530                           
  7531                           ; BSR set to: 0
  7532  000EB0  C051  FFD9         	movff	sprintf@sp,fsr2l
  7533  000EB4  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  7534  000EB8  0E30               	movlw	48
  7535  000EBA  6EDF               	movwf	indf2,c
  7536                           
  7537                           ; BSR set to: 0
  7538  000EBC  4A51               	infsnz	sprintf@sp,f,c
  7539  000EBE  2A52               	incf	sprintf@sp+1,f,c
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;doprnt.c: 1237: prec--;
  7543  000EC0  07A4               	decf	sprintf@prec& (0+255),f,b
  7544  000EC2  A0D8               	btfss	status,0,c
  7545  000EC4  07A5               	decf	(sprintf@prec+1)& (0+255),f,b
  7546  000EC6                     i2l278:
  7547                           
  7548                           ; BSR set to: 0
  7549                           
  7550                           ; BSR set to: 0
  7551  000EC6  51A4               	movf	sprintf@prec& (0+255),w,b
  7552  000EC8  11A5               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7553  000ECA  B4D8               	btfsc	status,2,c
  7554  000ECC  D013               	goto	i2l281
  7555  000ECE  D7F0               	goto	i2l279
  7556  000ED0                     i2l244:
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;doprnt.c: 1246: }
  7560                           ;doprnt.c: 1422: {
  7561                           ;doprnt.c: 1438: if(flag & 0x03)
  7562                           
  7563                           ; BSR set to: 0
  7564  000ED0  0E03               	movlw	3
  7565  000ED2  15A2               	andwf	sprintf@flag& (0+255),w,b
  7566  000ED4  6E59               	movwf	??_sprintf& (0+255),c
  7567  000ED6  0E00               	movlw	0
  7568  000ED8  15A3               	andwf	(sprintf@flag+1)& (0+255),w,b
  7569  000EDA  6E5A               	movwf	(??_sprintf+1)& (0+255),c
  7570  000EDC  5059               	movf	??_sprintf,w,c
  7571  000EDE  105A               	iorwf	??_sprintf+1,w,c
  7572  000EE0  B4D8               	btfsc	status,2,c
  7573  000EE2  D008               	goto	i2l281
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  7577  000EE4  C051  FFD9         	movff	sprintf@sp,fsr2l
  7578  000EE8  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  7579  000EEC  0E2D               	movlw	45
  7580  000EEE  6EDF               	movwf	indf2,c
  7581  000EF0                     i2l6152:
  7582                           
  7583                           ; BSR set to: 0
  7584  000EF0  4A51               	infsnz	sprintf@sp,f,c
  7585  000EF2  2A52               	incf	sprintf@sp+1,f,c
  7586  000EF4                     i2l281:
  7587                           
  7588                           ; BSR set to: 0
  7589                           
  7590                           ; BSR set to: 0
  7591                           
  7592                           ; BSR set to: 0
  7593  000EF4  C053  FFF6         	movff	sprintf@f,tblptrl
  7594  000EF8  C054  FFF7         	movff	sprintf@f+1,tblptrh
  7595  000EFC  4A53               	infsnz	sprintf@f,f,c
  7596  000EFE  2A54               	incf	sprintf@f+1,f,c
  7597  000F00                     	if	0	;tblptru may be non-zero
  7598  000F00                     	endif
  7599  000F00                     	if	0	;tblptru may be non-zero
  7600  000F00                     	endif
  7601  000F00  0008               	tblrd		*
  7602  000F02  CFF5 F0B4          	movff	tablat,sprintf@c
  7603  000F06  51B4               	movf	sprintf@c& (0+255),w,b
  7604  000F08  A4D8               	btfss	status,2,c
  7605  000F0A  D4CB               	goto	i2l236
  7606  000F0C                     i2u857_40:
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;doprnt.c: 1538: *sp = 0;
  7610                           
  7611                           ; BSR set to: 0
  7612                           
  7613                           ;doprnt.c: 1469: }
  7614                           ;doprnt.c: 1533: }
  7615                           ;doprnt.c: 1535: alldone:
  7616                           
  7617                           ; BSR set to: 0
  7618  000F0C  C051  FFD9         	movff	sprintf@sp,fsr2l
  7619  000F10  C052  FFDA         	movff	sprintf@sp+1,fsr2h
  7620  000F14  0E00               	movlw	0
  7621  000F16  6EDF               	movwf	indf2,c
  7622  000F18  0012               	return	
  7623  000F1A                     __end_of_sprintf:
  7624                           	opt stack 0
  7625                           pclatu	equ	0xFFB
  7626                           pclath	equ	0xFFA
  7627                           tblptru	equ	0xFF8
  7628                           tblptrh	equ	0xFF7
  7629                           tblptrl	equ	0xFF6
  7630                           tablat	equ	0xFF5
  7631                           prodh	equ	0xFF4
  7632                           prodl	equ	0xFF3
  7633                           intcon	equ	0xFF2
  7634                           postinc0	equ	0xFEE
  7635                           fsr0h	equ	0xFEA
  7636                           fsr0l	equ	0xFE9
  7637                           wreg	equ	0xFE8
  7638                           fsr1h	equ	0xFE2
  7639                           fsr1l	equ	0xFE1
  7640                           indf2	equ	0xFDF
  7641                           postinc2	equ	0xFDE
  7642                           postdec2	equ	0xFDD
  7643                           fsr2h	equ	0xFDA
  7644                           fsr2l	equ	0xFD9
  7645                           status	equ	0xFD8
  7646                           
  7647 ;; *************** function i2___xxtofl *****************
  7648 ;; Defined at:
  7649 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  sign            1    wreg     unsigned char 
  7652 ;;  val             4    0[COMRAM] long 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  sign            1    8[COMRAM] unsigned char 
  7655 ;;  __xxtofl        4   10[COMRAM] unsigned long 
  7656 ;;  __xxtofl        1    9[COMRAM] unsigned char 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  4    0[COMRAM] unsigned char 
  7659 ;; Registers used:
  7660 ;;		wreg, status,2, status,0
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7666 ;;      Params:         4       0       0       0       0       0       0       0       0
  7667 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7668 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7669 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7670 ;;Total ram usage:       14 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_sprintf
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text30
  7680  002E1E                     __ptext30:
  7681                           	opt stack 0
  7682  002E1E                     i2___xxtofl:
  7683                           	opt stack 23
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;incstack = 0
  7687                           ;i2___xxtofl@sign stored from wreg
  7688  002E1E  6E09               	movwf	i2___xxtofl@sign,c
  7689  002E20  5009               	movf	i2___xxtofl@sign,w,c
  7690  002E22  A4D8               	btfss	status,2,c
  7691  002E24  AE04               	btfss	i2___xxtofl@val+3,7,c
  7692  002E26  D01A               	goto	i2l940
  7693  002E28  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
  7694  002E2C  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
  7695  002E30  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
  7696  002E34  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
  7697  002E38  1E05               	comf	??i2___xxtofl,f,c
  7698  002E3A  1E06               	comf	??i2___xxtofl+1,f,c
  7699  002E3C  1E07               	comf	??i2___xxtofl+2,f,c
  7700  002E3E  1E08               	comf	??i2___xxtofl+3,f,c
  7701  002E40  2A05               	incf	??i2___xxtofl,f,c
  7702  002E42  0E00               	movlw	0
  7703  002E44  2206               	addwfc	??i2___xxtofl+1,f,c
  7704  002E46  2207               	addwfc	??i2___xxtofl+2,f,c
  7705  002E48  2208               	addwfc	??i2___xxtofl+3,f,c
  7706  002E4A  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
  7707  002E4E  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
  7708  002E52  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
  7709  002E56  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
  7710  002E5A  D008               	goto	i2l941
  7711  002E5C                     i2l940:
  7712  002E5C  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
  7713  002E60  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
  7714  002E64  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
  7715  002E68  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
  7716  002E6C                     i2l941:
  7717  002E6C  5001               	movf	i2___xxtofl@val,w,c
  7718  002E6E  1002               	iorwf	i2___xxtofl@val+1,w,c
  7719  002E70  1003               	iorwf	i2___xxtofl@val+2,w,c
  7720  002E72  1004               	iorwf	i2___xxtofl@val+3,w,c
  7721  002E74  A4D8               	btfss	status,2,c
  7722  002E76  D009               	goto	i2l942
  7723  002E78  0E00               	movlw	0
  7724  002E7A  6E01               	movwf	?i2___xxtofl,c
  7725  002E7C  0E00               	movlw	0
  7726  002E7E  6E02               	movwf	?i2___xxtofl+1,c
  7727  002E80  0E00               	movlw	0
  7728  002E82  6E03               	movwf	?i2___xxtofl+2,c
  7729  002E84  0E00               	movlw	0
  7730  002E86  6E04               	movwf	?i2___xxtofl+3,c
  7731  002E88  0012               	return	
  7732  002E8A                     i2l942:
  7733  002E8A  0E96               	movlw	150
  7734  002E8C  6E0A               	movwf	i2___xxtofl@exp,c
  7735  002E8E  D006               	goto	i2l944
  7736  002E90  2A0A               	incf	i2___xxtofl@exp,f,c
  7737  002E92  90D8               	bcf	status,0,c
  7738  002E94  320E               	rrcf	i2___xxtofl@arg+3,f,c
  7739  002E96  320D               	rrcf	i2___xxtofl@arg+2,f,c
  7740  002E98  320C               	rrcf	i2___xxtofl@arg+1,f,c
  7741  002E9A  320B               	rrcf	i2___xxtofl@arg,f,c
  7742  002E9C                     i2l944:
  7743  002E9C  0E00               	movlw	0
  7744  002E9E  140B               	andwf	i2___xxtofl@arg,w,c
  7745  002EA0  6E05               	movwf	??i2___xxtofl& (0+255),c
  7746  002EA2  0E00               	movlw	0
  7747  002EA4  140C               	andwf	i2___xxtofl@arg+1,w,c
  7748  002EA6  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
  7749  002EA8  0E00               	movlw	0
  7750  002EAA  140D               	andwf	i2___xxtofl@arg+2,w,c
  7751  002EAC  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
  7752  002EAE  0EFE               	movlw	254
  7753  002EB0  140E               	andwf	i2___xxtofl@arg+3,w,c
  7754  002EB2  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
  7755  002EB4  5005               	movf	??i2___xxtofl,w,c
  7756  002EB6  1006               	iorwf	??i2___xxtofl+1,w,c
  7757  002EB8  1007               	iorwf	??i2___xxtofl+2,w,c
  7758  002EBA  1008               	iorwf	??i2___xxtofl+3,w,c
  7759  002EBC  B4D8               	btfsc	status,2,c
  7760  002EBE  D00D               	goto	i2l947
  7761  002EC0  D7E7               	goto	i2l945
  7762  002EC2  2A0A               	incf	i2___xxtofl@exp,f,c
  7763  002EC4  0E01               	movlw	1
  7764  002EC6  260B               	addwf	i2___xxtofl@arg,f,c
  7765  002EC8  0E00               	movlw	0
  7766  002ECA  220C               	addwfc	i2___xxtofl@arg+1,f,c
  7767  002ECC  220D               	addwfc	i2___xxtofl@arg+2,f,c
  7768  002ECE  220E               	addwfc	i2___xxtofl@arg+3,f,c
  7769  002ED0  90D8               	bcf	status,0,c
  7770  002ED2  320E               	rrcf	i2___xxtofl@arg+3,f,c
  7771  002ED4  320D               	rrcf	i2___xxtofl@arg+2,f,c
  7772  002ED6  320C               	rrcf	i2___xxtofl@arg+1,f,c
  7773  002ED8  320B               	rrcf	i2___xxtofl@arg,f,c
  7774  002EDA                     i2l947:
  7775  002EDA  0E00               	movlw	0
  7776  002EDC  140B               	andwf	i2___xxtofl@arg,w,c
  7777  002EDE  6E05               	movwf	??i2___xxtofl& (0+255),c
  7778  002EE0  0E00               	movlw	0
  7779  002EE2  140C               	andwf	i2___xxtofl@arg+1,w,c
  7780  002EE4  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
  7781  002EE6  0E00               	movlw	0
  7782  002EE8  140D               	andwf	i2___xxtofl@arg+2,w,c
  7783  002EEA  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
  7784  002EEC  0EFF               	movlw	255
  7785  002EEE  140E               	andwf	i2___xxtofl@arg+3,w,c
  7786  002EF0  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
  7787  002EF2  5005               	movf	??i2___xxtofl,w,c
  7788  002EF4  1006               	iorwf	??i2___xxtofl+1,w,c
  7789  002EF6  1007               	iorwf	??i2___xxtofl+2,w,c
  7790  002EF8  1008               	iorwf	??i2___xxtofl+3,w,c
  7791  002EFA  B4D8               	btfsc	status,2,c
  7792  002EFC  D007               	goto	i2l950
  7793  002EFE  D7E1               	goto	i2l948
  7794  002F00  060A               	decf	i2___xxtofl@exp,f,c
  7795  002F02  90D8               	bcf	status,0,c
  7796  002F04  360B               	rlcf	i2___xxtofl@arg,f,c
  7797  002F06  360C               	rlcf	i2___xxtofl@arg+1,f,c
  7798  002F08  360D               	rlcf	i2___xxtofl@arg+2,f,c
  7799  002F0A  360E               	rlcf	i2___xxtofl@arg+3,f,c
  7800  002F0C                     i2l950:
  7801  002F0C  BE0D               	btfsc	i2___xxtofl@arg+2,7,c
  7802  002F0E  D003               	goto	i2u590_40
  7803  002F10  0E02               	movlw	2
  7804  002F12  600A               	cpfslt	i2___xxtofl@exp,c
  7805  002F14  D7F5               	goto	i2l951
  7806  002F16                     i2u590_40:
  7807  002F16  B00A               	btfsc	i2___xxtofl@exp,0,c
  7808  002F18  D008               	goto	i2l955
  7809  002F1A  0EFF               	movlw	255
  7810  002F1C  160B               	andwf	i2___xxtofl@arg,f,c
  7811  002F1E  0EFF               	movlw	255
  7812  002F20  160C               	andwf	i2___xxtofl@arg+1,f,c
  7813  002F22  0E7F               	movlw	127
  7814  002F24  160D               	andwf	i2___xxtofl@arg+2,f,c
  7815  002F26  0EFF               	movlw	255
  7816  002F28  160E               	andwf	i2___xxtofl@arg+3,f,c
  7817  002F2A                     i2l955:
  7818  002F2A  90D8               	bcf	status,0,c
  7819  002F2C  320A               	rrcf	i2___xxtofl@exp,f,c
  7820  002F2E  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
  7821  002F32  6A06               	clrf	(??i2___xxtofl+1)& (0+255),c
  7822  002F34  6A07               	clrf	(??i2___xxtofl+2)& (0+255),c
  7823  002F36  6A08               	clrf	(??i2___xxtofl+3)& (0+255),c
  7824  002F38  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
  7825  002F3C  6A07               	clrf	??i2___xxtofl+2,c
  7826  002F3E  6A06               	clrf	??i2___xxtofl+1,c
  7827  002F40  6A05               	clrf	??i2___xxtofl,c
  7828  002F42  5005               	movf	??i2___xxtofl,w,c
  7829  002F44  120B               	iorwf	i2___xxtofl@arg,f,c
  7830  002F46  5006               	movf	??i2___xxtofl+1,w,c
  7831  002F48  120C               	iorwf	i2___xxtofl@arg+1,f,c
  7832  002F4A  5007               	movf	??i2___xxtofl+2,w,c
  7833  002F4C  120D               	iorwf	i2___xxtofl@arg+2,f,c
  7834  002F4E  5008               	movf	??i2___xxtofl+3,w,c
  7835  002F50  120E               	iorwf	i2___xxtofl@arg+3,f,c
  7836  002F52  5009               	movf	i2___xxtofl@sign,w,c
  7837  002F54  A4D8               	btfss	status,2,c
  7838  002F56  AE04               	btfss	i2___xxtofl@val+3,7,c
  7839  002F58  D001               	goto	i2l956
  7840  002F5A  8E0E               	bsf	i2___xxtofl@arg+3,7,c
  7841  002F5C                     i2l956:
  7842  002F5C  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
  7843  002F60  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
  7844  002F64  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
  7845  002F68  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
  7846  002F6C  0012               	return	
  7847  002F6E                     __end_ofi2___xxtofl:
  7848                           	opt stack 0
  7849                           pclatu	equ	0xFFB
  7850                           pclath	equ	0xFFA
  7851                           tblptru	equ	0xFF8
  7852                           tblptrh	equ	0xFF7
  7853                           tblptrl	equ	0xFF6
  7854                           tablat	equ	0xFF5
  7855                           prodh	equ	0xFF4
  7856                           prodl	equ	0xFF3
  7857                           intcon	equ	0xFF2
  7858                           postinc0	equ	0xFEE
  7859                           fsr0h	equ	0xFEA
  7860                           fsr0l	equ	0xFE9
  7861                           wreg	equ	0xFE8
  7862                           fsr1h	equ	0xFE2
  7863                           fsr1l	equ	0xFE1
  7864                           indf2	equ	0xFDF
  7865                           postinc2	equ	0xFDE
  7866                           postdec2	equ	0xFDD
  7867                           fsr2h	equ	0xFDA
  7868                           fsr2l	equ	0xFD9
  7869                           status	equ	0xFD8
  7870                           
  7871 ;; *************** function i2___flneg *****************
  7872 ;; Defined at:
  7873 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;  f1              4    0[COMRAM] unsigned char 
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  4    0[COMRAM] unsigned char 
  7880 ;; Registers used:
  7881 ;;		wreg, status,2, status,0
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7887 ;;      Params:         4       0       0       0       0       0       0       0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7890 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7891 ;;Total ram usage:        4 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_sprintf
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           	psect	text31
  7901  003A10                     __ptext31:
  7902                           	opt stack 0
  7903  003A10                     i2___flneg:
  7904                           	opt stack 23
  7905                           
  7906                           ;incstack = 0
  7907  003A10  5001               	movf	i2___flneg@f1,w,c
  7908  003A12  1002               	iorwf	i2___flneg@f1+1,w,c
  7909  003A14  1003               	iorwf	i2___flneg@f1+2,w,c
  7910  003A16  1004               	iorwf	i2___flneg@f1+3,w,c
  7911  003A18  B4D8               	btfsc	status,2,c
  7912  003A1A  D008               	goto	i2l568
  7913  003A1C  0E00               	movlw	0
  7914  003A1E  1A01               	xorwf	i2___flneg@f1,f,c
  7915  003A20  0E00               	movlw	0
  7916  003A22  1A02               	xorwf	i2___flneg@f1+1,f,c
  7917  003A24  0E00               	movlw	0
  7918  003A26  1A03               	xorwf	i2___flneg@f1+2,f,c
  7919  003A28  0E80               	movlw	128
  7920  003A2A  1A04               	xorwf	i2___flneg@f1+3,f,c
  7921  003A2C                     i2l568:
  7922  003A2C  C001  F001         	movff	i2___flneg@f1,?i2___flneg
  7923  003A30  C002  F002         	movff	i2___flneg@f1+1,?i2___flneg+1
  7924  003A34  C003  F003         	movff	i2___flneg@f1+2,?i2___flneg+2
  7925  003A38  C004  F004         	movff	i2___flneg@f1+3,?i2___flneg+3
  7926  003A3C  0012               	return	
  7927  003A3E                     __end_ofi2___flneg:
  7928                           	opt stack 0
  7929                           pclatu	equ	0xFFB
  7930                           pclath	equ	0xFFA
  7931                           tblptru	equ	0xFF8
  7932                           tblptrh	equ	0xFF7
  7933                           tblptrl	equ	0xFF6
  7934                           tablat	equ	0xFF5
  7935                           prodh	equ	0xFF4
  7936                           prodl	equ	0xFF3
  7937                           intcon	equ	0xFF2
  7938                           postinc0	equ	0xFEE
  7939                           fsr0h	equ	0xFEA
  7940                           fsr0l	equ	0xFE9
  7941                           wreg	equ	0xFE8
  7942                           fsr1h	equ	0xFE2
  7943                           fsr1l	equ	0xFE1
  7944                           indf2	equ	0xFDF
  7945                           postinc2	equ	0xFDE
  7946                           postdec2	equ	0xFDD
  7947                           fsr2h	equ	0xFDA
  7948                           fsr2l	equ	0xFD9
  7949                           status	equ	0xFD8
  7950                           
  7951 ;; *************** function i2___flge *****************
  7952 ;; Defined at:
  7953 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  ff1             4    0[COMRAM] unsigned char 
  7956 ;;  ff2             4    4[COMRAM] unsigned char 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;		None               void
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7968 ;;      Params:         8       0       0       0       0       0       0       0       0
  7969 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7970 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7971 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7972 ;;Total ram usage:       12 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_sprintf
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           	psect	text32
  7982  0032EA                     __ptext32:
  7983                           	opt stack 0
  7984  0032EA                     i2___flge:
  7985                           	opt stack 23
  7986                           
  7987                           ;incstack = 0
  7988  0032EA  0E00               	movlw	0
  7989  0032EC  1401               	andwf	i2___flge@ff1,w,c
  7990  0032EE  6E09               	movwf	??i2___flge& (0+255),c
  7991  0032F0  0E00               	movlw	0
  7992  0032F2  1402               	andwf	i2___flge@ff1+1,w,c
  7993  0032F4  6E0A               	movwf	(??i2___flge+1)& (0+255),c
  7994  0032F6  0E80               	movlw	128
  7995  0032F8  1403               	andwf	i2___flge@ff1+2,w,c
  7996  0032FA  6E0B               	movwf	(??i2___flge+2)& (0+255),c
  7997  0032FC  0E7F               	movlw	127
  7998  0032FE  1404               	andwf	i2___flge@ff1+3,w,c
  7999  003300  6E0C               	movwf	(??i2___flge+3)& (0+255),c
  8000  003302  5009               	movf	??i2___flge,w,c
  8001  003304  100A               	iorwf	??i2___flge+1,w,c
  8002  003306  100B               	iorwf	??i2___flge+2,w,c
  8003  003308  100C               	iorwf	??i2___flge+3,w,c
  8004  00330A  A4D8               	btfss	status,2,c
  8005  00330C  D008               	goto	i2l561
  8006  00330E  0E00               	movlw	0
  8007  003310  6E01               	movwf	i2___flge@ff1,c
  8008  003312  0E00               	movlw	0
  8009  003314  6E02               	movwf	i2___flge@ff1+1,c
  8010  003316  0E00               	movlw	0
  8011  003318  6E03               	movwf	i2___flge@ff1+2,c
  8012  00331A  0E00               	movlw	0
  8013  00331C  6E04               	movwf	i2___flge@ff1+3,c
  8014  00331E                     i2l561:
  8015  00331E  0E00               	movlw	0
  8016  003320  1405               	andwf	i2___flge@ff2,w,c
  8017  003322  6E09               	movwf	??i2___flge& (0+255),c
  8018  003324  0E00               	movlw	0
  8019  003326  1406               	andwf	i2___flge@ff2+1,w,c
  8020  003328  6E0A               	movwf	(??i2___flge+1)& (0+255),c
  8021  00332A  0E80               	movlw	128
  8022  00332C  1407               	andwf	i2___flge@ff2+2,w,c
  8023  00332E  6E0B               	movwf	(??i2___flge+2)& (0+255),c
  8024  003330  0E7F               	movlw	127
  8025  003332  1408               	andwf	i2___flge@ff2+3,w,c
  8026  003334  6E0C               	movwf	(??i2___flge+3)& (0+255),c
  8027  003336  5009               	movf	??i2___flge,w,c
  8028  003338  100A               	iorwf	??i2___flge+1,w,c
  8029  00333A  100B               	iorwf	??i2___flge+2,w,c
  8030  00333C  100C               	iorwf	??i2___flge+3,w,c
  8031  00333E  A4D8               	btfss	status,2,c
  8032  003340  D008               	goto	i2l562
  8033  003342  0E00               	movlw	0
  8034  003344  6E05               	movwf	i2___flge@ff2,c
  8035  003346  0E00               	movlw	0
  8036  003348  6E06               	movwf	i2___flge@ff2+1,c
  8037  00334A  0E00               	movlw	0
  8038  00334C  6E07               	movwf	i2___flge@ff2+2,c
  8039  00334E  0E00               	movlw	0
  8040  003350  6E08               	movwf	i2___flge@ff2+3,c
  8041  003352                     i2l562:
  8042  003352  AE04               	btfss	i2___flge@ff1+3,7,c
  8043  003354  D01D               	goto	i2l563
  8044  003356  C001  F009         	movff	i2___flge@ff1,??i2___flge
  8045  00335A  C002  F00A         	movff	i2___flge@ff1+1,??i2___flge+1
  8046  00335E  C003  F00B         	movff	i2___flge@ff1+2,??i2___flge+2
  8047  003362  C004  F00C         	movff	i2___flge@ff1+3,??i2___flge+3
  8048  003366  1E09               	comf	??i2___flge,f,c
  8049  003368  1E0A               	comf	??i2___flge+1,f,c
  8050  00336A  1E0B               	comf	??i2___flge+2,f,c
  8051  00336C  1E0C               	comf	??i2___flge+3,f,c
  8052  00336E  2A09               	incf	??i2___flge,f,c
  8053  003370  0E00               	movlw	0
  8054  003372  220A               	addwfc	??i2___flge+1,f,c
  8055  003374  220B               	addwfc	??i2___flge+2,f,c
  8056  003376  220C               	addwfc	??i2___flge+3,f,c
  8057  003378  0E00               	movlw	0
  8058  00337A  2409               	addwf	??i2___flge,w,c
  8059  00337C  6E01               	movwf	i2___flge@ff1,c
  8060  00337E  0E00               	movlw	0
  8061  003380  200A               	addwfc	??i2___flge+1,w,c
  8062  003382  6E02               	movwf	i2___flge@ff1+1,c
  8063  003384  0E00               	movlw	0
  8064  003386  200B               	addwfc	??i2___flge+2,w,c
  8065  003388  6E03               	movwf	i2___flge@ff1+2,c
  8066  00338A  0E80               	movlw	128
  8067  00338C  200C               	addwfc	??i2___flge+3,w,c
  8068  00338E  6E04               	movwf	i2___flge@ff1+3,c
  8069  003390                     i2l563:
  8070  003390  AE08               	btfss	i2___flge@ff2+3,7,c
  8071  003392  D01D               	goto	i2l564
  8072  003394  C005  F009         	movff	i2___flge@ff2,??i2___flge
  8073  003398  C006  F00A         	movff	i2___flge@ff2+1,??i2___flge+1
  8074  00339C  C007  F00B         	movff	i2___flge@ff2+2,??i2___flge+2
  8075  0033A0  C008  F00C         	movff	i2___flge@ff2+3,??i2___flge+3
  8076  0033A4  1E09               	comf	??i2___flge,f,c
  8077  0033A6  1E0A               	comf	??i2___flge+1,f,c
  8078  0033A8  1E0B               	comf	??i2___flge+2,f,c
  8079  0033AA  1E0C               	comf	??i2___flge+3,f,c
  8080  0033AC  2A09               	incf	??i2___flge,f,c
  8081  0033AE  0E00               	movlw	0
  8082  0033B0  220A               	addwfc	??i2___flge+1,f,c
  8083  0033B2  220B               	addwfc	??i2___flge+2,f,c
  8084  0033B4  220C               	addwfc	??i2___flge+3,f,c
  8085  0033B6  0E00               	movlw	0
  8086  0033B8  2409               	addwf	??i2___flge,w,c
  8087  0033BA  6E05               	movwf	i2___flge@ff2,c
  8088  0033BC  0E00               	movlw	0
  8089  0033BE  200A               	addwfc	??i2___flge+1,w,c
  8090  0033C0  6E06               	movwf	i2___flge@ff2+1,c
  8091  0033C2  0E00               	movlw	0
  8092  0033C4  200B               	addwfc	??i2___flge+2,w,c
  8093  0033C6  6E07               	movwf	i2___flge@ff2+2,c
  8094  0033C8  0E80               	movlw	128
  8095  0033CA  200C               	addwfc	??i2___flge+3,w,c
  8096  0033CC  6E08               	movwf	i2___flge@ff2+3,c
  8097  0033CE                     i2l564:
  8098  0033CE  0E00               	movlw	0
  8099  0033D0  1A01               	xorwf	i2___flge@ff1,f,c
  8100  0033D2  0E00               	movlw	0
  8101  0033D4  1A02               	xorwf	i2___flge@ff1+1,f,c
  8102  0033D6  0E00               	movlw	0
  8103  0033D8  1A03               	xorwf	i2___flge@ff1+2,f,c
  8104  0033DA  0E80               	movlw	128
  8105  0033DC  1A04               	xorwf	i2___flge@ff1+3,f,c
  8106  0033DE  0E00               	movlw	0
  8107  0033E0  1A05               	xorwf	i2___flge@ff2,f,c
  8108  0033E2  0E00               	movlw	0
  8109  0033E4  1A06               	xorwf	i2___flge@ff2+1,f,c
  8110  0033E6  0E00               	movlw	0
  8111  0033E8  1A07               	xorwf	i2___flge@ff2+2,f,c
  8112  0033EA  0E80               	movlw	128
  8113  0033EC  1A08               	xorwf	i2___flge@ff2+3,f,c
  8114  0033EE  5005               	movf	i2___flge@ff2,w,c
  8115  0033F0  5C01               	subwf	i2___flge@ff1,w,c
  8116  0033F2  5006               	movf	i2___flge@ff2+1,w,c
  8117  0033F4  5802               	subwfb	i2___flge@ff1+1,w,c
  8118  0033F6  5007               	movf	i2___flge@ff2+2,w,c
  8119  0033F8  5803               	subwfb	i2___flge@ff1+2,w,c
  8120  0033FA  5008               	movf	i2___flge@ff2+3,w,c
  8121  0033FC  5804               	subwfb	i2___flge@ff1+3,w,c
  8122  0033FE  B0D8               	btfsc	status,0,c
  8123  003400  D002               	goto	i2l2968
  8124  003402  90D8               	bcf	status,0,c
  8125  003404  0012               	return	
  8126  003406                     i2l2968:
  8127  003406  80D8               	bsf	status,0,c
  8128  003408  0012               	return	
  8129  00340A                     __end_ofi2___flge:
  8130                           	opt stack 0
  8131                           pclatu	equ	0xFFB
  8132                           pclath	equ	0xFFA
  8133                           tblptru	equ	0xFF8
  8134                           tblptrh	equ	0xFF7
  8135                           tblptrl	equ	0xFF6
  8136                           tablat	equ	0xFF5
  8137                           prodh	equ	0xFF4
  8138                           prodl	equ	0xFF3
  8139                           intcon	equ	0xFF2
  8140                           postinc0	equ	0xFEE
  8141                           fsr0h	equ	0xFEA
  8142                           fsr0l	equ	0xFE9
  8143                           wreg	equ	0xFE8
  8144                           fsr1h	equ	0xFE2
  8145                           fsr1l	equ	0xFE1
  8146                           indf2	equ	0xFDF
  8147                           postinc2	equ	0xFDE
  8148                           postdec2	equ	0xFDD
  8149                           fsr2h	equ	0xFDA
  8150                           fsr2l	equ	0xFD9
  8151                           status	equ	0xFD8
  8152                           
  8153 ;; *************** function _scale *****************
  8154 ;; Defined at:
  8155 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;  scl             1    wreg     char 
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;  scl             1   47[COMRAM] char 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  4   39[COMRAM] char 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8169 ;;      Params:         4       0       0       0       0       0       0       0       0
  8170 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8172 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8173 ;;Total ram usage:        9 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:    1
  8176 ;; This function calls:
  8177 ;;		___awdiv
  8178 ;;		___awmod
  8179 ;;		i2___flmul
  8180 ;; This function is called by:
  8181 ;;		_sprintf
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           	psect	text33
  8186  001368                     __ptext33:
  8187                           	opt stack 0
  8188  001368                     _scale:
  8189                           	opt stack 22
  8190                           
  8191                           ;incstack = 0
  8192                           ;scale@scl stored from wreg
  8193  001368  6E30               	movwf	scale@scl,c
  8194                           
  8195                           ;doprnt.c: 428: if(scl < 0) {
  8196  00136A  AE30               	btfss	scale@scl,7,c
  8197  00136C  D10D               	goto	i2l225
  8198                           
  8199                           ;doprnt.c: 429: scl = -scl;
  8200  00136E  6C30               	negf	scale@scl,c
  8201                           
  8202                           ;doprnt.c: 430: if(scl>=110)
  8203  001370  5030               	movf	scale@scl,w,c
  8204  001372  0A80               	xorlw	128
  8205  001374  0F12               	addlw	-238
  8206  001376  A0D8               	btfss	status,0,c
  8207  001378  D098               	goto	i2l226
  8208                           
  8209                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8210  00137A  0E00               	movlw	0
  8211  00137C  6E0A               	movwf	___awdiv@divisor+1,c
  8212  00137E  0E0A               	movlw	10
  8213  001380  6E09               	movwf	___awdiv@divisor,c
  8214  001382  0E00               	movlw	0
  8215  001384  6E04               	movwf	___awmod@divisor+1,c
  8216  001386  0E64               	movlw	100
  8217  001388  6E03               	movwf	___awmod@divisor,c
  8218  00138A  5030               	movf	scale@scl,w,c
  8219  00138C  6E01               	movwf	___awmod@dividend,c
  8220  00138E  6A02               	clrf	___awmod@dividend+1,c
  8221  001390  BE01               	btfsc	___awmod@dividend,7,c
  8222  001392  0602               	decf	___awmod@dividend+1,f,c
  8223  001394  ECEF  F01B         	call	___awmod	;wreg free
  8224  001398  C001  F007         	movff	?___awmod,___awdiv@dividend
  8225  00139C  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  8226  0013A0  EC6C  F01B         	call	___awdiv	;wreg free
  8227  0013A4  90D8               	bcf	status,0,c
  8228  0013A6  3607               	rlcf	?___awdiv,f,c
  8229  0013A8  3608               	rlcf	?___awdiv+1,f,c
  8230  0013AA  90D8               	bcf	status,0,c
  8231  0013AC  3607               	rlcf	?___awdiv,f,c
  8232  0013AE  3608               	rlcf	?___awdiv+1,f,c
  8233  0013B0  0E24               	movlw	36
  8234  0013B2  2607               	addwf	?___awdiv,f,c
  8235  0013B4  0E00               	movlw	0
  8236  0013B6  2208               	addwfc	?___awdiv+1,f,c
  8237  0013B8  0E35               	movlw	low __npowers_
  8238  0013BA  2407               	addwf	?___awdiv,w,c
  8239  0013BC  6EF6               	movwf	tblptrl,c
  8240  0013BE  0E08               	movlw	high __npowers_
  8241  0013C0  2008               	addwfc	?___awdiv+1,w,c
  8242  0013C2  6EF7               	movwf	tblptrh,c
  8243  0013C4                     	if	0	;There are less than 3 active tblptr bytes
  8244  0013C4                     	endif
  8245  0013C4  0009               	tblrd		*+
  8246  0013C6  CFF5 F013          	movff	tablat,i2___flmul@a
  8247  0013CA  0009               	tblrd		*+
  8248  0013CC  CFF5 F014          	movff	tablat,i2___flmul@a+1
  8249  0013D0  0009               	tblrd		*+
  8250  0013D2  CFF5 F015          	movff	tablat,i2___flmul@a+2
  8251  0013D6  000A               	tblrd		*-
  8252  0013D8  CFF5 F016          	movff	tablat,i2___flmul@a+3
  8253  0013DC  0E00               	movlw	0
  8254  0013DE  6E0A               	movwf	___awdiv@divisor+1,c
  8255  0013E0  0E64               	movlw	100
  8256  0013E2  6E09               	movwf	___awdiv@divisor,c
  8257  0013E4  5030               	movf	scale@scl,w,c
  8258  0013E6  6E07               	movwf	___awdiv@dividend,c
  8259  0013E8  6A08               	clrf	___awdiv@dividend+1,c
  8260  0013EA  BE07               	btfsc	___awdiv@dividend,7,c
  8261  0013EC  0608               	decf	___awdiv@dividend+1,f,c
  8262  0013EE  EC6C  F01B         	call	___awdiv	;wreg free
  8263  0013F2  90D8               	bcf	status,0,c
  8264  0013F4  3607               	rlcf	?___awdiv,f,c
  8265  0013F6  3608               	rlcf	?___awdiv+1,f,c
  8266  0013F8  90D8               	bcf	status,0,c
  8267  0013FA  3607               	rlcf	?___awdiv,f,c
  8268  0013FC  3608               	rlcf	?___awdiv+1,f,c
  8269  0013FE  0E48               	movlw	72
  8270  001400  2607               	addwf	?___awdiv,f,c
  8271  001402  0E00               	movlw	0
  8272  001404  2208               	addwfc	?___awdiv+1,f,c
  8273  001406  0E35               	movlw	low __npowers_
  8274  001408  2407               	addwf	?___awdiv,w,c
  8275  00140A  6EF6               	movwf	tblptrl,c
  8276  00140C  0E08               	movlw	high __npowers_
  8277  00140E  2008               	addwfc	?___awdiv+1,w,c
  8278  001410  6EF7               	movwf	tblptrh,c
  8279  001412                     	if	0	;There are less than 3 active tblptr bytes
  8280  001412                     	endif
  8281  001412  0009               	tblrd		*+
  8282  001414  CFF5 F00F          	movff	tablat,i2___flmul@b
  8283  001418  0009               	tblrd		*+
  8284  00141A  CFF5 F010          	movff	tablat,i2___flmul@b+1
  8285  00141E  0009               	tblrd		*+
  8286  001420  CFF5 F011          	movff	tablat,i2___flmul@b+2
  8287  001424  000A               	tblrd		*-
  8288  001426  CFF5 F012          	movff	tablat,i2___flmul@b+3
  8289  00142A  EC79  F00D         	call	i2___flmul	;wreg free
  8290  00142E  C00F  F02C         	movff	?i2___flmul,_scale$1289
  8291  001432  C010  F02D         	movff	?i2___flmul+1,_scale$1289+1
  8292  001436  C011  F02E         	movff	?i2___flmul+2,_scale$1289+2
  8293  00143A  C012  F02F         	movff	?i2___flmul+3,_scale$1289+3
  8294                           
  8295                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8296  00143E  C02C  F00F         	movff	_scale$1289,i2___flmul@b
  8297  001442  C02D  F010         	movff	_scale$1289+1,i2___flmul@b+1
  8298  001446  C02E  F011         	movff	_scale$1289+2,i2___flmul@b+2
  8299  00144A  C02F  F012         	movff	_scale$1289+3,i2___flmul@b+3
  8300  00144E  0E00               	movlw	0
  8301  001450  6E04               	movwf	___awmod@divisor+1,c
  8302  001452  0E0A               	movlw	10
  8303  001454  6E03               	movwf	___awmod@divisor,c
  8304  001456  5030               	movf	scale@scl,w,c
  8305  001458  6E01               	movwf	___awmod@dividend,c
  8306  00145A  6A02               	clrf	___awmod@dividend+1,c
  8307  00145C  BE01               	btfsc	___awmod@dividend,7,c
  8308  00145E  0602               	decf	___awmod@dividend+1,f,c
  8309  001460  ECEF  F01B         	call	___awmod	;wreg free
  8310  001464  90D8               	bcf	status,0,c
  8311  001466  3601               	rlcf	?___awmod,f,c
  8312  001468  3602               	rlcf	?___awmod+1,f,c
  8313  00146A  90D8               	bcf	status,0,c
  8314  00146C  3601               	rlcf	?___awmod,f,c
  8315  00146E  3602               	rlcf	?___awmod+1,f,c
  8316  001470  0E35               	movlw	low __npowers_
  8317  001472  2401               	addwf	?___awmod,w,c
  8318  001474  6EF6               	movwf	tblptrl,c
  8319  001476  0E08               	movlw	high __npowers_
  8320  001478  2002               	addwfc	?___awmod+1,w,c
  8321  00147A  6EF7               	movwf	tblptrh,c
  8322  00147C                     	if	0	;There are less than 3 active tblptr bytes
  8323  00147C                     	endif
  8324  00147C  0009               	tblrd		*+
  8325  00147E  CFF5 F013          	movff	tablat,i2___flmul@a
  8326  001482  0009               	tblrd		*+
  8327  001484  CFF5 F014          	movff	tablat,i2___flmul@a+1
  8328  001488  0009               	tblrd		*+
  8329  00148A  CFF5 F015          	movff	tablat,i2___flmul@a+2
  8330  00148E  000A               	tblrd		*-
  8331  001490  CFF5 F016          	movff	tablat,i2___flmul@a+3
  8332  001494  EC79  F00D         	call	i2___flmul	;wreg free
  8333  001498  C00F  F028         	movff	?i2___flmul,?_scale
  8334  00149C  C010  F029         	movff	?i2___flmul+1,?_scale+1
  8335  0014A0  C011  F02A         	movff	?i2___flmul+2,?_scale+2
  8336  0014A4  C012  F02B         	movff	?i2___flmul+3,?_scale+3
  8337  0014A8  0012               	return	
  8338  0014AA                     i2l226:
  8339                           
  8340                           ;doprnt.c: 432: else if(scl > 10)
  8341  0014AA  5030               	movf	scale@scl,w,c
  8342  0014AC  0A80               	xorlw	128
  8343  0014AE  0F75               	addlw	-139
  8344  0014B0  A0D8               	btfss	status,0,c
  8345  0014B2  D055               	goto	i2l229
  8346                           
  8347                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8348  0014B4  0E00               	movlw	0
  8349  0014B6  6E0A               	movwf	___awdiv@divisor+1,c
  8350  0014B8  0E0A               	movlw	10
  8351  0014BA  6E09               	movwf	___awdiv@divisor,c
  8352  0014BC  5030               	movf	scale@scl,w,c
  8353  0014BE  6E07               	movwf	___awdiv@dividend,c
  8354  0014C0  6A08               	clrf	___awdiv@dividend+1,c
  8355  0014C2  BE07               	btfsc	___awdiv@dividend,7,c
  8356  0014C4  0608               	decf	___awdiv@dividend+1,f,c
  8357  0014C6  EC6C  F01B         	call	___awdiv	;wreg free
  8358  0014CA  90D8               	bcf	status,0,c
  8359  0014CC  3607               	rlcf	?___awdiv,f,c
  8360  0014CE  3608               	rlcf	?___awdiv+1,f,c
  8361  0014D0  90D8               	bcf	status,0,c
  8362  0014D2  3607               	rlcf	?___awdiv,f,c
  8363  0014D4  3608               	rlcf	?___awdiv+1,f,c
  8364  0014D6  0E24               	movlw	36
  8365  0014D8  2607               	addwf	?___awdiv,f,c
  8366  0014DA  0E00               	movlw	0
  8367  0014DC  2208               	addwfc	?___awdiv+1,f,c
  8368  0014DE  0E35               	movlw	low __npowers_
  8369  0014E0  2407               	addwf	?___awdiv,w,c
  8370  0014E2  6EF6               	movwf	tblptrl,c
  8371  0014E4  0E08               	movlw	high __npowers_
  8372  0014E6  2008               	addwfc	?___awdiv+1,w,c
  8373  0014E8  6EF7               	movwf	tblptrh,c
  8374  0014EA                     	if	0	;There are less than 3 active tblptr bytes
  8375  0014EA                     	endif
  8376  0014EA  0009               	tblrd		*+
  8377  0014EC  CFF5 F00F          	movff	tablat,i2___flmul@b
  8378  0014F0  0009               	tblrd		*+
  8379  0014F2  CFF5 F010          	movff	tablat,i2___flmul@b+1
  8380  0014F6  0009               	tblrd		*+
  8381  0014F8  CFF5 F011          	movff	tablat,i2___flmul@b+2
  8382  0014FC  000A               	tblrd		*-
  8383  0014FE  CFF5 F012          	movff	tablat,i2___flmul@b+3
  8384  001502  0E00               	movlw	0
  8385  001504  6E04               	movwf	___awmod@divisor+1,c
  8386  001506  0E0A               	movlw	10
  8387  001508  6E03               	movwf	___awmod@divisor,c
  8388  00150A  5030               	movf	scale@scl,w,c
  8389  00150C  6E01               	movwf	___awmod@dividend,c
  8390  00150E  6A02               	clrf	___awmod@dividend+1,c
  8391  001510  BE01               	btfsc	___awmod@dividend,7,c
  8392  001512  0602               	decf	___awmod@dividend+1,f,c
  8393  001514  ECEF  F01B         	call	___awmod	;wreg free
  8394  001518  90D8               	bcf	status,0,c
  8395  00151A  3601               	rlcf	?___awmod,f,c
  8396  00151C  3602               	rlcf	?___awmod+1,f,c
  8397  00151E  90D8               	bcf	status,0,c
  8398  001520  3601               	rlcf	?___awmod,f,c
  8399  001522  3602               	rlcf	?___awmod+1,f,c
  8400  001524  0E35               	movlw	low __npowers_
  8401  001526  2401               	addwf	?___awmod,w,c
  8402  001528  6EF6               	movwf	tblptrl,c
  8403  00152A  0E08               	movlw	high __npowers_
  8404  00152C  2002               	addwfc	?___awmod+1,w,c
  8405  00152E  6EF7               	movwf	tblptrh,c
  8406  001530                     	if	0	;There are less than 3 active tblptr bytes
  8407  001530                     	endif
  8408  001530  0009               	tblrd		*+
  8409  001532  CFF5 F013          	movff	tablat,i2___flmul@a
  8410  001536  0009               	tblrd		*+
  8411  001538  CFF5 F014          	movff	tablat,i2___flmul@a+1
  8412  00153C  0009               	tblrd		*+
  8413  00153E  CFF5 F015          	movff	tablat,i2___flmul@a+2
  8414  001542  000A               	tblrd		*-
  8415  001544  CFF5 F016          	movff	tablat,i2___flmul@a+3
  8416  001548  EC79  F00D         	call	i2___flmul	;wreg free
  8417  00154C  C00F  F028         	movff	?i2___flmul,?_scale
  8418  001550  C010  F029         	movff	?i2___flmul+1,?_scale+1
  8419  001554  C011  F02A         	movff	?i2___flmul+2,?_scale+2
  8420  001558  C012  F02B         	movff	?i2___flmul+3,?_scale+3
  8421  00155C  0012               	return	
  8422  00155E                     i2l229:
  8423                           
  8424                           ;doprnt.c: 434: return _npowers_[scl];
  8425  00155E  5030               	movf	scale@scl,w,c
  8426  001560  0D04               	mullw	4
  8427  001562  0E35               	movlw	low __npowers_
  8428  001564  24F3               	addwf	prodl,w,c
  8429  001566  6EF6               	movwf	tblptrl,c
  8430  001568  0E08               	movlw	high __npowers_
  8431  00156A  20F4               	addwfc	prodh,w,c
  8432  00156C  6EF7               	movwf	tblptrh,c
  8433  00156E                     	if	0	;There are less than 3 active tblptr bytes
  8434  00156E                     	endif
  8435  00156E  0009               	tblrd		*+
  8436  001570  CFF5 F028          	movff	tablat,?_scale
  8437  001574  0009               	tblrd		*+
  8438  001576  CFF5 F029          	movff	tablat,?_scale+1
  8439  00157A  0009               	tblrd		*+
  8440  00157C  CFF5 F02A          	movff	tablat,?_scale+2
  8441  001580  000A               	tblrd		*-
  8442  001582  CFF5 F02B          	movff	tablat,?_scale+3
  8443  001586  0012               	return	
  8444  001588                     i2l225:
  8445                           
  8446                           ;doprnt.c: 435: }
  8447                           ;doprnt.c: 436: if(scl>=110)
  8448  001588  5030               	movf	scale@scl,w,c
  8449  00158A  0A80               	xorlw	128
  8450  00158C  0F12               	addlw	-238
  8451  00158E  A0D8               	btfss	status,0,c
  8452  001590  D098               	goto	i2l230
  8453                           
  8454                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8455  001592  0E00               	movlw	0
  8456  001594  6E0A               	movwf	___awdiv@divisor+1,c
  8457  001596  0E0A               	movlw	10
  8458  001598  6E09               	movwf	___awdiv@divisor,c
  8459  00159A  0E00               	movlw	0
  8460  00159C  6E04               	movwf	___awmod@divisor+1,c
  8461  00159E  0E64               	movlw	100
  8462  0015A0  6E03               	movwf	___awmod@divisor,c
  8463  0015A2  5030               	movf	scale@scl,w,c
  8464  0015A4  6E01               	movwf	___awmod@dividend,c
  8465  0015A6  6A02               	clrf	___awmod@dividend+1,c
  8466  0015A8  BE01               	btfsc	___awmod@dividend,7,c
  8467  0015AA  0602               	decf	___awmod@dividend+1,f,c
  8468  0015AC  ECEF  F01B         	call	___awmod	;wreg free
  8469  0015B0  C001  F007         	movff	?___awmod,___awdiv@dividend
  8470  0015B4  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  8471  0015B8  EC6C  F01B         	call	___awdiv	;wreg free
  8472  0015BC  90D8               	bcf	status,0,c
  8473  0015BE  3607               	rlcf	?___awdiv,f,c
  8474  0015C0  3608               	rlcf	?___awdiv+1,f,c
  8475  0015C2  90D8               	bcf	status,0,c
  8476  0015C4  3607               	rlcf	?___awdiv,f,c
  8477  0015C6  3608               	rlcf	?___awdiv+1,f,c
  8478  0015C8  0E24               	movlw	36
  8479  0015CA  2607               	addwf	?___awdiv,f,c
  8480  0015CC  0E00               	movlw	0
  8481  0015CE  2208               	addwfc	?___awdiv+1,f,c
  8482  0015D0  0E01               	movlw	low __powers_
  8483  0015D2  2407               	addwf	?___awdiv,w,c
  8484  0015D4  6EF6               	movwf	tblptrl,c
  8485  0015D6  0E08               	movlw	high __powers_
  8486  0015D8  2008               	addwfc	?___awdiv+1,w,c
  8487  0015DA  6EF7               	movwf	tblptrh,c
  8488  0015DC                     	if	0	;There are less than 3 active tblptr bytes
  8489  0015DC                     	endif
  8490  0015DC  0009               	tblrd		*+
  8491  0015DE  CFF5 F013          	movff	tablat,i2___flmul@a
  8492  0015E2  0009               	tblrd		*+
  8493  0015E4  CFF5 F014          	movff	tablat,i2___flmul@a+1
  8494  0015E8  0009               	tblrd		*+
  8495  0015EA  CFF5 F015          	movff	tablat,i2___flmul@a+2
  8496  0015EE  000A               	tblrd		*-
  8497  0015F0  CFF5 F016          	movff	tablat,i2___flmul@a+3
  8498  0015F4  0E00               	movlw	0
  8499  0015F6  6E0A               	movwf	___awdiv@divisor+1,c
  8500  0015F8  0E64               	movlw	100
  8501  0015FA  6E09               	movwf	___awdiv@divisor,c
  8502  0015FC  5030               	movf	scale@scl,w,c
  8503  0015FE  6E07               	movwf	___awdiv@dividend,c
  8504  001600  6A08               	clrf	___awdiv@dividend+1,c
  8505  001602  BE07               	btfsc	___awdiv@dividend,7,c
  8506  001604  0608               	decf	___awdiv@dividend+1,f,c
  8507  001606  EC6C  F01B         	call	___awdiv	;wreg free
  8508  00160A  90D8               	bcf	status,0,c
  8509  00160C  3607               	rlcf	?___awdiv,f,c
  8510  00160E  3608               	rlcf	?___awdiv+1,f,c
  8511  001610  90D8               	bcf	status,0,c
  8512  001612  3607               	rlcf	?___awdiv,f,c
  8513  001614  3608               	rlcf	?___awdiv+1,f,c
  8514  001616  0E48               	movlw	72
  8515  001618  2607               	addwf	?___awdiv,f,c
  8516  00161A  0E00               	movlw	0
  8517  00161C  2208               	addwfc	?___awdiv+1,f,c
  8518  00161E  0E01               	movlw	low __powers_
  8519  001620  2407               	addwf	?___awdiv,w,c
  8520  001622  6EF6               	movwf	tblptrl,c
  8521  001624  0E08               	movlw	high __powers_
  8522  001626  2008               	addwfc	?___awdiv+1,w,c
  8523  001628  6EF7               	movwf	tblptrh,c
  8524  00162A                     	if	0	;There are less than 3 active tblptr bytes
  8525  00162A                     	endif
  8526  00162A  0009               	tblrd		*+
  8527  00162C  CFF5 F00F          	movff	tablat,i2___flmul@b
  8528  001630  0009               	tblrd		*+
  8529  001632  CFF5 F010          	movff	tablat,i2___flmul@b+1
  8530  001636  0009               	tblrd		*+
  8531  001638  CFF5 F011          	movff	tablat,i2___flmul@b+2
  8532  00163C  000A               	tblrd		*-
  8533  00163E  CFF5 F012          	movff	tablat,i2___flmul@b+3
  8534  001642  EC79  F00D         	call	i2___flmul	;wreg free
  8535  001646  C00F  F02C         	movff	?i2___flmul,_scale$1289
  8536  00164A  C010  F02D         	movff	?i2___flmul+1,_scale$1289+1
  8537  00164E  C011  F02E         	movff	?i2___flmul+2,_scale$1289+2
  8538  001652  C012  F02F         	movff	?i2___flmul+3,_scale$1289+3
  8539                           
  8540                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8541  001656  C02C  F00F         	movff	_scale$1289,i2___flmul@b
  8542  00165A  C02D  F010         	movff	_scale$1289+1,i2___flmul@b+1
  8543  00165E  C02E  F011         	movff	_scale$1289+2,i2___flmul@b+2
  8544  001662  C02F  F012         	movff	_scale$1289+3,i2___flmul@b+3
  8545  001666  0E00               	movlw	0
  8546  001668  6E04               	movwf	___awmod@divisor+1,c
  8547  00166A  0E0A               	movlw	10
  8548  00166C  6E03               	movwf	___awmod@divisor,c
  8549  00166E  5030               	movf	scale@scl,w,c
  8550  001670  6E01               	movwf	___awmod@dividend,c
  8551  001672  6A02               	clrf	___awmod@dividend+1,c
  8552  001674  BE01               	btfsc	___awmod@dividend,7,c
  8553  001676  0602               	decf	___awmod@dividend+1,f,c
  8554  001678  ECEF  F01B         	call	___awmod	;wreg free
  8555  00167C  90D8               	bcf	status,0,c
  8556  00167E  3601               	rlcf	?___awmod,f,c
  8557  001680  3602               	rlcf	?___awmod+1,f,c
  8558  001682  90D8               	bcf	status,0,c
  8559  001684  3601               	rlcf	?___awmod,f,c
  8560  001686  3602               	rlcf	?___awmod+1,f,c
  8561  001688  0E01               	movlw	low __powers_
  8562  00168A  2401               	addwf	?___awmod,w,c
  8563  00168C  6EF6               	movwf	tblptrl,c
  8564  00168E  0E08               	movlw	high __powers_
  8565  001690  2002               	addwfc	?___awmod+1,w,c
  8566  001692  6EF7               	movwf	tblptrh,c
  8567  001694                     	if	0	;There are less than 3 active tblptr bytes
  8568  001694                     	endif
  8569  001694  0009               	tblrd		*+
  8570  001696  CFF5 F013          	movff	tablat,i2___flmul@a
  8571  00169A  0009               	tblrd		*+
  8572  00169C  CFF5 F014          	movff	tablat,i2___flmul@a+1
  8573  0016A0  0009               	tblrd		*+
  8574  0016A2  CFF5 F015          	movff	tablat,i2___flmul@a+2
  8575  0016A6  000A               	tblrd		*-
  8576  0016A8  CFF5 F016          	movff	tablat,i2___flmul@a+3
  8577  0016AC  EC79  F00D         	call	i2___flmul	;wreg free
  8578  0016B0  C00F  F028         	movff	?i2___flmul,?_scale
  8579  0016B4  C010  F029         	movff	?i2___flmul+1,?_scale+1
  8580  0016B8  C011  F02A         	movff	?i2___flmul+2,?_scale+2
  8581  0016BC  C012  F02B         	movff	?i2___flmul+3,?_scale+3
  8582  0016C0  0012               	return	
  8583  0016C2                     i2l230:
  8584                           
  8585                           ;doprnt.c: 438: else if(scl > 10)
  8586  0016C2  5030               	movf	scale@scl,w,c
  8587  0016C4  0A80               	xorlw	128
  8588  0016C6  0F75               	addlw	-139
  8589  0016C8  A0D8               	btfss	status,0,c
  8590  0016CA  D055               	goto	i2l232
  8591                           
  8592                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8593  0016CC  0E00               	movlw	0
  8594  0016CE  6E0A               	movwf	___awdiv@divisor+1,c
  8595  0016D0  0E0A               	movlw	10
  8596  0016D2  6E09               	movwf	___awdiv@divisor,c
  8597  0016D4  5030               	movf	scale@scl,w,c
  8598  0016D6  6E07               	movwf	___awdiv@dividend,c
  8599  0016D8  6A08               	clrf	___awdiv@dividend+1,c
  8600  0016DA  BE07               	btfsc	___awdiv@dividend,7,c
  8601  0016DC  0608               	decf	___awdiv@dividend+1,f,c
  8602  0016DE  EC6C  F01B         	call	___awdiv	;wreg free
  8603  0016E2  90D8               	bcf	status,0,c
  8604  0016E4  3607               	rlcf	?___awdiv,f,c
  8605  0016E6  3608               	rlcf	?___awdiv+1,f,c
  8606  0016E8  90D8               	bcf	status,0,c
  8607  0016EA  3607               	rlcf	?___awdiv,f,c
  8608  0016EC  3608               	rlcf	?___awdiv+1,f,c
  8609  0016EE  0E24               	movlw	36
  8610  0016F0  2607               	addwf	?___awdiv,f,c
  8611  0016F2  0E00               	movlw	0
  8612  0016F4  2208               	addwfc	?___awdiv+1,f,c
  8613  0016F6  0E01               	movlw	low __powers_
  8614  0016F8  2407               	addwf	?___awdiv,w,c
  8615  0016FA  6EF6               	movwf	tblptrl,c
  8616  0016FC  0E08               	movlw	high __powers_
  8617  0016FE  2008               	addwfc	?___awdiv+1,w,c
  8618  001700  6EF7               	movwf	tblptrh,c
  8619  001702                     	if	0	;There are less than 3 active tblptr bytes
  8620  001702                     	endif
  8621  001702  0009               	tblrd		*+
  8622  001704  CFF5 F00F          	movff	tablat,i2___flmul@b
  8623  001708  0009               	tblrd		*+
  8624  00170A  CFF5 F010          	movff	tablat,i2___flmul@b+1
  8625  00170E  0009               	tblrd		*+
  8626  001710  CFF5 F011          	movff	tablat,i2___flmul@b+2
  8627  001714  000A               	tblrd		*-
  8628  001716  CFF5 F012          	movff	tablat,i2___flmul@b+3
  8629  00171A  0E00               	movlw	0
  8630  00171C  6E04               	movwf	___awmod@divisor+1,c
  8631  00171E  0E0A               	movlw	10
  8632  001720  6E03               	movwf	___awmod@divisor,c
  8633  001722  5030               	movf	scale@scl,w,c
  8634  001724  6E01               	movwf	___awmod@dividend,c
  8635  001726  6A02               	clrf	___awmod@dividend+1,c
  8636  001728  BE01               	btfsc	___awmod@dividend,7,c
  8637  00172A  0602               	decf	___awmod@dividend+1,f,c
  8638  00172C  ECEF  F01B         	call	___awmod	;wreg free
  8639  001730  90D8               	bcf	status,0,c
  8640  001732  3601               	rlcf	?___awmod,f,c
  8641  001734  3602               	rlcf	?___awmod+1,f,c
  8642  001736  90D8               	bcf	status,0,c
  8643  001738  3601               	rlcf	?___awmod,f,c
  8644  00173A  3602               	rlcf	?___awmod+1,f,c
  8645  00173C  0E01               	movlw	low __powers_
  8646  00173E  2401               	addwf	?___awmod,w,c
  8647  001740  6EF6               	movwf	tblptrl,c
  8648  001742  0E08               	movlw	high __powers_
  8649  001744  2002               	addwfc	?___awmod+1,w,c
  8650  001746  6EF7               	movwf	tblptrh,c
  8651  001748                     	if	0	;There are less than 3 active tblptr bytes
  8652  001748                     	endif
  8653  001748  0009               	tblrd		*+
  8654  00174A  CFF5 F013          	movff	tablat,i2___flmul@a
  8655  00174E  0009               	tblrd		*+
  8656  001750  CFF5 F014          	movff	tablat,i2___flmul@a+1
  8657  001754  0009               	tblrd		*+
  8658  001756  CFF5 F015          	movff	tablat,i2___flmul@a+2
  8659  00175A  000A               	tblrd		*-
  8660  00175C  CFF5 F016          	movff	tablat,i2___flmul@a+3
  8661  001760  EC79  F00D         	call	i2___flmul	;wreg free
  8662  001764  C00F  F028         	movff	?i2___flmul,?_scale
  8663  001768  C010  F029         	movff	?i2___flmul+1,?_scale+1
  8664  00176C  C011  F02A         	movff	?i2___flmul+2,?_scale+2
  8665  001770  C012  F02B         	movff	?i2___flmul+3,?_scale+3
  8666  001774  0012               	return	
  8667  001776                     i2l232:
  8668                           
  8669                           ;doprnt.c: 440: return _powers_[scl];
  8670  001776  5030               	movf	scale@scl,w,c
  8671  001778  0D04               	mullw	4
  8672  00177A  0E01               	movlw	low __powers_
  8673  00177C  24F3               	addwf	prodl,w,c
  8674  00177E  6EF6               	movwf	tblptrl,c
  8675  001780  0E08               	movlw	high __powers_
  8676  001782  20F4               	addwfc	prodh,w,c
  8677  001784  6EF7               	movwf	tblptrh,c
  8678  001786                     	if	0	;There are less than 3 active tblptr bytes
  8679  001786                     	endif
  8680  001786  0009               	tblrd		*+
  8681  001788  CFF5 F028          	movff	tablat,?_scale
  8682  00178C  0009               	tblrd		*+
  8683  00178E  CFF5 F029          	movff	tablat,?_scale+1
  8684  001792  0009               	tblrd		*+
  8685  001794  CFF5 F02A          	movff	tablat,?_scale+2
  8686  001798  000A               	tblrd		*-
  8687  00179A  CFF5 F02B          	movff	tablat,?_scale+3
  8688  00179E  0012               	return	
  8689  0017A0                     __end_of_scale:
  8690                           	opt stack 0
  8691                           pclatu	equ	0xFFB
  8692                           pclath	equ	0xFFA
  8693                           tblptru	equ	0xFF8
  8694                           tblptrh	equ	0xFF7
  8695                           tblptrl	equ	0xFF6
  8696                           tablat	equ	0xFF5
  8697                           prodh	equ	0xFF4
  8698                           prodl	equ	0xFF3
  8699                           intcon	equ	0xFF2
  8700                           postinc0	equ	0xFEE
  8701                           fsr0h	equ	0xFEA
  8702                           fsr0l	equ	0xFE9
  8703                           wreg	equ	0xFE8
  8704                           fsr1h	equ	0xFE2
  8705                           fsr1l	equ	0xFE1
  8706                           indf2	equ	0xFDF
  8707                           postinc2	equ	0xFDE
  8708                           postdec2	equ	0xFDD
  8709                           fsr2h	equ	0xFDA
  8710                           fsr2l	equ	0xFD9
  8711                           status	equ	0xFD8
  8712                           
  8713 ;; *************** function _fround *****************
  8714 ;; Defined at:
  8715 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  prec            1    wreg     unsigned char 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  prec            1   51[COMRAM] unsigned char 
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  4   39[COMRAM] unsigned char 
  8722 ;; Registers used:
  8723 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8729 ;;      Params:         4       0       0       0       0       0       0       0       0
  8730 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8732 ;;      Totals:        13       0       0       0       0       0       0       0       0
  8733 ;;Total ram usage:       13 bytes
  8734 ;; Hardware stack levels used:    1
  8735 ;; Hardware stack levels required when called:    1
  8736 ;; This function calls:
  8737 ;;		___awdiv
  8738 ;;		___awmod
  8739 ;;		i2___flmul
  8740 ;; This function is called by:
  8741 ;;		_sprintf
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text34
  8746  002434                     __ptext34:
  8747                           	opt stack 0
  8748  002434                     _fround:
  8749                           	opt stack 22
  8750                           
  8751                           ;incstack = 0
  8752                           ;fround@prec stored from wreg
  8753  002434  6E34               	movwf	fround@prec,c
  8754                           
  8755                           ;doprnt.c: 413: if(prec>=110)
  8756  002436  0E6D               	movlw	109
  8757  002438  6434               	cpfsgt	fround@prec,c
  8758  00243A  D0AC               	goto	i2l219
  8759                           
  8760                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8761  00243C  0E00               	movlw	0
  8762  00243E  6E0A               	movwf	___awdiv@divisor+1,c
  8763  002440  0E0A               	movlw	10
  8764  002442  6E09               	movwf	___awdiv@divisor,c
  8765  002444  0E00               	movlw	0
  8766  002446  6E04               	movwf	___awmod@divisor+1,c
  8767  002448  0E64               	movlw	100
  8768  00244A  6E03               	movwf	___awmod@divisor,c
  8769  00244C  C034  F001         	movff	fround@prec,___awmod@dividend
  8770  002450  6A02               	clrf	___awmod@dividend+1,c
  8771  002452  ECEF  F01B         	call	___awmod	;wreg free
  8772  002456  C001  F007         	movff	?___awmod,___awdiv@dividend
  8773  00245A  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  8774  00245E  EC6C  F01B         	call	___awdiv	;wreg free
  8775  002462  90D8               	bcf	status,0,c
  8776  002464  3607               	rlcf	?___awdiv,f,c
  8777  002466  3608               	rlcf	?___awdiv+1,f,c
  8778  002468  90D8               	bcf	status,0,c
  8779  00246A  3607               	rlcf	?___awdiv,f,c
  8780  00246C  3608               	rlcf	?___awdiv+1,f,c
  8781  00246E  0E24               	movlw	36
  8782  002470  2607               	addwf	?___awdiv,f,c
  8783  002472  0E00               	movlw	0
  8784  002474  2208               	addwfc	?___awdiv+1,f,c
  8785  002476  0E35               	movlw	low __npowers_
  8786  002478  2407               	addwf	?___awdiv,w,c
  8787  00247A  6EF6               	movwf	tblptrl,c
  8788  00247C  0E08               	movlw	high __npowers_
  8789  00247E  2008               	addwfc	?___awdiv+1,w,c
  8790  002480  6EF7               	movwf	tblptrh,c
  8791  002482                     	if	0	;There are less than 3 active tblptr bytes
  8792  002482                     	endif
  8793  002482  0009               	tblrd		*+
  8794  002484  CFF5 F013          	movff	tablat,i2___flmul@a
  8795  002488  0009               	tblrd		*+
  8796  00248A  CFF5 F014          	movff	tablat,i2___flmul@a+1
  8797  00248E  0009               	tblrd		*+
  8798  002490  CFF5 F015          	movff	tablat,i2___flmul@a+2
  8799  002494  000A               	tblrd		*-
  8800  002496  CFF5 F016          	movff	tablat,i2___flmul@a+3
  8801  00249A  0E00               	movlw	0
  8802  00249C  6E0A               	movwf	___awdiv@divisor+1,c
  8803  00249E  0E64               	movlw	100
  8804  0024A0  6E09               	movwf	___awdiv@divisor,c
  8805  0024A2  C034  F007         	movff	fround@prec,___awdiv@dividend
  8806  0024A6  6A08               	clrf	___awdiv@dividend+1,c
  8807  0024A8  EC6C  F01B         	call	___awdiv	;wreg free
  8808  0024AC  90D8               	bcf	status,0,c
  8809  0024AE  3607               	rlcf	?___awdiv,f,c
  8810  0024B0  3608               	rlcf	?___awdiv+1,f,c
  8811  0024B2  90D8               	bcf	status,0,c
  8812  0024B4  3607               	rlcf	?___awdiv,f,c
  8813  0024B6  3608               	rlcf	?___awdiv+1,f,c
  8814  0024B8  0E48               	movlw	72
  8815  0024BA  2607               	addwf	?___awdiv,f,c
  8816  0024BC  0E00               	movlw	0
  8817  0024BE  2208               	addwfc	?___awdiv+1,f,c
  8818  0024C0  0E35               	movlw	low __npowers_
  8819  0024C2  2407               	addwf	?___awdiv,w,c
  8820  0024C4  6EF6               	movwf	tblptrl,c
  8821  0024C6  0E08               	movlw	high __npowers_
  8822  0024C8  2008               	addwfc	?___awdiv+1,w,c
  8823  0024CA  6EF7               	movwf	tblptrh,c
  8824  0024CC                     	if	0	;There are less than 3 active tblptr bytes
  8825  0024CC                     	endif
  8826  0024CC  0009               	tblrd		*+
  8827  0024CE  CFF5 F00F          	movff	tablat,i2___flmul@b
  8828  0024D2  0009               	tblrd		*+
  8829  0024D4  CFF5 F010          	movff	tablat,i2___flmul@b+1
  8830  0024D8  0009               	tblrd		*+
  8831  0024DA  CFF5 F011          	movff	tablat,i2___flmul@b+2
  8832  0024DE  000A               	tblrd		*-
  8833  0024E0  CFF5 F012          	movff	tablat,i2___flmul@b+3
  8834  0024E4  EC79  F00D         	call	i2___flmul	;wreg free
  8835  0024E8  C00F  F030         	movff	?i2___flmul,_fround$1287
  8836  0024EC  C010  F031         	movff	?i2___flmul+1,_fround$1287+1
  8837  0024F0  C011  F032         	movff	?i2___flmul+2,_fround$1287+2
  8838  0024F4  C012  F033         	movff	?i2___flmul+3,_fround$1287+3
  8839                           
  8840                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8841  0024F8  0E00               	movlw	0
  8842  0024FA  6E04               	movwf	___awmod@divisor+1,c
  8843  0024FC  0E0A               	movlw	10
  8844  0024FE  6E03               	movwf	___awmod@divisor,c
  8845  002500  C034  F001         	movff	fround@prec,___awmod@dividend
  8846  002504  6A02               	clrf	___awmod@dividend+1,c
  8847  002506  ECEF  F01B         	call	___awmod	;wreg free
  8848  00250A  90D8               	bcf	status,0,c
  8849  00250C  3601               	rlcf	?___awmod,f,c
  8850  00250E  3602               	rlcf	?___awmod+1,f,c
  8851  002510  90D8               	bcf	status,0,c
  8852  002512  3601               	rlcf	?___awmod,f,c
  8853  002514  3602               	rlcf	?___awmod+1,f,c
  8854  002516  0E35               	movlw	low __npowers_
  8855  002518  2401               	addwf	?___awmod,w,c
  8856  00251A  6EF6               	movwf	tblptrl,c
  8857  00251C  0E08               	movlw	high __npowers_
  8858  00251E  2002               	addwfc	?___awmod+1,w,c
  8859  002520  6EF7               	movwf	tblptrh,c
  8860  002522                     	if	0	;There are less than 3 active tblptr bytes
  8861  002522                     	endif
  8862  002522  0009               	tblrd		*+
  8863  002524  CFF5 F013          	movff	tablat,i2___flmul@a
  8864  002528  0009               	tblrd		*+
  8865  00252A  CFF5 F014          	movff	tablat,i2___flmul@a+1
  8866  00252E  0009               	tblrd		*+
  8867  002530  CFF5 F015          	movff	tablat,i2___flmul@a+2
  8868  002534  000A               	tblrd		*-
  8869  002536  CFF5 F016          	movff	tablat,i2___flmul@a+3
  8870  00253A  C030  F00F         	movff	_fround$1287,i2___flmul@b
  8871  00253E  C031  F010         	movff	_fround$1287+1,i2___flmul@b+1
  8872  002542  C032  F011         	movff	_fround$1287+2,i2___flmul@b+2
  8873  002546  C033  F012         	movff	_fround$1287+3,i2___flmul@b+3
  8874  00254A  EC79  F00D         	call	i2___flmul	;wreg free
  8875  00254E  C00F  F02C         	movff	?i2___flmul,_fround$1288
  8876  002552  C010  F02D         	movff	?i2___flmul+1,_fround$1288+1
  8877  002556  C011  F02E         	movff	?i2___flmul+2,_fround$1288+2
  8878  00255A  C012  F02F         	movff	?i2___flmul+3,_fround$1288+3
  8879                           
  8880                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8881  00255E  C02C  F00F         	movff	_fround$1288,i2___flmul@b
  8882  002562  C02D  F010         	movff	_fround$1288+1,i2___flmul@b+1
  8883  002566  C02E  F011         	movff	_fround$1288+2,i2___flmul@b+2
  8884  00256A  C02F  F012         	movff	_fround$1288+3,i2___flmul@b+3
  8885  00256E  0E00               	movlw	0
  8886  002570  6E13               	movwf	i2___flmul@a,c
  8887  002572  0E00               	movlw	0
  8888  002574  6E14               	movwf	i2___flmul@a+1,c
  8889  002576  0E00               	movlw	0
  8890  002578  6E15               	movwf	i2___flmul@a+2,c
  8891  00257A  0E3F               	movlw	63
  8892  00257C  6E16               	movwf	i2___flmul@a+3,c
  8893  00257E  EC79  F00D         	call	i2___flmul	;wreg free
  8894  002582  C00F  F028         	movff	?i2___flmul,?_fround
  8895  002586  C010  F029         	movff	?i2___flmul+1,?_fround+1
  8896  00258A  C011  F02A         	movff	?i2___flmul+2,?_fround+2
  8897  00258E  C012  F02B         	movff	?i2___flmul+3,?_fround+3
  8898  002592  0012               	return	
  8899  002594                     i2l219:
  8900                           
  8901                           ;doprnt.c: 415: else if(prec > 10)
  8902  002594  0E0A               	movlw	10
  8903  002596  6434               	cpfsgt	fround@prec,c
  8904  002598  D06B               	goto	i2l222
  8905                           
  8906                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8907  00259A  0E00               	movlw	0
  8908  00259C  6E04               	movwf	___awmod@divisor+1,c
  8909  00259E  0E0A               	movlw	10
  8910  0025A0  6E03               	movwf	___awmod@divisor,c
  8911  0025A2  C034  F001         	movff	fround@prec,___awmod@dividend
  8912  0025A6  6A02               	clrf	___awmod@dividend+1,c
  8913  0025A8  ECEF  F01B         	call	___awmod	;wreg free
  8914  0025AC  90D8               	bcf	status,0,c
  8915  0025AE  3601               	rlcf	?___awmod,f,c
  8916  0025B0  3602               	rlcf	?___awmod+1,f,c
  8917  0025B2  90D8               	bcf	status,0,c
  8918  0025B4  3601               	rlcf	?___awmod,f,c
  8919  0025B6  3602               	rlcf	?___awmod+1,f,c
  8920  0025B8  0E35               	movlw	low __npowers_
  8921  0025BA  2401               	addwf	?___awmod,w,c
  8922  0025BC  6EF6               	movwf	tblptrl,c
  8923  0025BE  0E08               	movlw	high __npowers_
  8924  0025C0  2002               	addwfc	?___awmod+1,w,c
  8925  0025C2  6EF7               	movwf	tblptrh,c
  8926  0025C4                     	if	0	;There are less than 3 active tblptr bytes
  8927  0025C4                     	endif
  8928  0025C4  0009               	tblrd		*+
  8929  0025C6  CFF5 F013          	movff	tablat,i2___flmul@a
  8930  0025CA  0009               	tblrd		*+
  8931  0025CC  CFF5 F014          	movff	tablat,i2___flmul@a+1
  8932  0025D0  0009               	tblrd		*+
  8933  0025D2  CFF5 F015          	movff	tablat,i2___flmul@a+2
  8934  0025D6  000A               	tblrd		*-
  8935  0025D8  CFF5 F016          	movff	tablat,i2___flmul@a+3
  8936  0025DC  0E00               	movlw	0
  8937  0025DE  6E0A               	movwf	___awdiv@divisor+1,c
  8938  0025E0  0E0A               	movlw	10
  8939  0025E2  6E09               	movwf	___awdiv@divisor,c
  8940  0025E4  C034  F007         	movff	fround@prec,___awdiv@dividend
  8941  0025E8  6A08               	clrf	___awdiv@dividend+1,c
  8942  0025EA  EC6C  F01B         	call	___awdiv	;wreg free
  8943  0025EE  90D8               	bcf	status,0,c
  8944  0025F0  3607               	rlcf	?___awdiv,f,c
  8945  0025F2  3608               	rlcf	?___awdiv+1,f,c
  8946  0025F4  90D8               	bcf	status,0,c
  8947  0025F6  3607               	rlcf	?___awdiv,f,c
  8948  0025F8  3608               	rlcf	?___awdiv+1,f,c
  8949  0025FA  0E24               	movlw	36
  8950  0025FC  2607               	addwf	?___awdiv,f,c
  8951  0025FE  0E00               	movlw	0
  8952  002600  2208               	addwfc	?___awdiv+1,f,c
  8953  002602  0E35               	movlw	low __npowers_
  8954  002604  2407               	addwf	?___awdiv,w,c
  8955  002606  6EF6               	movwf	tblptrl,c
  8956  002608  0E08               	movlw	high __npowers_
  8957  00260A  2008               	addwfc	?___awdiv+1,w,c
  8958  00260C  6EF7               	movwf	tblptrh,c
  8959  00260E                     	if	0	;There are less than 3 active tblptr bytes
  8960  00260E                     	endif
  8961  00260E  0009               	tblrd		*+
  8962  002610  CFF5 F00F          	movff	tablat,i2___flmul@b
  8963  002614  0009               	tblrd		*+
  8964  002616  CFF5 F010          	movff	tablat,i2___flmul@b+1
  8965  00261A  0009               	tblrd		*+
  8966  00261C  CFF5 F011          	movff	tablat,i2___flmul@b+2
  8967  002620  000A               	tblrd		*-
  8968  002622  CFF5 F012          	movff	tablat,i2___flmul@b+3
  8969  002626  EC79  F00D         	call	i2___flmul	;wreg free
  8970  00262A  C00F  F030         	movff	?i2___flmul,_fround$1287
  8971  00262E  C010  F031         	movff	?i2___flmul+1,_fround$1287+1
  8972  002632  C011  F032         	movff	?i2___flmul+2,_fround$1287+2
  8973  002636  C012  F033         	movff	?i2___flmul+3,_fround$1287+3
  8974                           
  8975                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8976  00263A  C030  F00F         	movff	_fround$1287,i2___flmul@b
  8977  00263E  C031  F010         	movff	_fround$1287+1,i2___flmul@b+1
  8978  002642  C032  F011         	movff	_fround$1287+2,i2___flmul@b+2
  8979  002646  C033  F012         	movff	_fround$1287+3,i2___flmul@b+3
  8980  00264A  0E00               	movlw	0
  8981  00264C  6E13               	movwf	i2___flmul@a,c
  8982  00264E  0E00               	movlw	0
  8983  002650  6E14               	movwf	i2___flmul@a+1,c
  8984  002652  0E00               	movlw	0
  8985  002654  6E15               	movwf	i2___flmul@a+2,c
  8986  002656  0E3F               	movlw	63
  8987  002658  6E16               	movwf	i2___flmul@a+3,c
  8988  00265A  EC79  F00D         	call	i2___flmul	;wreg free
  8989  00265E  C00F  F028         	movff	?i2___flmul,?_fround
  8990  002662  C010  F029         	movff	?i2___flmul+1,?_fround+1
  8991  002666  C011  F02A         	movff	?i2___flmul+2,?_fround+2
  8992  00266A  C012  F02B         	movff	?i2___flmul+3,?_fround+3
  8993  00266E  0012               	return	
  8994  002670                     i2l222:
  8995                           
  8996                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8997  002670  5034               	movf	fround@prec,w,c
  8998  002672  0D04               	mullw	4
  8999  002674  0E35               	movlw	low __npowers_
  9000  002676  24F3               	addwf	prodl,w,c
  9001  002678  6EF6               	movwf	tblptrl,c
  9002  00267A  0E08               	movlw	high __npowers_
  9003  00267C  20F4               	addwfc	prodh,w,c
  9004  00267E  6EF7               	movwf	tblptrh,c
  9005  002680                     	if	0	;There are less than 3 active tblptr bytes
  9006  002680                     	endif
  9007  002680  0009               	tblrd		*+
  9008  002682  CFF5 F00F          	movff	tablat,i2___flmul@b
  9009  002686  0009               	tblrd		*+
  9010  002688  CFF5 F010          	movff	tablat,i2___flmul@b+1
  9011  00268C  0009               	tblrd		*+
  9012  00268E  CFF5 F011          	movff	tablat,i2___flmul@b+2
  9013  002692  000A               	tblrd		*-
  9014  002694  CFF5 F012          	movff	tablat,i2___flmul@b+3
  9015  002698  0E00               	movlw	0
  9016  00269A  6E13               	movwf	i2___flmul@a,c
  9017  00269C  0E00               	movlw	0
  9018  00269E  6E14               	movwf	i2___flmul@a+1,c
  9019  0026A0  0E00               	movlw	0
  9020  0026A2  6E15               	movwf	i2___flmul@a+2,c
  9021  0026A4  0E3F               	movlw	63
  9022  0026A6  6E16               	movwf	i2___flmul@a+3,c
  9023  0026A8  EC79  F00D         	call	i2___flmul	;wreg free
  9024  0026AC  C00F  F028         	movff	?i2___flmul,?_fround
  9025  0026B0  C010  F029         	movff	?i2___flmul+1,?_fround+1
  9026  0026B4  C011  F02A         	movff	?i2___flmul+2,?_fround+2
  9027  0026B8  C012  F02B         	movff	?i2___flmul+3,?_fround+3
  9028  0026BC  0012               	return	
  9029  0026BE                     __end_of_fround:
  9030                           	opt stack 0
  9031                           pclatu	equ	0xFFB
  9032                           pclath	equ	0xFFA
  9033                           tblptru	equ	0xFF8
  9034                           tblptrh	equ	0xFF7
  9035                           tblptrl	equ	0xFF6
  9036                           tablat	equ	0xFF5
  9037                           prodh	equ	0xFF4
  9038                           prodl	equ	0xFF3
  9039                           intcon	equ	0xFF2
  9040                           postinc0	equ	0xFEE
  9041                           fsr0h	equ	0xFEA
  9042                           fsr0l	equ	0xFE9
  9043                           wreg	equ	0xFE8
  9044                           fsr1h	equ	0xFE2
  9045                           fsr1l	equ	0xFE1
  9046                           indf2	equ	0xFDF
  9047                           postinc2	equ	0xFDE
  9048                           postdec2	equ	0xFDD
  9049                           fsr2h	equ	0xFDA
  9050                           fsr2l	equ	0xFD9
  9051                           status	equ	0xFD8
  9052                           
  9053 ;; *************** function i2___flmul *****************
  9054 ;; Defined at:
  9055 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  b               4   14[COMRAM] unsigned char 
  9058 ;;  a               4   18[COMRAM] unsigned char 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  __flmul         4   33[COMRAM] struct .
  9061 ;;  __flmul         4   28[COMRAM] unsigned long 
  9062 ;;  __flmul         2   37[COMRAM] struct .
  9063 ;;  __flmul         1   32[COMRAM] unsigned char 
  9064 ;;  __flmul         1   27[COMRAM] unsigned char 
  9065 ;;  __flmul         1   26[COMRAM] unsigned char 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  4   14[COMRAM] unsigned char 
  9068 ;; Registers used:
  9069 ;;		wreg, status,2, status,0, prodl, prodh
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9075 ;;      Params:         8       0       0       0       0       0       0       0       0
  9076 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9077 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9078 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9079 ;;Total ram usage:       25 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; This function calls:
  9082 ;;		Nothing
  9083 ;; This function is called by:
  9084 ;;		_fround
  9085 ;;		_scale
  9086 ;;		_sprintf
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           	psect	text35
  9091  001AF2                     __ptext35:
  9092                           	opt stack 0
  9093  001AF2                     i2___flmul:
  9094                           	opt stack 23
  9095                           
  9096                           ;incstack = 0
  9097  001AF2  5012               	movf	i2___flmul@b+3,w,c
  9098  001AF4  0B80               	andlw	128
  9099  001AF6  6E1B               	movwf	i2___flmul@sign,c
  9100  001AF8  5012               	movf	i2___flmul@b+3,w,c
  9101  001AFA  2412               	addwf	i2___flmul@b+3,w,c
  9102  001AFC  6E21               	movwf	i2___flmul@bexp,c
  9103  001AFE  BE11               	btfsc	i2___flmul@b+2,7,c
  9104  001B00  8021               	bsf	i2___flmul@bexp,0,c
  9105  001B02  5021               	movf	i2___flmul@bexp,w,c
  9106  001B04  B4D8               	btfsc	status,2,c
  9107  001B06  D00D               	goto	i2l912
  9108  001B08  2821               	incf	i2___flmul@bexp,w,c
  9109  001B0A  A4D8               	btfss	status,2,c
  9110  001B0C  D008               	goto	i2l913
  9111  001B0E  0E00               	movlw	0
  9112  001B10  6E0F               	movwf	i2___flmul@b,c
  9113  001B12  0E00               	movlw	0
  9114  001B14  6E10               	movwf	i2___flmul@b+1,c
  9115  001B16  0E00               	movlw	0
  9116  001B18  6E11               	movwf	i2___flmul@b+2,c
  9117  001B1A  0E00               	movlw	0
  9118  001B1C  6E12               	movwf	i2___flmul@b+3,c
  9119  001B1E                     i2l913:
  9120  001B1E  8E11               	bsf	i2___flmul@b+2,7,c
  9121  001B20  D008               	goto	i2l914
  9122  001B22                     i2l912:
  9123  001B22  0E00               	movlw	0
  9124  001B24  6E0F               	movwf	i2___flmul@b,c
  9125  001B26  0E00               	movlw	0
  9126  001B28  6E10               	movwf	i2___flmul@b+1,c
  9127  001B2A  0E00               	movlw	0
  9128  001B2C  6E11               	movwf	i2___flmul@b+2,c
  9129  001B2E  0E00               	movlw	0
  9130  001B30  6E12               	movwf	i2___flmul@b+3,c
  9131  001B32                     i2l914:
  9132  001B32  5016               	movf	i2___flmul@a+3,w,c
  9133  001B34  0B80               	andlw	128
  9134  001B36  1A1B               	xorwf	i2___flmul@sign,f,c
  9135  001B38  5016               	movf	i2___flmul@a+3,w,c
  9136  001B3A  2416               	addwf	i2___flmul@a+3,w,c
  9137  001B3C  6E1C               	movwf	i2___flmul@aexp,c
  9138  001B3E  BE15               	btfsc	i2___flmul@a+2,7,c
  9139  001B40  801C               	bsf	i2___flmul@aexp,0,c
  9140  001B42  501C               	movf	i2___flmul@aexp,w,c
  9141  001B44  B4D8               	btfsc	status,2,c
  9142  001B46  D00D               	goto	i2l916
  9143  001B48  281C               	incf	i2___flmul@aexp,w,c
  9144  001B4A  A4D8               	btfss	status,2,c
  9145  001B4C  D008               	goto	i2l917
  9146  001B4E  0E00               	movlw	0
  9147  001B50  6E13               	movwf	i2___flmul@a,c
  9148  001B52  0E00               	movlw	0
  9149  001B54  6E14               	movwf	i2___flmul@a+1,c
  9150  001B56  0E00               	movlw	0
  9151  001B58  6E15               	movwf	i2___flmul@a+2,c
  9152  001B5A  0E00               	movlw	0
  9153  001B5C  6E16               	movwf	i2___flmul@a+3,c
  9154  001B5E                     i2l917:
  9155  001B5E  8E15               	bsf	i2___flmul@a+2,7,c
  9156  001B60  D008               	goto	i2l918
  9157  001B62                     i2l916:
  9158  001B62  0E00               	movlw	0
  9159  001B64  6E13               	movwf	i2___flmul@a,c
  9160  001B66  0E00               	movlw	0
  9161  001B68  6E14               	movwf	i2___flmul@a+1,c
  9162  001B6A  0E00               	movlw	0
  9163  001B6C  6E15               	movwf	i2___flmul@a+2,c
  9164  001B6E  0E00               	movlw	0
  9165  001B70  6E16               	movwf	i2___flmul@a+3,c
  9166  001B72                     i2l918:
  9167  001B72  501C               	movf	i2___flmul@aexp,w,c
  9168  001B74  B4D8               	btfsc	status,2,c
  9169  001B76  D003               	goto	i2u763_40
  9170  001B78  5021               	movf	i2___flmul@bexp,w,c
  9171  001B7A  A4D8               	btfss	status,2,c
  9172  001B7C  D009               	goto	i2l919
  9173  001B7E                     i2u763_40:
  9174  001B7E  0E00               	movlw	0
  9175  001B80  6E0F               	movwf	?i2___flmul,c
  9176  001B82  0E00               	movlw	0
  9177  001B84  6E10               	movwf	?i2___flmul+1,c
  9178  001B86  0E00               	movlw	0
  9179  001B88  6E11               	movwf	?i2___flmul+2,c
  9180  001B8A  0E00               	movlw	0
  9181  001B8C  6E12               	movwf	?i2___flmul+3,c
  9182  001B8E  0012               	return	
  9183  001B90                     i2l919:
  9184  001B90  5015               	movf	i2___flmul@a+2,w,c
  9185  001B92  020F               	mulwf	i2___flmul@b,c
  9186  001B94  CFF3 F026          	movff	prodl,i2___flmul@temp
  9187  001B98  CFF4 F027          	movff	prodh,i2___flmul@temp+1
  9188  001B9C  5026               	movf	i2___flmul@temp,w,c
  9189  001B9E  6E1D               	movwf	i2___flmul@grs,c
  9190  001BA0  6A1E               	clrf	i2___flmul@grs+1,c
  9191  001BA2  6A1F               	clrf	i2___flmul@grs+2,c
  9192  001BA4  6A20               	clrf	i2___flmul@grs+3,c
  9193  001BA6  5027               	movf	i2___flmul@temp+1,w,c
  9194  001BA8  6E22               	movwf	i2___flmul@prod,c
  9195  001BAA  6A23               	clrf	i2___flmul@prod+1,c
  9196  001BAC  6A24               	clrf	i2___flmul@prod+2,c
  9197  001BAE  6A25               	clrf	i2___flmul@prod+3,c
  9198  001BB0  5014               	movf	i2___flmul@a+1,w,c
  9199  001BB2  0210               	mulwf	i2___flmul@b+1,c
  9200  001BB4  CFF3 F026          	movff	prodl,i2___flmul@temp
  9201  001BB8  CFF4 F027          	movff	prodh,i2___flmul@temp+1
  9202  001BBC  5026               	movf	i2___flmul@temp,w,c
  9203  001BBE  261D               	addwf	i2___flmul@grs,f,c
  9204  001BC0  0E00               	movlw	0
  9205  001BC2  221E               	addwfc	i2___flmul@grs+1,f,c
  9206  001BC4  221F               	addwfc	i2___flmul@grs+2,f,c
  9207  001BC6  2220               	addwfc	i2___flmul@grs+3,f,c
  9208  001BC8  5027               	movf	i2___flmul@temp+1,w,c
  9209  001BCA  2622               	addwf	i2___flmul@prod,f,c
  9210  001BCC  0E00               	movlw	0
  9211  001BCE  2223               	addwfc	i2___flmul@prod+1,f,c
  9212  001BD0  2224               	addwfc	i2___flmul@prod+2,f,c
  9213  001BD2  2225               	addwfc	i2___flmul@prod+3,f,c
  9214  001BD4  5013               	movf	i2___flmul@a,w,c
  9215  001BD6  0211               	mulwf	i2___flmul@b+2,c
  9216  001BD8  CFF3 F026          	movff	prodl,i2___flmul@temp
  9217  001BDC  CFF4 F027          	movff	prodh,i2___flmul@temp+1
  9218  001BE0  5026               	movf	i2___flmul@temp,w,c
  9219  001BE2  261D               	addwf	i2___flmul@grs,f,c
  9220  001BE4  0E00               	movlw	0
  9221  001BE6  221E               	addwfc	i2___flmul@grs+1,f,c
  9222  001BE8  221F               	addwfc	i2___flmul@grs+2,f,c
  9223  001BEA  2220               	addwfc	i2___flmul@grs+3,f,c
  9224  001BEC  5027               	movf	i2___flmul@temp+1,w,c
  9225  001BEE  2622               	addwf	i2___flmul@prod,f,c
  9226  001BF0  0E00               	movlw	0
  9227  001BF2  2223               	addwfc	i2___flmul@prod+1,f,c
  9228  001BF4  2224               	addwfc	i2___flmul@prod+2,f,c
  9229  001BF6  2225               	addwfc	i2___flmul@prod+3,f,c
  9230  001BF8  C01F  F020         	movff	i2___flmul@grs+2,i2___flmul@grs+3
  9231  001BFC  C01E  F01F         	movff	i2___flmul@grs+1,i2___flmul@grs+2
  9232  001C00  C01D  F01E         	movff	i2___flmul@grs,i2___flmul@grs+1
  9233  001C04  6A1D               	clrf	i2___flmul@grs,c
  9234  001C06  5013               	movf	i2___flmul@a,w,c
  9235  001C08  0210               	mulwf	i2___flmul@b+1,c
  9236  001C0A  CFF3 F026          	movff	prodl,i2___flmul@temp
  9237  001C0E  CFF4 F027          	movff	prodh,i2___flmul@temp+1
  9238  001C12  5026               	movf	i2___flmul@temp,w,c
  9239  001C14  261D               	addwf	i2___flmul@grs,f,c
  9240  001C16  5027               	movf	i2___flmul@temp+1,w,c
  9241  001C18  221E               	addwfc	i2___flmul@grs+1,f,c
  9242  001C1A  0E00               	movlw	0
  9243  001C1C  221F               	addwfc	i2___flmul@grs+2,f,c
  9244  001C1E  0E00               	movlw	0
  9245  001C20  2220               	addwfc	i2___flmul@grs+3,f,c
  9246  001C22  5014               	movf	i2___flmul@a+1,w,c
  9247  001C24  020F               	mulwf	i2___flmul@b,c
  9248  001C26  CFF3 F026          	movff	prodl,i2___flmul@temp
  9249  001C2A  CFF4 F027          	movff	prodh,i2___flmul@temp+1
  9250  001C2E  5026               	movf	i2___flmul@temp,w,c
  9251  001C30  261D               	addwf	i2___flmul@grs,f,c
  9252  001C32  5027               	movf	i2___flmul@temp+1,w,c
  9253  001C34  221E               	addwfc	i2___flmul@grs+1,f,c
  9254  001C36  0E00               	movlw	0
  9255  001C38  221F               	addwfc	i2___flmul@grs+2,f,c
  9256  001C3A  0E00               	movlw	0
  9257  001C3C  2220               	addwfc	i2___flmul@grs+3,f,c
  9258  001C3E  C01F  F020         	movff	i2___flmul@grs+2,i2___flmul@grs+3
  9259  001C42  C01E  F01F         	movff	i2___flmul@grs+1,i2___flmul@grs+2
  9260  001C46  C01D  F01E         	movff	i2___flmul@grs,i2___flmul@grs+1
  9261  001C4A  6A1D               	clrf	i2___flmul@grs,c
  9262  001C4C  5013               	movf	i2___flmul@a,w,c
  9263  001C4E  020F               	mulwf	i2___flmul@b,c
  9264  001C50  CFF3 F026          	movff	prodl,i2___flmul@temp
  9265  001C54  CFF4 F027          	movff	prodh,i2___flmul@temp+1
  9266  001C58  5026               	movf	i2___flmul@temp,w,c
  9267  001C5A  261D               	addwf	i2___flmul@grs,f,c
  9268  001C5C  5027               	movf	i2___flmul@temp+1,w,c
  9269  001C5E  221E               	addwfc	i2___flmul@grs+1,f,c
  9270  001C60  0E00               	movlw	0
  9271  001C62  221F               	addwfc	i2___flmul@grs+2,f,c
  9272  001C64  0E00               	movlw	0
  9273  001C66  2220               	addwfc	i2___flmul@grs+3,f,c
  9274  001C68  5015               	movf	i2___flmul@a+2,w,c
  9275  001C6A  0210               	mulwf	i2___flmul@b+1,c
  9276  001C6C  CFF3 F026          	movff	prodl,i2___flmul@temp
  9277  001C70  CFF4 F027          	movff	prodh,i2___flmul@temp+1
  9278  001C74  5026               	movf	i2___flmul@temp,w,c
  9279  001C76  2622               	addwf	i2___flmul@prod,f,c
  9280  001C78  5027               	movf	i2___flmul@temp+1,w,c
  9281  001C7A  2223               	addwfc	i2___flmul@prod+1,f,c
  9282  001C7C  0E00               	movlw	0
  9283  001C7E  2224               	addwfc	i2___flmul@prod+2,f,c
  9284  001C80  0E00               	movlw	0
  9285  001C82  2225               	addwfc	i2___flmul@prod+3,f,c
  9286  001C84  5014               	movf	i2___flmul@a+1,w,c
  9287  001C86  0211               	mulwf	i2___flmul@b+2,c
  9288  001C88  CFF3 F026          	movff	prodl,i2___flmul@temp
  9289  001C8C  CFF4 F027          	movff	prodh,i2___flmul@temp+1
  9290  001C90  5026               	movf	i2___flmul@temp,w,c
  9291  001C92  2622               	addwf	i2___flmul@prod,f,c
  9292  001C94  5027               	movf	i2___flmul@temp+1,w,c
  9293  001C96  2223               	addwfc	i2___flmul@prod+1,f,c
  9294  001C98  0E00               	movlw	0
  9295  001C9A  2224               	addwfc	i2___flmul@prod+2,f,c
  9296  001C9C  0E00               	movlw	0
  9297  001C9E  2225               	addwfc	i2___flmul@prod+3,f,c
  9298  001CA0  5015               	movf	i2___flmul@a+2,w,c
  9299  001CA2  0211               	mulwf	i2___flmul@b+2,c
  9300  001CA4  CFF3 F026          	movff	prodl,i2___flmul@temp
  9301  001CA8  CFF4 F027          	movff	prodh,i2___flmul@temp+1
  9302  001CAC  5026               	movf	i2___flmul@temp,w,c
  9303  001CAE  6E17               	movwf	??i2___flmul& (0+255),c
  9304  001CB0  5027               	movf	i2___flmul@temp+1,w,c
  9305  001CB2  6E18               	movwf	(??i2___flmul+1)& (0+255),c
  9306  001CB4  6A19               	clrf	(??i2___flmul+2)& (0+255),c
  9307  001CB6  6A1A               	clrf	(??i2___flmul+3)& (0+255),c
  9308  001CB8  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
  9309  001CBC  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
  9310  001CC0  C017  F018         	movff	??i2___flmul,??i2___flmul+1
  9311  001CC4  6A17               	clrf	??i2___flmul,c
  9312  001CC6  5017               	movf	??i2___flmul,w,c
  9313  001CC8  2622               	addwf	i2___flmul@prod,f,c
  9314  001CCA  5018               	movf	??i2___flmul+1,w,c
  9315  001CCC  2223               	addwfc	i2___flmul@prod+1,f,c
  9316  001CCE  5019               	movf	??i2___flmul+2,w,c
  9317  001CD0  2224               	addwfc	i2___flmul@prod+2,f,c
  9318  001CD2  501A               	movf	??i2___flmul+3,w,c
  9319  001CD4  2225               	addwfc	i2___flmul@prod+3,f,c
  9320  001CD6  C01D  F017         	movff	i2___flmul@grs,??i2___flmul
  9321  001CDA  C01E  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
  9322  001CDE  C01F  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
  9323  001CE2  C020  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
  9324  001CE6  0E19               	movlw	25
  9325  001CE8  D005               	goto	i2u764_40
  9326  001CEA                     i2u764_45:
  9327  001CEA  90D8               	bcf	status,0,c
  9328  001CEC  321A               	rrcf	??i2___flmul+3,f,c
  9329  001CEE  3219               	rrcf	??i2___flmul+2,f,c
  9330  001CF0  3218               	rrcf	??i2___flmul+1,f,c
  9331  001CF2  3217               	rrcf	??i2___flmul,f,c
  9332  001CF4                     i2u764_40:
  9333  001CF4  2EE8               	decfsz	wreg,f,c
  9334  001CF6  D7F9               	goto	i2u764_45
  9335  001CF8  5017               	movf	??i2___flmul,w,c
  9336  001CFA  2622               	addwf	i2___flmul@prod,f,c
  9337  001CFC  5018               	movf	??i2___flmul+1,w,c
  9338  001CFE  2223               	addwfc	i2___flmul@prod+1,f,c
  9339  001D00  5019               	movf	??i2___flmul+2,w,c
  9340  001D02  2224               	addwfc	i2___flmul@prod+2,f,c
  9341  001D04  501A               	movf	??i2___flmul+3,w,c
  9342  001D06  2225               	addwfc	i2___flmul@prod+3,f,c
  9343  001D08  C01F  F020         	movff	i2___flmul@grs+2,i2___flmul@grs+3
  9344  001D0C  C01E  F01F         	movff	i2___flmul@grs+1,i2___flmul@grs+2
  9345  001D10  C01D  F01E         	movff	i2___flmul@grs,i2___flmul@grs+1
  9346  001D14  6A1D               	clrf	i2___flmul@grs,c
  9347  001D16  501C               	movf	i2___flmul@aexp,w,c
  9348  001D18  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
  9349  001D1C  6A18               	clrf	(??i2___flmul+1)& (0+255),c
  9350  001D1E  2617               	addwf	??i2___flmul,f,c
  9351  001D20  0E00               	movlw	0
  9352  001D22  2218               	addwfc	??i2___flmul+1,f,c
  9353  001D24  0E82               	movlw	130
  9354  001D26  2417               	addwf	??i2___flmul,w,c
  9355  001D28  6E26               	movwf	i2___flmul@temp,c
  9356  001D2A  0EFF               	movlw	255
  9357  001D2C  2018               	addwfc	??i2___flmul+1,w,c
  9358  001D2E  6E27               	movwf	i2___flmul@temp+1,c
  9359  001D30  D00F               	goto	i2l923
  9360  001D32  90D8               	bcf	status,0,c
  9361  001D34  3622               	rlcf	i2___flmul@prod,f,c
  9362  001D36  3623               	rlcf	i2___flmul@prod+1,f,c
  9363  001D38  3624               	rlcf	i2___flmul@prod+2,f,c
  9364  001D3A  3625               	rlcf	i2___flmul@prod+3,f,c
  9365  001D3C  BE20               	btfsc	i2___flmul@grs+3,7,c
  9366  001D3E  8022               	bsf	i2___flmul@prod,0,c
  9367  001D40  90D8               	bcf	status,0,c
  9368  001D42  361D               	rlcf	i2___flmul@grs,f,c
  9369  001D44  361E               	rlcf	i2___flmul@grs+1,f,c
  9370  001D46  361F               	rlcf	i2___flmul@grs+2,f,c
  9371  001D48  3620               	rlcf	i2___flmul@grs+3,f,c
  9372  001D4A  0626               	decf	i2___flmul@temp,f,c
  9373  001D4C  A0D8               	btfss	status,0,c
  9374  001D4E  0627               	decf	i2___flmul@temp+1,f,c
  9375  001D50                     i2l923:
  9376  001D50  AE24               	btfss	i2___flmul@prod+2,7,c
  9377  001D52  D7EF               	goto	i2l924
  9378  001D54  0E00               	movlw	0
  9379  001D56  6E1C               	movwf	i2___flmul@aexp,c
  9380  001D58  AE20               	btfss	i2___flmul@grs+3,7,c
  9381  001D5A  D016               	goto	i2l930
  9382  001D5C  0EFF               	movlw	255
  9383  001D5E  141D               	andwf	i2___flmul@grs,w,c
  9384  001D60  6E17               	movwf	??i2___flmul& (0+255),c
  9385  001D62  0EFF               	movlw	255
  9386  001D64  141E               	andwf	i2___flmul@grs+1,w,c
  9387  001D66  6E18               	movwf	(??i2___flmul+1)& (0+255),c
  9388  001D68  0EFF               	movlw	255
  9389  001D6A  141F               	andwf	i2___flmul@grs+2,w,c
  9390  001D6C  6E19               	movwf	(??i2___flmul+2)& (0+255),c
  9391  001D6E  0E7F               	movlw	127
  9392  001D70  1420               	andwf	i2___flmul@grs+3,w,c
  9393  001D72  6E1A               	movwf	(??i2___flmul+3)& (0+255),c
  9394  001D74  5017               	movf	??i2___flmul,w,c
  9395  001D76  1018               	iorwf	??i2___flmul+1,w,c
  9396  001D78  1019               	iorwf	??i2___flmul+2,w,c
  9397  001D7A  101A               	iorwf	??i2___flmul+3,w,c
  9398  001D7C  A4D8               	btfss	status,2,c
  9399  001D7E  D002               	goto	i2u769_40
  9400  001D80  A022               	btfss	i2___flmul@prod,0,c
  9401  001D82  D002               	goto	i2l930
  9402  001D84                     i2u769_40:
  9403  001D84  0E01               	movlw	1
  9404  001D86  6E1C               	movwf	i2___flmul@aexp,c
  9405  001D88                     i2l930:
  9406  001D88  501C               	movf	i2___flmul@aexp,w,c
  9407  001D8A  B4D8               	btfsc	status,2,c
  9408  001D8C  D01F               	goto	i2l932
  9409  001D8E  0E01               	movlw	1
  9410  001D90  2622               	addwf	i2___flmul@prod,f,c
  9411  001D92  0E00               	movlw	0
  9412  001D94  2223               	addwfc	i2___flmul@prod+1,f,c
  9413  001D96  2224               	addwfc	i2___flmul@prod+2,f,c
  9414  001D98  2225               	addwfc	i2___flmul@prod+3,f,c
  9415  001D9A  A025               	btfss	i2___flmul@prod+3,0,c
  9416  001D9C  D017               	goto	i2l932
  9417  001D9E  C022  F017         	movff	i2___flmul@prod,??i2___flmul
  9418  001DA2  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
  9419  001DA6  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
  9420  001DAA  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
  9421  001DAE  341A               	rlcf	??i2___flmul+3,w,c
  9422  001DB0  321A               	rrcf	??i2___flmul+3,f,c
  9423  001DB2  3219               	rrcf	??i2___flmul+2,f,c
  9424  001DB4  3218               	rrcf	??i2___flmul+1,f,c
  9425  001DB6  3217               	rrcf	??i2___flmul,f,c
  9426  001DB8  C017  F022         	movff	??i2___flmul,i2___flmul@prod
  9427  001DBC  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
  9428  001DC0  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
  9429  001DC4  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
  9430  001DC8  4A26               	infsnz	i2___flmul@temp,f,c
  9431  001DCA  2A27               	incf	i2___flmul@temp+1,f,c
  9432  001DCC                     i2l932:
  9433  001DCC  BE27               	btfsc	i2___flmul@temp+1,7,c
  9434  001DCE  D00D               	goto	i2l933
  9435  001DD0  5027               	movf	i2___flmul@temp+1,w,c
  9436  001DD2  E103               	bnz	i2u772_40
  9437  001DD4  2826               	incf	i2___flmul@temp,w,c
  9438  001DD6  A0D8               	btfss	status,0,c
  9439  001DD8  D008               	goto	i2l933
  9440  001DDA                     i2u772_40:
  9441  001DDA  0E00               	movlw	0
  9442  001DDC  6E22               	movwf	i2___flmul@prod,c
  9443  001DDE  0E00               	movlw	0
  9444  001DE0  6E23               	movwf	i2___flmul@prod+1,c
  9445  001DE2  0E80               	movlw	128
  9446  001DE4  6E24               	movwf	i2___flmul@prod+2,c
  9447  001DE6  0E7F               	movlw	127
  9448  001DE8  D020               	goto	L6
  9449  001DEA                     i2l933:
  9450  001DEA  BE27               	btfsc	i2___flmul@temp+1,7,c
  9451  001DEC  D005               	goto	i2u773_40
  9452  001DEE  5027               	movf	i2___flmul@temp+1,w,c
  9453  001DF0  E10E               	bnz	i2l935
  9454  001DF2  0426               	decf	i2___flmul@temp,w,c
  9455  001DF4  B0D8               	btfsc	status,0,c
  9456  001DF6  D00B               	goto	i2l935
  9457  001DF8                     i2u773_40:
  9458  001DF8  0E00               	movlw	0
  9459  001DFA  6E22               	movwf	i2___flmul@prod,c
  9460  001DFC  0E00               	movlw	0
  9461  001DFE  6E23               	movwf	i2___flmul@prod+1,c
  9462  001E00  0E00               	movlw	0
  9463  001E02  6E24               	movwf	i2___flmul@prod+2,c
  9464  001E04  0E00               	movlw	0
  9465  001E06  6E25               	movwf	i2___flmul@prod+3,c
  9466  001E08  0E00               	movlw	0
  9467  001E0A  6E1B               	movwf	i2___flmul@sign,c
  9468  001E0C  D00F               	goto	i2l936
  9469  001E0E                     i2l935:
  9470  001E0E  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
  9471  001E12  0EFF               	movlw	255
  9472  001E14  1622               	andwf	i2___flmul@prod,f,c
  9473  001E16  0EFF               	movlw	255
  9474  001E18  1623               	andwf	i2___flmul@prod+1,f,c
  9475  001E1A  0E7F               	movlw	127
  9476  001E1C  1624               	andwf	i2___flmul@prod+2,f,c
  9477  001E1E  0E00               	movlw	0
  9478  001E20  1625               	andwf	i2___flmul@prod+3,f,c
  9479  001E22  B021               	btfsc	i2___flmul@bexp,0,c
  9480  001E24  8E24               	bsf	i2___flmul@prod+2,7,c
  9481  001E26  90D8               	bcf	status,0,c
  9482  001E28  3021               	rrcf	i2___flmul@bexp,w,c
  9483  001E2A                     L6:
  9484  001E2A  6E25               	movwf	i2___flmul@prod+3,c
  9485  001E2C                     i2l936:
  9486  001E2C  501B               	movf	i2___flmul@sign,w,c
  9487  001E2E  1225               	iorwf	i2___flmul@prod+3,f,c
  9488  001E30  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
  9489  001E34  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
  9490  001E38  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
  9491  001E3C  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
  9492  001E40  0012               	return	
  9493  001E42                     __end_ofi2___flmul:
  9494                           	opt stack 0
  9495                           pclatu	equ	0xFFB
  9496                           pclath	equ	0xFFA
  9497                           tblptru	equ	0xFF8
  9498                           tblptrh	equ	0xFF7
  9499                           tblptrl	equ	0xFF6
  9500                           tablat	equ	0xFF5
  9501                           prodh	equ	0xFF4
  9502                           prodl	equ	0xFF3
  9503                           intcon	equ	0xFF2
  9504                           postinc0	equ	0xFEE
  9505                           fsr0h	equ	0xFEA
  9506                           fsr0l	equ	0xFE9
  9507                           wreg	equ	0xFE8
  9508                           fsr1h	equ	0xFE2
  9509                           fsr1l	equ	0xFE1
  9510                           indf2	equ	0xFDF
  9511                           postinc2	equ	0xFDE
  9512                           postdec2	equ	0xFDD
  9513                           fsr2h	equ	0xFDA
  9514                           fsr2l	equ	0xFD9
  9515                           status	equ	0xFD8
  9516                           
  9517 ;; *************** function ___awmod *****************
  9518 ;; Defined at:
  9519 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;  dividend        2    0[COMRAM] int 
  9522 ;;  divisor         2    2[COMRAM] int 
  9523 ;; Auto vars:     Size  Location     Type
  9524 ;;  sign            1    5[COMRAM] unsigned char 
  9525 ;;  counter         1    4[COMRAM] unsigned char 
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  2    0[COMRAM] int 
  9528 ;; Registers used:
  9529 ;;		wreg, status,2, status,0
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9535 ;;      Params:         4       0       0       0       0       0       0       0       0
  9536 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9538 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9539 ;;Total ram usage:        6 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; This function calls:
  9542 ;;		Nothing
  9543 ;; This function is called by:
  9544 ;;		_fround
  9545 ;;		_scale
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text36
  9550  0037DE                     __ptext36:
  9551                           	opt stack 0
  9552  0037DE                     ___awmod:
  9553                           	opt stack 22
  9554                           
  9555                           ;incstack = 0
  9556  0037DE  0E00               	movlw	0
  9557  0037E0  6E06               	movwf	___awmod@sign,c
  9558  0037E2  AE02               	btfss	___awmod@dividend+1,7,c
  9559  0037E4  D006               	goto	i2l525
  9560  0037E6  6C01               	negf	___awmod@dividend,c
  9561  0037E8  1E02               	comf	___awmod@dividend+1,f,c
  9562  0037EA  B0D8               	btfsc	status,0,c
  9563  0037EC  2A02               	incf	___awmod@dividend+1,f,c
  9564  0037EE  0E01               	movlw	1
  9565  0037F0  6E06               	movwf	___awmod@sign,c
  9566  0037F2                     i2l525:
  9567  0037F2  AE04               	btfss	___awmod@divisor+1,7,c
  9568  0037F4  D004               	goto	i2l526
  9569  0037F6  6C03               	negf	___awmod@divisor,c
  9570  0037F8  1E04               	comf	___awmod@divisor+1,f,c
  9571  0037FA  B0D8               	btfsc	status,0,c
  9572  0037FC  2A04               	incf	___awmod@divisor+1,f,c
  9573  0037FE                     i2l526:
  9574  0037FE  5003               	movf	___awmod@divisor,w,c
  9575  003800  1004               	iorwf	___awmod@divisor+1,w,c
  9576  003802  B4D8               	btfsc	status,2,c
  9577  003804  D018               	goto	i2l533
  9578  003806  0E01               	movlw	1
  9579  003808  6E05               	movwf	___awmod@counter,c
  9580  00380A  D004               	goto	i2l528
  9581  00380C  90D8               	bcf	status,0,c
  9582  00380E  3603               	rlcf	___awmod@divisor,f,c
  9583  003810  3604               	rlcf	___awmod@divisor+1,f,c
  9584  003812  2A05               	incf	___awmod@counter,f,c
  9585  003814                     i2l528:
  9586  003814  AE04               	btfss	___awmod@divisor+1,7,c
  9587  003816  D7FA               	goto	i2l529
  9588  003818                     i2u469_40:
  9589  003818  5003               	movf	___awmod@divisor,w,c
  9590  00381A  5C01               	subwf	___awmod@dividend,w,c
  9591  00381C  5004               	movf	___awmod@divisor+1,w,c
  9592  00381E  5802               	subwfb	___awmod@dividend+1,w,c
  9593  003820  A0D8               	btfss	status,0,c
  9594  003822  D004               	goto	i2l532
  9595  003824  5003               	movf	___awmod@divisor,w,c
  9596  003826  5E01               	subwf	___awmod@dividend,f,c
  9597  003828  5004               	movf	___awmod@divisor+1,w,c
  9598  00382A  5A02               	subwfb	___awmod@dividend+1,f,c
  9599  00382C                     i2l532:
  9600  00382C  90D8               	bcf	status,0,c
  9601  00382E  3204               	rrcf	___awmod@divisor+1,f,c
  9602  003830  3203               	rrcf	___awmod@divisor,f,c
  9603  003832  2E05               	decfsz	___awmod@counter,f,c
  9604  003834  D7F1               	goto	i2u469_40
  9605  003836                     i2l533:
  9606  003836  5006               	movf	___awmod@sign,w,c
  9607  003838  B4D8               	btfsc	status,2,c
  9608  00383A  D004               	goto	i2l534
  9609  00383C  6C01               	negf	___awmod@dividend,c
  9610  00383E  1E02               	comf	___awmod@dividend+1,f,c
  9611  003840  B0D8               	btfsc	status,0,c
  9612  003842  2A02               	incf	___awmod@dividend+1,f,c
  9613  003844                     i2l534:
  9614  003844  C001  F001         	movff	___awmod@dividend,?___awmod
  9615  003848  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9616  00384C  0012               	return	
  9617  00384E                     __end_of___awmod:
  9618                           	opt stack 0
  9619                           pclatu	equ	0xFFB
  9620                           pclath	equ	0xFFA
  9621                           tblptru	equ	0xFF8
  9622                           tblptrh	equ	0xFF7
  9623                           tblptrl	equ	0xFF6
  9624                           tablat	equ	0xFF5
  9625                           prodh	equ	0xFF4
  9626                           prodl	equ	0xFF3
  9627                           intcon	equ	0xFF2
  9628                           postinc0	equ	0xFEE
  9629                           fsr0h	equ	0xFEA
  9630                           fsr0l	equ	0xFE9
  9631                           wreg	equ	0xFE8
  9632                           fsr1h	equ	0xFE2
  9633                           fsr1l	equ	0xFE1
  9634                           indf2	equ	0xFDF
  9635                           postinc2	equ	0xFDE
  9636                           postdec2	equ	0xFDD
  9637                           fsr2h	equ	0xFDA
  9638                           fsr2l	equ	0xFD9
  9639                           status	equ	0xFD8
  9640                           
  9641 ;; *************** function ___awdiv *****************
  9642 ;; Defined at:
  9643 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9644 ;; Parameters:    Size  Location     Type
  9645 ;;  dividend        2    6[COMRAM] int 
  9646 ;;  divisor         2    8[COMRAM] int 
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;  quotient        2   12[COMRAM] int 
  9649 ;;  sign            1   11[COMRAM] unsigned char 
  9650 ;;  counter         1   10[COMRAM] unsigned char 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  2    6[COMRAM] int 
  9653 ;; Registers used:
  9654 ;;		wreg, status,2, status,0
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9660 ;;      Params:         4       0       0       0       0       0       0       0       0
  9661 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9663 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9664 ;;Total ram usage:        8 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; This function calls:
  9667 ;;		Nothing
  9668 ;; This function is called by:
  9669 ;;		_fround
  9670 ;;		_scale
  9671 ;;		_sprintf
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text37
  9676  0036D8                     __ptext37:
  9677                           	opt stack 0
  9678  0036D8                     ___awdiv:
  9679                           	opt stack 22
  9680                           
  9681                           ;incstack = 0
  9682  0036D8  0E00               	movlw	0
  9683  0036DA  6E0C               	movwf	___awdiv@sign,c
  9684  0036DC  AE0A               	btfss	___awdiv@divisor+1,7,c
  9685  0036DE  D006               	goto	i2l512
  9686  0036E0  6C09               	negf	___awdiv@divisor,c
  9687  0036E2  1E0A               	comf	___awdiv@divisor+1,f,c
  9688  0036E4  B0D8               	btfsc	status,0,c
  9689  0036E6  2A0A               	incf	___awdiv@divisor+1,f,c
  9690  0036E8  0E01               	movlw	1
  9691  0036EA  6E0C               	movwf	___awdiv@sign,c
  9692  0036EC                     i2l512:
  9693  0036EC  AE08               	btfss	___awdiv@dividend+1,7,c
  9694  0036EE  D006               	goto	i2l513
  9695  0036F0  6C07               	negf	___awdiv@dividend,c
  9696  0036F2  1E08               	comf	___awdiv@dividend+1,f,c
  9697  0036F4  B0D8               	btfsc	status,0,c
  9698  0036F6  2A08               	incf	___awdiv@dividend+1,f,c
  9699  0036F8  0E01               	movlw	1
  9700  0036FA  1A0C               	xorwf	___awdiv@sign,f,c
  9701  0036FC                     i2l513:
  9702  0036FC  0E00               	movlw	0
  9703  0036FE  6E0E               	movwf	___awdiv@quotient+1,c
  9704  003700  0E00               	movlw	0
  9705  003702  6E0D               	movwf	___awdiv@quotient,c
  9706  003704  5009               	movf	___awdiv@divisor,w,c
  9707  003706  100A               	iorwf	___awdiv@divisor+1,w,c
  9708  003708  B4D8               	btfsc	status,2,c
  9709  00370A  D01C               	goto	i2l520
  9710  00370C  0E01               	movlw	1
  9711  00370E  6E0B               	movwf	___awdiv@counter,c
  9712  003710  D004               	goto	i2l515
  9713  003712  90D8               	bcf	status,0,c
  9714  003714  3609               	rlcf	___awdiv@divisor,f,c
  9715  003716  360A               	rlcf	___awdiv@divisor+1,f,c
  9716  003718  2A0B               	incf	___awdiv@counter,f,c
  9717  00371A                     i2l515:
  9718  00371A  AE0A               	btfss	___awdiv@divisor+1,7,c
  9719  00371C  D7FA               	goto	i2l516
  9720  00371E                     i2u463_40:
  9721  00371E  90D8               	bcf	status,0,c
  9722  003720  360D               	rlcf	___awdiv@quotient,f,c
  9723  003722  360E               	rlcf	___awdiv@quotient+1,f,c
  9724  003724  5009               	movf	___awdiv@divisor,w,c
  9725  003726  5C07               	subwf	___awdiv@dividend,w,c
  9726  003728  500A               	movf	___awdiv@divisor+1,w,c
  9727  00372A  5808               	subwfb	___awdiv@dividend+1,w,c
  9728  00372C  A0D8               	btfss	status,0,c
  9729  00372E  D005               	goto	i2l519
  9730  003730  5009               	movf	___awdiv@divisor,w,c
  9731  003732  5E07               	subwf	___awdiv@dividend,f,c
  9732  003734  500A               	movf	___awdiv@divisor+1,w,c
  9733  003736  5A08               	subwfb	___awdiv@dividend+1,f,c
  9734  003738  800D               	bsf	___awdiv@quotient,0,c
  9735  00373A                     i2l519:
  9736  00373A  90D8               	bcf	status,0,c
  9737  00373C  320A               	rrcf	___awdiv@divisor+1,f,c
  9738  00373E  3209               	rrcf	___awdiv@divisor,f,c
  9739  003740  2E0B               	decfsz	___awdiv@counter,f,c
  9740  003742  D7ED               	goto	i2u463_40
  9741  003744                     i2l520:
  9742  003744  500C               	movf	___awdiv@sign,w,c
  9743  003746  B4D8               	btfsc	status,2,c
  9744  003748  D004               	goto	i2l521
  9745  00374A  6C0D               	negf	___awdiv@quotient,c
  9746  00374C  1E0E               	comf	___awdiv@quotient+1,f,c
  9747  00374E  B0D8               	btfsc	status,0,c
  9748  003750  2A0E               	incf	___awdiv@quotient+1,f,c
  9749  003752                     i2l521:
  9750  003752  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  9751  003756  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  9752  00375A  0012               	return	
  9753  00375C                     __end_of___awdiv:
  9754                           	opt stack 0
  9755                           pclatu	equ	0xFFB
  9756                           pclath	equ	0xFFA
  9757                           tblptru	equ	0xFF8
  9758                           tblptrh	equ	0xFF7
  9759                           tblptrl	equ	0xFF6
  9760                           tablat	equ	0xFF5
  9761                           prodh	equ	0xFF4
  9762                           prodl	equ	0xFF3
  9763                           intcon	equ	0xFF2
  9764                           postinc0	equ	0xFEE
  9765                           fsr0h	equ	0xFEA
  9766                           fsr0l	equ	0xFE9
  9767                           wreg	equ	0xFE8
  9768                           fsr1h	equ	0xFE2
  9769                           fsr1l	equ	0xFE1
  9770                           indf2	equ	0xFDF
  9771                           postinc2	equ	0xFDE
  9772                           postdec2	equ	0xFDD
  9773                           fsr2h	equ	0xFDA
  9774                           fsr2l	equ	0xFD9
  9775                           status	equ	0xFD8
  9776                           
  9777 ;; *************** function __tdiv_to_l_ *****************
  9778 ;; Defined at:
  9779 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  9780 ;; Parameters:    Size  Location     Type
  9781 ;;  f1              4    0[COMRAM] float 
  9782 ;;  f2              4    4[COMRAM] float 
  9783 ;; Auto vars:     Size  Location     Type
  9784 ;;  quot            4   11[COMRAM] unsigned long 
  9785 ;;  exp1            1   16[COMRAM] unsigned char 
  9786 ;;  cntr            1   15[COMRAM] unsigned char 
  9787 ;; Return value:  Size  Location     Type
  9788 ;;                  4    0[COMRAM] unsigned long 
  9789 ;; Registers used:
  9790 ;;		wreg, status,2, status,0
  9791 ;; Tracked objects:
  9792 ;;		On entry : 0/0
  9793 ;;		On exit  : 0/0
  9794 ;;		Unchanged: 0/0
  9795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9796 ;;      Params:         8       0       0       0       0       0       0       0       0
  9797 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9798 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9799 ;;      Totals:        17       0       0       0       0       0       0       0       0
  9800 ;;Total ram usage:       17 bytes
  9801 ;; Hardware stack levels used:    1
  9802 ;; This function calls:
  9803 ;;		Nothing
  9804 ;; This function is called by:
  9805 ;;		_sprintf
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           	psect	text38
  9810  002F6E                     __ptext38:
  9811                           	opt stack 0
  9812  002F6E                     __tdiv_to_l_:
  9813                           	opt stack 23
  9814                           
  9815                           ;incstack = 0
  9816  002F6E  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9817  002F72  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  9818  002F74  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  9819  002F76  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  9820  002F78  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  9821  002F7A  E301               	bnc	u516_41
  9822  002F7C  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  9823  002F7E                     u516_41:
  9824  002F7E  5009               	movf	??__tdiv_to_l_,w,c
  9825  002F80  6E11               	movwf	__tdiv_to_l_@exp1,c
  9826  002F82  5011               	movf	__tdiv_to_l_@exp1,w,c
  9827  002F84  A4D8               	btfss	status,2,c
  9828  002F86  D009               	goto	i2l648
  9829  002F88  0E00               	movlw	0
  9830  002F8A  6E01               	movwf	?__tdiv_to_l_,c
  9831  002F8C  0E00               	movlw	0
  9832  002F8E  6E02               	movwf	?__tdiv_to_l_+1,c
  9833  002F90  0E00               	movlw	0
  9834  002F92  6E03               	movwf	?__tdiv_to_l_+2,c
  9835  002F94  0E00               	movlw	0
  9836  002F96  6E04               	movwf	?__tdiv_to_l_+3,c
  9837  002F98  0012               	return	
  9838  002F9A                     i2l648:
  9839  002F9A  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9840  002F9E  6A0A               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  9841  002FA0  6A0B               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  9842  002FA2  3406               	rlcf	__tdiv_to_l_@f2+1,w,c
  9843  002FA4  3609               	rlcf	??__tdiv_to_l_& (0+255),f,c
  9844  002FA6  E301               	bnc	u518_41
  9845  002FA8  800A               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  9846  002FAA                     u518_41:
  9847  002FAA  5009               	movf	??__tdiv_to_l_,w,c
  9848  002FAC  6E10               	movwf	__tdiv_to_l_@cntr,c
  9849  002FAE  5010               	movf	__tdiv_to_l_@cntr,w,c
  9850  002FB0  A4D8               	btfss	status,2,c
  9851  002FB2  D009               	goto	i2l650
  9852  002FB4  0E00               	movlw	0
  9853  002FB6  6E01               	movwf	?__tdiv_to_l_,c
  9854  002FB8  0E00               	movlw	0
  9855  002FBA  6E02               	movwf	?__tdiv_to_l_+1,c
  9856  002FBC  0E00               	movlw	0
  9857  002FBE  6E03               	movwf	?__tdiv_to_l_+2,c
  9858  002FC0  0E00               	movlw	0
  9859  002FC2  6E04               	movwf	?__tdiv_to_l_+3,c
  9860  002FC4  0012               	return	
  9861  002FC6                     i2l650:
  9862  002FC6  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  9863  002FC8  0EFF               	movlw	255
  9864  002FCA  1601               	andwf	__tdiv_to_l_@f1,f,c
  9865  002FCC  0EFF               	movlw	255
  9866  002FCE  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  9867  002FD0  0E00               	movlw	0
  9868  002FD2  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  9869  002FD4  8E06               	bsf	__tdiv_to_l_@f2+1,7,c
  9870  002FD6  0EFF               	movlw	255
  9871  002FD8  1605               	andwf	__tdiv_to_l_@f2,f,c
  9872  002FDA  0EFF               	movlw	255
  9873  002FDC  1606               	andwf	__tdiv_to_l_@f2+1,f,c
  9874  002FDE  0E00               	movlw	0
  9875  002FE0  1607               	andwf	__tdiv_to_l_@f2+2,f,c
  9876  002FE2  0E00               	movlw	0
  9877  002FE4  6E0C               	movwf	__tdiv_to_l_@quot,c
  9878  002FE6  0E00               	movlw	0
  9879  002FE8  6E0D               	movwf	__tdiv_to_l_@quot+1,c
  9880  002FEA  0E00               	movlw	0
  9881  002FEC  6E0E               	movwf	__tdiv_to_l_@quot+2,c
  9882  002FEE  0E00               	movlw	0
  9883  002FF0  6E0F               	movwf	__tdiv_to_l_@quot+3,c
  9884  002FF2  0E7F               	movlw	127
  9885  002FF4  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  9886  002FF6  5010               	movf	__tdiv_to_l_@cntr,w,c
  9887  002FF8  0F98               	addlw	152
  9888  002FFA  5E11               	subwf	__tdiv_to_l_@exp1,f,c
  9889  002FFC  0E18               	movlw	24
  9890  002FFE  6E10               	movwf	__tdiv_to_l_@cntr,c
  9891  003000                     i2l651:
  9892  003000  90D8               	bcf	status,0,c
  9893  003002  360C               	rlcf	__tdiv_to_l_@quot,f,c
  9894  003004  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  9895  003006  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  9896  003008  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  9897  00300A  5005               	movf	__tdiv_to_l_@f2,w,c
  9898  00300C  5C01               	subwf	__tdiv_to_l_@f1,w,c
  9899  00300E  5006               	movf	__tdiv_to_l_@f2+1,w,c
  9900  003010  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  9901  003012  5007               	movf	__tdiv_to_l_@f2+2,w,c
  9902  003014  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  9903  003016  A0D8               	btfss	status,0,c
  9904  003018  D007               	goto	i2l652
  9905  00301A  5005               	movf	__tdiv_to_l_@f2,w,c
  9906  00301C  5E01               	subwf	__tdiv_to_l_@f1,f,c
  9907  00301E  5006               	movf	__tdiv_to_l_@f2+1,w,c
  9908  003020  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  9909  003022  5007               	movf	__tdiv_to_l_@f2+2,w,c
  9910  003024  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  9911  003026  800C               	bsf	__tdiv_to_l_@quot,0,c
  9912  003028                     i2l652:
  9913  003028  90D8               	bcf	status,0,c
  9914  00302A  3601               	rlcf	__tdiv_to_l_@f1,f,c
  9915  00302C  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  9916  00302E  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  9917  003030  2E10               	decfsz	__tdiv_to_l_@cntr,f,c
  9918  003032  D7E6               	goto	i2l651
  9919  003034  AE11               	btfss	__tdiv_to_l_@exp1,7,c
  9920  003036  D016               	goto	i2l654
  9921  003038  5011               	movf	__tdiv_to_l_@exp1,w,c
  9922  00303A  0A80               	xorlw	128
  9923  00303C  0F97               	addlw	151
  9924  00303E  B0D8               	btfsc	status,0,c
  9925  003040  D009               	goto	i2l655
  9926  003042  0E00               	movlw	0
  9927  003044  6E01               	movwf	?__tdiv_to_l_,c
  9928  003046  0E00               	movlw	0
  9929  003048  6E02               	movwf	?__tdiv_to_l_+1,c
  9930  00304A  0E00               	movlw	0
  9931  00304C  6E03               	movwf	?__tdiv_to_l_+2,c
  9932  00304E  0E00               	movlw	0
  9933  003050  6E04               	movwf	?__tdiv_to_l_+3,c
  9934  003052  0012               	return	
  9935  003054                     i2l655:
  9936  003054  90D8               	bcf	status,0,c
  9937  003056  320F               	rrcf	__tdiv_to_l_@quot+3,f,c
  9938  003058  320E               	rrcf	__tdiv_to_l_@quot+2,f,c
  9939  00305A  320D               	rrcf	__tdiv_to_l_@quot+1,f,c
  9940  00305C  320C               	rrcf	__tdiv_to_l_@quot,f,c
  9941  00305E  3E11               	incfsz	__tdiv_to_l_@exp1,f,c
  9942  003060  D7F9               	goto	i2l655
  9943  003062  D015               	goto	i2u524_40
  9944  003064                     i2l654:
  9945  003064  0E17               	movlw	23
  9946  003066  6411               	cpfsgt	__tdiv_to_l_@exp1,c
  9947  003068  D00F               	goto	i2l660
  9948  00306A  0E00               	movlw	0
  9949  00306C  6E01               	movwf	?__tdiv_to_l_,c
  9950  00306E  0E00               	movlw	0
  9951  003070  6E02               	movwf	?__tdiv_to_l_+1,c
  9952  003072  0E00               	movlw	0
  9953  003074  6E03               	movwf	?__tdiv_to_l_+2,c
  9954  003076  0E00               	movlw	0
  9955  003078  6E04               	movwf	?__tdiv_to_l_+3,c
  9956  00307A  0012               	return	
  9957  00307C  90D8               	bcf	status,0,c
  9958  00307E  360C               	rlcf	__tdiv_to_l_@quot,f,c
  9959  003080  360D               	rlcf	__tdiv_to_l_@quot+1,f,c
  9960  003082  360E               	rlcf	__tdiv_to_l_@quot+2,f,c
  9961  003084  360F               	rlcf	__tdiv_to_l_@quot+3,f,c
  9962  003086  0611               	decf	__tdiv_to_l_@exp1,f,c
  9963  003088                     i2l660:
  9964  003088  5011               	movf	__tdiv_to_l_@exp1,w,c
  9965  00308A  A4D8               	btfss	status,2,c
  9966  00308C  D7F7               	goto	i2l661
  9967  00308E                     i2u524_40:
  9968  00308E  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9969  003092  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9970  003096  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9971  00309A  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9972  00309E  0012               	return		;funcret
  9973  0030A0                     __end_of__tdiv_to_l_:
  9974                           	opt stack 0
  9975                           pclatu	equ	0xFFB
  9976                           pclath	equ	0xFFA
  9977                           tblptru	equ	0xFF8
  9978                           tblptrh	equ	0xFF7
  9979                           tblptrl	equ	0xFF6
  9980                           tablat	equ	0xFF5
  9981                           prodh	equ	0xFF4
  9982                           prodl	equ	0xFF3
  9983                           intcon	equ	0xFF2
  9984                           postinc0	equ	0xFEE
  9985                           fsr0h	equ	0xFEA
  9986                           fsr0l	equ	0xFE9
  9987                           wreg	equ	0xFE8
  9988                           fsr1h	equ	0xFE2
  9989                           fsr1l	equ	0xFE1
  9990                           indf2	equ	0xFDF
  9991                           postinc2	equ	0xFDE
  9992                           postdec2	equ	0xFDD
  9993                           fsr2h	equ	0xFDA
  9994                           fsr2l	equ	0xFD9
  9995                           status	equ	0xFD8
  9996                           
  9997 ;; *************** function __div_to_l_ *****************
  9998 ;; Defined at:
  9999 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  f1              4    0[COMRAM] unsigned long 
 10002 ;;  f2              4    4[COMRAM] unsigned long 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;  quot            4    8[COMRAM] unsigned long 
 10005 ;;  exp1            1   13[COMRAM] unsigned char 
 10006 ;;  cntr            1   12[COMRAM] unsigned char 
 10007 ;; Return value:  Size  Location     Type
 10008 ;;                  4    0[COMRAM] unsigned long 
 10009 ;; Registers used:
 10010 ;;		wreg, status,2, status,0
 10011 ;; Tracked objects:
 10012 ;;		On entry : 0/0
 10013 ;;		On exit  : 0/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10016 ;;      Params:         8       0       0       0       0       0       0       0       0
 10017 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10018 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10019 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10020 ;;Total ram usage:       14 bytes
 10021 ;; Hardware stack levels used:    1
 10022 ;; This function calls:
 10023 ;;		Nothing
 10024 ;; This function is called by:
 10025 ;;		_sprintf
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text39
 10030  0030A0                     __ptext39:
 10031                           	opt stack 0
 10032  0030A0                     __div_to_l_:
 10033                           	opt stack 23
 10034                           
 10035                           ;incstack = 0
 10036  0030A0  3403               	rlcf	__div_to_l_@f1+2,w,c
 10037  0030A2  3404               	rlcf	__div_to_l_@f1+3,w,c
 10038  0030A4  6E0E               	movwf	__div_to_l_@exp1,c
 10039  0030A6  500E               	movf	__div_to_l_@exp1,w,c
 10040  0030A8  A4D8               	btfss	status,2,c
 10041  0030AA  D009               	goto	i2l544
 10042  0030AC  0E00               	movlw	0
 10043  0030AE  6E01               	movwf	?__div_to_l_,c
 10044  0030B0  0E00               	movlw	0
 10045  0030B2  6E02               	movwf	?__div_to_l_+1,c
 10046  0030B4  0E00               	movlw	0
 10047  0030B6  6E03               	movwf	?__div_to_l_+2,c
 10048  0030B8  0E00               	movlw	0
 10049  0030BA  6E04               	movwf	?__div_to_l_+3,c
 10050  0030BC  0012               	return	
 10051  0030BE                     i2l544:
 10052  0030BE  3407               	rlcf	__div_to_l_@f2+2,w,c
 10053  0030C0  3408               	rlcf	__div_to_l_@f2+3,w,c
 10054  0030C2  6E0D               	movwf	__div_to_l_@cntr,c
 10055  0030C4  500D               	movf	__div_to_l_@cntr,w,c
 10056  0030C6  A4D8               	btfss	status,2,c
 10057  0030C8  D009               	goto	i2l546
 10058  0030CA  0E00               	movlw	0
 10059  0030CC  6E01               	movwf	?__div_to_l_,c
 10060  0030CE  0E00               	movlw	0
 10061  0030D0  6E02               	movwf	?__div_to_l_+1,c
 10062  0030D2  0E00               	movlw	0
 10063  0030D4  6E03               	movwf	?__div_to_l_+2,c
 10064  0030D6  0E00               	movlw	0
 10065  0030D8  6E04               	movwf	?__div_to_l_+3,c
 10066  0030DA  0012               	return	
 10067  0030DC                     i2l546:
 10068  0030DC  8E03               	bsf	__div_to_l_@f1+2,7,c
 10069  0030DE  0EFF               	movlw	255
 10070  0030E0  1601               	andwf	__div_to_l_@f1,f,c
 10071  0030E2  0EFF               	movlw	255
 10072  0030E4  1602               	andwf	__div_to_l_@f1+1,f,c
 10073  0030E6  0EFF               	movlw	255
 10074  0030E8  1603               	andwf	__div_to_l_@f1+2,f,c
 10075  0030EA  0E00               	movlw	0
 10076  0030EC  1604               	andwf	__div_to_l_@f1+3,f,c
 10077  0030EE  8E07               	bsf	__div_to_l_@f2+2,7,c
 10078  0030F0  0EFF               	movlw	255
 10079  0030F2  1605               	andwf	__div_to_l_@f2,f,c
 10080  0030F4  0EFF               	movlw	255
 10081  0030F6  1606               	andwf	__div_to_l_@f2+1,f,c
 10082  0030F8  0EFF               	movlw	255
 10083  0030FA  1607               	andwf	__div_to_l_@f2+2,f,c
 10084  0030FC  0E00               	movlw	0
 10085  0030FE  1608               	andwf	__div_to_l_@f2+3,f,c
 10086  003100  0E00               	movlw	0
 10087  003102  6E09               	movwf	__div_to_l_@quot,c
 10088  003104  0E00               	movlw	0
 10089  003106  6E0A               	movwf	__div_to_l_@quot+1,c
 10090  003108  0E00               	movlw	0
 10091  00310A  6E0B               	movwf	__div_to_l_@quot+2,c
 10092  00310C  0E00               	movlw	0
 10093  00310E  6E0C               	movwf	__div_to_l_@quot+3,c
 10094  003110  0E7F               	movlw	127
 10095  003112  5E0E               	subwf	__div_to_l_@exp1,f,c
 10096  003114  500D               	movf	__div_to_l_@cntr,w,c
 10097  003116  0FA0               	addlw	160
 10098  003118  5E0E               	subwf	__div_to_l_@exp1,f,c
 10099  00311A  0E20               	movlw	32
 10100  00311C  6E0D               	movwf	__div_to_l_@cntr,c
 10101  00311E  90D8               	bcf	status,0,c
 10102  003120  3609               	rlcf	__div_to_l_@quot,f,c
 10103  003122  360A               	rlcf	__div_to_l_@quot+1,f,c
 10104  003124  360B               	rlcf	__div_to_l_@quot+2,f,c
 10105  003126  360C               	rlcf	__div_to_l_@quot+3,f,c
 10106  003128  5005               	movf	__div_to_l_@f2,w,c
 10107  00312A  5C01               	subwf	__div_to_l_@f1,w,c
 10108  00312C  5006               	movf	__div_to_l_@f2+1,w,c
 10109  00312E  5802               	subwfb	__div_to_l_@f1+1,w,c
 10110  003130  5007               	movf	__div_to_l_@f2+2,w,c
 10111  003132  5803               	subwfb	__div_to_l_@f1+2,w,c
 10112  003134  5008               	movf	__div_to_l_@f2+3,w,c
 10113  003136  5804               	subwfb	__div_to_l_@f1+3,w,c
 10114  003138  A0D8               	btfss	status,0,c
 10115  00313A  D009               	goto	i2l548
 10116  00313C  5005               	movf	__div_to_l_@f2,w,c
 10117  00313E  5E01               	subwf	__div_to_l_@f1,f,c
 10118  003140  5006               	movf	__div_to_l_@f2+1,w,c
 10119  003142  5A02               	subwfb	__div_to_l_@f1+1,f,c
 10120  003144  5007               	movf	__div_to_l_@f2+2,w,c
 10121  003146  5A03               	subwfb	__div_to_l_@f1+2,f,c
 10122  003148  5008               	movf	__div_to_l_@f2+3,w,c
 10123  00314A  5A04               	subwfb	__div_to_l_@f1+3,f,c
 10124  00314C  8009               	bsf	__div_to_l_@quot,0,c
 10125  00314E                     i2l548:
 10126  00314E  90D8               	bcf	status,0,c
 10127  003150  3601               	rlcf	__div_to_l_@f1,f,c
 10128  003152  3602               	rlcf	__div_to_l_@f1+1,f,c
 10129  003154  3603               	rlcf	__div_to_l_@f1+2,f,c
 10130  003156  3604               	rlcf	__div_to_l_@f1+3,f,c
 10131  003158  2E0D               	decfsz	__div_to_l_@cntr,f,c
 10132  00315A  D7E1               	goto	i2l547
 10133  00315C  AE0E               	btfss	__div_to_l_@exp1,7,c
 10134  00315E  D016               	goto	i2l550
 10135  003160  500E               	movf	__div_to_l_@exp1,w,c
 10136  003162  0A80               	xorlw	128
 10137  003164  0F9F               	addlw	159
 10138  003166  B0D8               	btfsc	status,0,c
 10139  003168  D009               	goto	i2l551
 10140  00316A  0E00               	movlw	0
 10141  00316C  6E01               	movwf	?__div_to_l_,c
 10142  00316E  0E00               	movlw	0
 10143  003170  6E02               	movwf	?__div_to_l_+1,c
 10144  003172  0E00               	movlw	0
 10145  003174  6E03               	movwf	?__div_to_l_+2,c
 10146  003176  0E00               	movlw	0
 10147  003178  6E04               	movwf	?__div_to_l_+3,c
 10148  00317A  0012               	return	
 10149  00317C                     i2l551:
 10150  00317C  90D8               	bcf	status,0,c
 10151  00317E  320C               	rrcf	__div_to_l_@quot+3,f,c
 10152  003180  320B               	rrcf	__div_to_l_@quot+2,f,c
 10153  003182  320A               	rrcf	__div_to_l_@quot+1,f,c
 10154  003184  3209               	rrcf	__div_to_l_@quot,f,c
 10155  003186  3E0E               	incfsz	__div_to_l_@exp1,f,c
 10156  003188  D7F9               	goto	i2l551
 10157  00318A  D015               	goto	i2u531_40
 10158  00318C                     i2l550:
 10159  00318C  0E1F               	movlw	31
 10160  00318E  640E               	cpfsgt	__div_to_l_@exp1,c
 10161  003190  D00F               	goto	i2l556
 10162  003192  0E00               	movlw	0
 10163  003194  6E01               	movwf	?__div_to_l_,c
 10164  003196  0E00               	movlw	0
 10165  003198  6E02               	movwf	?__div_to_l_+1,c
 10166  00319A  0E00               	movlw	0
 10167  00319C  6E03               	movwf	?__div_to_l_+2,c
 10168  00319E  0E00               	movlw	0
 10169  0031A0  6E04               	movwf	?__div_to_l_+3,c
 10170  0031A2  0012               	return	
 10171  0031A4  90D8               	bcf	status,0,c
 10172  0031A6  3609               	rlcf	__div_to_l_@quot,f,c
 10173  0031A8  360A               	rlcf	__div_to_l_@quot+1,f,c
 10174  0031AA  360B               	rlcf	__div_to_l_@quot+2,f,c
 10175  0031AC  360C               	rlcf	__div_to_l_@quot+3,f,c
 10176  0031AE  060E               	decf	__div_to_l_@exp1,f,c
 10177  0031B0                     i2l556:
 10178  0031B0  500E               	movf	__div_to_l_@exp1,w,c
 10179  0031B2  A4D8               	btfss	status,2,c
 10180  0031B4  D7F7               	goto	i2l557
 10181  0031B6                     i2u531_40:
 10182  0031B6  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
 10183  0031BA  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10184  0031BE  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10185  0031C2  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10186  0031C6  0012               	return		;funcret
 10187  0031C8                     __end_of__div_to_l_:
 10188                           	opt stack 0
 10189                           pclatu	equ	0xFFB
 10190                           pclath	equ	0xFFA
 10191                           tblptru	equ	0xFF8
 10192                           tblptrh	equ	0xFF7
 10193                           tblptrl	equ	0xFF6
 10194                           tablat	equ	0xFF5
 10195                           prodh	equ	0xFF4
 10196                           prodl	equ	0xFF3
 10197                           intcon	equ	0xFF2
 10198                           postinc0	equ	0xFEE
 10199                           fsr0h	equ	0xFEA
 10200                           fsr0l	equ	0xFE9
 10201                           wreg	equ	0xFE8
 10202                           fsr1h	equ	0xFE2
 10203                           fsr1l	equ	0xFE1
 10204                           indf2	equ	0xFDF
 10205                           postinc2	equ	0xFDE
 10206                           postdec2	equ	0xFDD
 10207                           fsr2h	equ	0xFDA
 10208                           fsr2l	equ	0xFD9
 10209                           status	equ	0xFD8
 10210                           
 10211 ;; *************** function ___wmul *****************
 10212 ;; Defined at:
 10213 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;  multiplier      2    0[COMRAM] unsigned int 
 10216 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;  product         2    4[COMRAM] unsigned int 
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  2    0[COMRAM] unsigned int 
 10221 ;; Registers used:
 10222 ;;		wreg, status,2, status,0, prodl, prodh
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10228 ;;      Params:         4       0       0       0       0       0       0       0       0
 10229 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10230 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10231 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10232 ;;Total ram usage:        6 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; This function calls:
 10235 ;;		Nothing
 10236 ;; This function is called by:
 10237 ;;		_sprintf
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text40
 10242  003B38                     __ptext40:
 10243                           	opt stack 0
 10244  003B38                     ___wmul:
 10245                           	opt stack 23
 10246                           
 10247                           ;incstack = 0
 10248  003B38  5001               	movf	___wmul@multiplier,w,c
 10249  003B3A  0203               	mulwf	___wmul@multiplicand,c
 10250  003B3C  CFF3 F005          	movff	prodl,___wmul@product
 10251  003B40  CFF4 F006          	movff	prodh,___wmul@product+1
 10252  003B44  5001               	movf	___wmul@multiplier,w,c
 10253  003B46  0204               	mulwf	___wmul@multiplicand+1,c
 10254  003B48  50F3               	movf	prodl,w,c
 10255  003B4A  2606               	addwf	___wmul@product+1,f,c
 10256  003B4C  5002               	movf	___wmul@multiplier+1,w,c
 10257  003B4E  0203               	mulwf	___wmul@multiplicand,c
 10258  003B50  50F3               	movf	prodl,w,c
 10259  003B52  2606               	addwf	___wmul@product+1,f,c
 10260  003B54  C005  F001         	movff	___wmul@product,?___wmul
 10261  003B58  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10262  003B5C  0012               	return	
 10263  003B5E                     __end_of___wmul:
 10264                           	opt stack 0
 10265                           pclatu	equ	0xFFB
 10266                           pclath	equ	0xFFA
 10267                           tblptru	equ	0xFF8
 10268                           tblptrh	equ	0xFF7
 10269                           tblptrl	equ	0xFF6
 10270                           tablat	equ	0xFF5
 10271                           prodh	equ	0xFF4
 10272                           prodl	equ	0xFF3
 10273                           intcon	equ	0xFF2
 10274                           postinc0	equ	0xFEE
 10275                           fsr0h	equ	0xFEA
 10276                           fsr0l	equ	0xFE9
 10277                           wreg	equ	0xFE8
 10278                           fsr1h	equ	0xFE2
 10279                           fsr1l	equ	0xFE1
 10280                           indf2	equ	0xFDF
 10281                           postinc2	equ	0xFDE
 10282                           postdec2	equ	0xFDD
 10283                           fsr2h	equ	0xFDA
 10284                           fsr2l	equ	0xFD9
 10285                           status	equ	0xFD8
 10286                           
 10287 ;; *************** function ___llmod *****************
 10288 ;; Defined at:
 10289 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;  dividend        4    0[COMRAM] unsigned long 
 10292 ;;  divisor         4    4[COMRAM] unsigned long 
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;  counter         1    8[COMRAM] unsigned char 
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  4    0[COMRAM] unsigned long 
 10297 ;; Registers used:
 10298 ;;		wreg, status,2, status,0
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10304 ;;      Params:         8       0       0       0       0       0       0       0       0
 10305 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10306 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10307 ;;      Totals:         9       0       0       0       0       0       0       0       0
 10308 ;;Total ram usage:        9 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; This function calls:
 10311 ;;		Nothing
 10312 ;; This function is called by:
 10313 ;;		_sprintf
 10314 ;; This function uses a non-reentrant model
 10315 ;;
 10316                           
 10317                           	psect	text41
 10318  00384E                     __ptext41:
 10319                           	opt stack 0
 10320  00384E                     ___llmod:
 10321                           	opt stack 23
 10322                           
 10323                           ;incstack = 0
 10324  00384E  5005               	movf	___llmod@divisor,w,c
 10325  003850  1006               	iorwf	___llmod@divisor+1,w,c
 10326  003852  1007               	iorwf	___llmod@divisor+2,w,c
 10327  003854  1008               	iorwf	___llmod@divisor+3,w,c
 10328  003856  B4D8               	btfsc	status,2,c
 10329  003858  D024               	goto	i2l754
 10330  00385A  0E01               	movlw	1
 10331  00385C  6E09               	movwf	___llmod@counter,c
 10332  00385E  D006               	goto	i2l749
 10333  003860  90D8               	bcf	status,0,c
 10334  003862  3605               	rlcf	___llmod@divisor,f,c
 10335  003864  3606               	rlcf	___llmod@divisor+1,f,c
 10336  003866  3607               	rlcf	___llmod@divisor+2,f,c
 10337  003868  3608               	rlcf	___llmod@divisor+3,f,c
 10338  00386A  2A09               	incf	___llmod@counter,f,c
 10339  00386C                     i2l749:
 10340  00386C  AE08               	btfss	___llmod@divisor+3,7,c
 10341  00386E  D7F8               	goto	i2l750
 10342  003870                     i2u576_40:
 10343  003870  5005               	movf	___llmod@divisor,w,c
 10344  003872  5C01               	subwf	___llmod@dividend,w,c
 10345  003874  5006               	movf	___llmod@divisor+1,w,c
 10346  003876  5802               	subwfb	___llmod@dividend+1,w,c
 10347  003878  5007               	movf	___llmod@divisor+2,w,c
 10348  00387A  5803               	subwfb	___llmod@dividend+2,w,c
 10349  00387C  5008               	movf	___llmod@divisor+3,w,c
 10350  00387E  5804               	subwfb	___llmod@dividend+3,w,c
 10351  003880  A0D8               	btfss	status,0,c
 10352  003882  D008               	goto	i2l753
 10353  003884  5005               	movf	___llmod@divisor,w,c
 10354  003886  5E01               	subwf	___llmod@dividend,f,c
 10355  003888  5006               	movf	___llmod@divisor+1,w,c
 10356  00388A  5A02               	subwfb	___llmod@dividend+1,f,c
 10357  00388C  5007               	movf	___llmod@divisor+2,w,c
 10358  00388E  5A03               	subwfb	___llmod@dividend+2,f,c
 10359  003890  5008               	movf	___llmod@divisor+3,w,c
 10360  003892  5A04               	subwfb	___llmod@dividend+3,f,c
 10361  003894                     i2l753:
 10362  003894  90D8               	bcf	status,0,c
 10363  003896  3208               	rrcf	___llmod@divisor+3,f,c
 10364  003898  3207               	rrcf	___llmod@divisor+2,f,c
 10365  00389A  3206               	rrcf	___llmod@divisor+1,f,c
 10366  00389C  3205               	rrcf	___llmod@divisor,f,c
 10367  00389E  2E09               	decfsz	___llmod@counter,f,c
 10368  0038A0  D7E7               	goto	i2u576_40
 10369  0038A2                     i2l754:
 10370  0038A2  C001  F001         	movff	___llmod@dividend,?___llmod
 10371  0038A6  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 10372  0038AA  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 10373  0038AE  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 10374  0038B2  0012               	return		;funcret
 10375  0038B4                     __end_of___llmod:
 10376                           	opt stack 0
 10377                           pclatu	equ	0xFFB
 10378                           pclath	equ	0xFFA
 10379                           tblptru	equ	0xFF8
 10380                           tblptrh	equ	0xFF7
 10381                           tblptrl	equ	0xFF6
 10382                           tablat	equ	0xFF5
 10383                           prodh	equ	0xFF4
 10384                           prodl	equ	0xFF3
 10385                           intcon	equ	0xFF2
 10386                           postinc0	equ	0xFEE
 10387                           fsr0h	equ	0xFEA
 10388                           fsr0l	equ	0xFE9
 10389                           wreg	equ	0xFE8
 10390                           fsr1h	equ	0xFE2
 10391                           fsr1l	equ	0xFE1
 10392                           indf2	equ	0xFDF
 10393                           postinc2	equ	0xFDE
 10394                           postdec2	equ	0xFDD
 10395                           fsr2h	equ	0xFDA
 10396                           fsr2l	equ	0xFD9
 10397                           status	equ	0xFD8
 10398                           
 10399 ;; *************** function ___lldiv *****************
 10400 ;; Defined at:
 10401 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 10402 ;; Parameters:    Size  Location     Type
 10403 ;;  dividend        4    0[COMRAM] unsigned long 
 10404 ;;  divisor         4    4[COMRAM] unsigned long 
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;  quotient        4    8[COMRAM] unsigned long 
 10407 ;;  counter         1   12[COMRAM] unsigned char 
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  4    0[COMRAM] unsigned long 
 10410 ;; Registers used:
 10411 ;;		wreg, status,2, status,0
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10417 ;;      Params:         8       0       0       0       0       0       0       0       0
 10418 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10420 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10421 ;;Total ram usage:       13 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; This function calls:
 10424 ;;		Nothing
 10425 ;; This function is called by:
 10426 ;;		_sprintf
 10427 ;; This function uses a non-reentrant model
 10428 ;;
 10429                           
 10430                           	psect	text42
 10431  00375C                     __ptext42:
 10432                           	opt stack 0
 10433  00375C                     ___lldiv:
 10434                           	opt stack 23
 10435                           
 10436                           ;incstack = 0
 10437  00375C  0E00               	movlw	0
 10438  00375E  6E09               	movwf	___lldiv@quotient,c
 10439  003760  0E00               	movlw	0
 10440  003762  6E0A               	movwf	___lldiv@quotient+1,c
 10441  003764  0E00               	movlw	0
 10442  003766  6E0B               	movwf	___lldiv@quotient+2,c
 10443  003768  0E00               	movlw	0
 10444  00376A  6E0C               	movwf	___lldiv@quotient+3,c
 10445  00376C  5005               	movf	___lldiv@divisor,w,c
 10446  00376E  1006               	iorwf	___lldiv@divisor+1,w,c
 10447  003770  1007               	iorwf	___lldiv@divisor+2,w,c
 10448  003772  1008               	iorwf	___lldiv@divisor+3,w,c
 10449  003774  B4D8               	btfsc	status,2,c
 10450  003776  D02A               	goto	i2l744
 10451  003778  0E01               	movlw	1
 10452  00377A  6E0D               	movwf	___lldiv@counter,c
 10453  00377C  D006               	goto	i2l739
 10454  00377E  90D8               	bcf	status,0,c
 10455  003780  3605               	rlcf	___lldiv@divisor,f,c
 10456  003782  3606               	rlcf	___lldiv@divisor+1,f,c
 10457  003784  3607               	rlcf	___lldiv@divisor+2,f,c
 10458  003786  3608               	rlcf	___lldiv@divisor+3,f,c
 10459  003788  2A0D               	incf	___lldiv@counter,f,c
 10460  00378A                     i2l739:
 10461  00378A  AE08               	btfss	___lldiv@divisor+3,7,c
 10462  00378C  D7F8               	goto	i2l740
 10463  00378E                     i2u573_40:
 10464  00378E  90D8               	bcf	status,0,c
 10465  003790  3609               	rlcf	___lldiv@quotient,f,c
 10466  003792  360A               	rlcf	___lldiv@quotient+1,f,c
 10467  003794  360B               	rlcf	___lldiv@quotient+2,f,c
 10468  003796  360C               	rlcf	___lldiv@quotient+3,f,c
 10469  003798  5005               	movf	___lldiv@divisor,w,c
 10470  00379A  5C01               	subwf	___lldiv@dividend,w,c
 10471  00379C  5006               	movf	___lldiv@divisor+1,w,c
 10472  00379E  5802               	subwfb	___lldiv@dividend+1,w,c
 10473  0037A0  5007               	movf	___lldiv@divisor+2,w,c
 10474  0037A2  5803               	subwfb	___lldiv@dividend+2,w,c
 10475  0037A4  5008               	movf	___lldiv@divisor+3,w,c
 10476  0037A6  5804               	subwfb	___lldiv@dividend+3,w,c
 10477  0037A8  A0D8               	btfss	status,0,c
 10478  0037AA  D009               	goto	i2l743
 10479  0037AC  5005               	movf	___lldiv@divisor,w,c
 10480  0037AE  5E01               	subwf	___lldiv@dividend,f,c
 10481  0037B0  5006               	movf	___lldiv@divisor+1,w,c
 10482  0037B2  5A02               	subwfb	___lldiv@dividend+1,f,c
 10483  0037B4  5007               	movf	___lldiv@divisor+2,w,c
 10484  0037B6  5A03               	subwfb	___lldiv@dividend+2,f,c
 10485  0037B8  5008               	movf	___lldiv@divisor+3,w,c
 10486  0037BA  5A04               	subwfb	___lldiv@dividend+3,f,c
 10487  0037BC  8009               	bsf	___lldiv@quotient,0,c
 10488  0037BE                     i2l743:
 10489  0037BE  90D8               	bcf	status,0,c
 10490  0037C0  3208               	rrcf	___lldiv@divisor+3,f,c
 10491  0037C2  3207               	rrcf	___lldiv@divisor+2,f,c
 10492  0037C4  3206               	rrcf	___lldiv@divisor+1,f,c
 10493  0037C6  3205               	rrcf	___lldiv@divisor,f,c
 10494  0037C8  2E0D               	decfsz	___lldiv@counter,f,c
 10495  0037CA  D7E1               	goto	i2u573_40
 10496  0037CC                     i2l744:
 10497  0037CC  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10498  0037D0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10499  0037D4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10500  0037D8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10501  0037DC  0012               	return		;funcret
 10502  0037DE                     __end_of___lldiv:
 10503                           	opt stack 0
 10504                           pclatu	equ	0xFFB
 10505                           pclath	equ	0xFFA
 10506                           tblptru	equ	0xFF8
 10507                           tblptrh	equ	0xFF7
 10508                           tblptrl	equ	0xFF6
 10509                           tablat	equ	0xFF5
 10510                           prodh	equ	0xFF4
 10511                           prodl	equ	0xFF3
 10512                           intcon	equ	0xFF2
 10513                           postinc0	equ	0xFEE
 10514                           fsr0h	equ	0xFEA
 10515                           fsr0l	equ	0xFE9
 10516                           wreg	equ	0xFE8
 10517                           fsr1h	equ	0xFE2
 10518                           fsr1l	equ	0xFE1
 10519                           indf2	equ	0xFDF
 10520                           postinc2	equ	0xFDE
 10521                           postdec2	equ	0xFDD
 10522                           fsr2h	equ	0xFDA
 10523                           fsr2l	equ	0xFD9
 10524                           status	equ	0xFD8
 10525                           
 10526 ;; *************** function ___fltol *****************
 10527 ;; Defined at:
 10528 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;  f1              4   48[COMRAM] unsigned long 
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;  exp1            1   57[COMRAM] unsigned char 
 10533 ;;  sign1           1   56[COMRAM] unsigned char 
 10534 ;; Return value:  Size  Location     Type
 10535 ;;                  4   48[COMRAM] long 
 10536 ;; Registers used:
 10537 ;;		wreg, status,2, status,0
 10538 ;; Tracked objects:
 10539 ;;		On entry : 0/0
 10540 ;;		On exit  : 0/0
 10541 ;;		Unchanged: 0/0
 10542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10543 ;;      Params:         4       0       0       0       0       0       0       0       0
 10544 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10545 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10546 ;;      Totals:        10       0       0       0       0       0       0       0       0
 10547 ;;Total ram usage:       10 bytes
 10548 ;; Hardware stack levels used:    1
 10549 ;; This function calls:
 10550 ;;		Nothing
 10551 ;; This function is called by:
 10552 ;;		_sprintf
 10553 ;; This function uses a non-reentrant model
 10554 ;;
 10555                           
 10556                           	psect	text43
 10557  003524                     __ptext43:
 10558                           	opt stack 0
 10559  003524                     ___fltol:
 10560                           	opt stack 23
 10561                           
 10562                           ;incstack = 0
 10563  003524  3433               	rlcf	___fltol@f1+2,w,c
 10564  003526  3434               	rlcf	___fltol@f1+3,w,c
 10565  003528  6E3A               	movwf	___fltol@exp1,c
 10566  00352A  503A               	movf	___fltol@exp1,w,c
 10567  00352C  A4D8               	btfss	status,2,c
 10568  00352E  D009               	goto	i2l591
 10569  003530  0E00               	movlw	0
 10570  003532  6E31               	movwf	?___fltol,c
 10571  003534  0E00               	movlw	0
 10572  003536  6E32               	movwf	?___fltol+1,c
 10573  003538  0E00               	movlw	0
 10574  00353A  6E33               	movwf	?___fltol+2,c
 10575  00353C  0E00               	movlw	0
 10576  00353E  6E34               	movwf	?___fltol+3,c
 10577  003540  0012               	return	
 10578  003542                     i2l591:
 10579  003542  C031  F035         	movff	___fltol@f1,??___fltol
 10580  003546  C032  F036         	movff	___fltol@f1+1,??___fltol+1
 10581  00354A  C033  F037         	movff	___fltol@f1+2,??___fltol+2
 10582  00354E  C034  F038         	movff	___fltol@f1+3,??___fltol+3
 10583  003552  0E20               	movlw	32
 10584  003554  D005               	goto	i2u566_40
 10585  003556                     i2u566_45:
 10586  003556  90D8               	bcf	status,0,c
 10587  003558  3238               	rrcf	??___fltol+3,f,c
 10588  00355A  3237               	rrcf	??___fltol+2,f,c
 10589  00355C  3236               	rrcf	??___fltol+1,f,c
 10590  00355E  3235               	rrcf	??___fltol,f,c
 10591  003560                     i2u566_40:
 10592  003560  2EE8               	decfsz	wreg,f,c
 10593  003562  D7F9               	goto	i2u566_45
 10594  003564  5035               	movf	??___fltol,w,c
 10595  003566  6E39               	movwf	___fltol@sign1,c
 10596  003568  8E33               	bsf	___fltol@f1+2,7,c
 10597  00356A  0EFF               	movlw	255
 10598  00356C  1631               	andwf	___fltol@f1,f,c
 10599  00356E  0EFF               	movlw	255
 10600  003570  1632               	andwf	___fltol@f1+1,f,c
 10601  003572  0EFF               	movlw	255
 10602  003574  1633               	andwf	___fltol@f1+2,f,c
 10603  003576  0E00               	movlw	0
 10604  003578  1634               	andwf	___fltol@f1+3,f,c
 10605  00357A  0E96               	movlw	150
 10606  00357C  5E3A               	subwf	___fltol@exp1,f,c
 10607  00357E  AE3A               	btfss	___fltol@exp1,7,c
 10608  003580  D016               	goto	i2l593
 10609  003582  503A               	movf	___fltol@exp1,w,c
 10610  003584  0A80               	xorlw	128
 10611  003586  0F97               	addlw	151
 10612  003588  B0D8               	btfsc	status,0,c
 10613  00358A  D009               	goto	i2l594
 10614  00358C  0E00               	movlw	0
 10615  00358E  6E31               	movwf	?___fltol,c
 10616  003590  0E00               	movlw	0
 10617  003592  6E32               	movwf	?___fltol+1,c
 10618  003594  0E00               	movlw	0
 10619  003596  6E33               	movwf	?___fltol+2,c
 10620  003598  0E00               	movlw	0
 10621  00359A  6E34               	movwf	?___fltol+3,c
 10622  00359C  0012               	return	
 10623  00359E                     i2l594:
 10624  00359E  90D8               	bcf	status,0,c
 10625  0035A0  3234               	rrcf	___fltol@f1+3,f,c
 10626  0035A2  3233               	rrcf	___fltol@f1+2,f,c
 10627  0035A4  3232               	rrcf	___fltol@f1+1,f,c
 10628  0035A6  3231               	rrcf	___fltol@f1,f,c
 10629  0035A8  3E3A               	incfsz	___fltol@exp1,f,c
 10630  0035AA  D7F9               	goto	i2l594
 10631  0035AC  D015               	goto	i2u570_40
 10632  0035AE                     i2l593:
 10633  0035AE  0E1F               	movlw	31
 10634  0035B0  643A               	cpfsgt	___fltol@exp1,c
 10635  0035B2  D00F               	goto	i2l599
 10636  0035B4  0E00               	movlw	0
 10637  0035B6  6E31               	movwf	?___fltol,c
 10638  0035B8  0E00               	movlw	0
 10639  0035BA  6E32               	movwf	?___fltol+1,c
 10640  0035BC  0E00               	movlw	0
 10641  0035BE  6E33               	movwf	?___fltol+2,c
 10642  0035C0  0E00               	movlw	0
 10643  0035C2  6E34               	movwf	?___fltol+3,c
 10644  0035C4  0012               	return	
 10645  0035C6  90D8               	bcf	status,0,c
 10646  0035C8  3631               	rlcf	___fltol@f1,f,c
 10647  0035CA  3632               	rlcf	___fltol@f1+1,f,c
 10648  0035CC  3633               	rlcf	___fltol@f1+2,f,c
 10649  0035CE  3634               	rlcf	___fltol@f1+3,f,c
 10650  0035D0  063A               	decf	___fltol@exp1,f,c
 10651  0035D2                     i2l599:
 10652  0035D2  503A               	movf	___fltol@exp1,w,c
 10653  0035D4  A4D8               	btfss	status,2,c
 10654  0035D6  D7F7               	goto	i2l600
 10655  0035D8                     i2u570_40:
 10656  0035D8  5039               	movf	___fltol@sign1,w,c
 10657  0035DA  B4D8               	btfsc	status,2,c
 10658  0035DC  D008               	goto	i2l602
 10659  0035DE  1E34               	comf	___fltol@f1+3,f,c
 10660  0035E0  1E33               	comf	___fltol@f1+2,f,c
 10661  0035E2  1E32               	comf	___fltol@f1+1,f,c
 10662  0035E4  6C31               	negf	___fltol@f1,c
 10663  0035E6  0E00               	movlw	0
 10664  0035E8  2232               	addwfc	___fltol@f1+1,f,c
 10665  0035EA  2233               	addwfc	___fltol@f1+2,f,c
 10666  0035EC  2234               	addwfc	___fltol@f1+3,f,c
 10667  0035EE                     i2l602:
 10668  0035EE  C031  F031         	movff	___fltol@f1,?___fltol
 10669  0035F2  C032  F032         	movff	___fltol@f1+1,?___fltol+1
 10670  0035F6  C033  F033         	movff	___fltol@f1+2,?___fltol+2
 10671  0035FA  C034  F034         	movff	___fltol@f1+3,?___fltol+3
 10672  0035FE  0012               	return	
 10673  003600                     __end_of___fltol:
 10674                           	opt stack 0
 10675                           pclatu	equ	0xFFB
 10676                           pclath	equ	0xFFA
 10677                           tblptru	equ	0xFF8
 10678                           tblptrh	equ	0xFF7
 10679                           tblptrl	equ	0xFF6
 10680                           tablat	equ	0xFF5
 10681                           prodh	equ	0xFF4
 10682                           prodl	equ	0xFF3
 10683                           intcon	equ	0xFF2
 10684                           postinc0	equ	0xFEE
 10685                           fsr0h	equ	0xFEA
 10686                           fsr0l	equ	0xFE9
 10687                           wreg	equ	0xFE8
 10688                           fsr1h	equ	0xFE2
 10689                           fsr1l	equ	0xFE1
 10690                           indf2	equ	0xFDF
 10691                           postinc2	equ	0xFDE
 10692                           postdec2	equ	0xFDD
 10693                           fsr2h	equ	0xFDA
 10694                           fsr2l	equ	0xFD9
 10695                           status	equ	0xFD8
 10696                           
 10697 ;; *************** function ___flsub *****************
 10698 ;; Defined at:
 10699 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10700 ;; Parameters:    Size  Location     Type
 10701 ;;  b               4   72[COMRAM] long 
 10702 ;;  a               4   76[COMRAM] long 
 10703 ;; Auto vars:     Size  Location     Type
 10704 ;;		None
 10705 ;; Return value:  Size  Location     Type
 10706 ;;                  4   72[COMRAM] long 
 10707 ;; Registers used:
 10708 ;;		wreg, status,2, status,0, cstack
 10709 ;; Tracked objects:
 10710 ;;		On entry : 0/0
 10711 ;;		On exit  : 0/0
 10712 ;;		Unchanged: 0/0
 10713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10714 ;;      Params:         8       0       0       0       0       0       0       0       0
 10715 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10716 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10717 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10718 ;;Total ram usage:        8 bytes
 10719 ;; Hardware stack levels used:    1
 10720 ;; Hardware stack levels required when called:    1
 10721 ;; This function calls:
 10722 ;;		___fladd
 10723 ;; This function is called by:
 10724 ;;		_sprintf
 10725 ;; This function uses a non-reentrant model
 10726 ;;
 10727                           
 10728                           	psect	text44
 10729  00390C                     __ptext44:
 10730                           	opt stack 0
 10731  00390C                     ___flsub:
 10732                           	opt stack 22
 10733                           
 10734                           ;incstack = 0
 10735  00390C  0E00               	movlw	0
 10736  00390E  1A4D               	xorwf	___flsub@a,f,c
 10737  003910  0E00               	movlw	0
 10738  003912  1A4E               	xorwf	___flsub@a+1,f,c
 10739  003914  0E00               	movlw	0
 10740  003916  1A4F               	xorwf	___flsub@a+2,f,c
 10741  003918  0E80               	movlw	128
 10742  00391A  1A50               	xorwf	___flsub@a+3,f,c
 10743  00391C  C049  F035         	movff	___flsub@b,___fladd@b
 10744  003920  C04A  F036         	movff	___flsub@b+1,___fladd@b+1
 10745  003924  C04B  F037         	movff	___flsub@b+2,___fladd@b+2
 10746  003928  C04C  F038         	movff	___flsub@b+3,___fladd@b+3
 10747  00392C  C04D  F039         	movff	___flsub@a,___fladd@a
 10748  003930  C04E  F03A         	movff	___flsub@a+1,___fladd@a+1
 10749  003934  C04F  F03B         	movff	___flsub@a+2,___fladd@a+2
 10750  003938  C050  F03C         	movff	___flsub@a+3,___fladd@a+3
 10751  00393C  EC21  F00F         	call	___fladd	;wreg free
 10752  003940  C035  F049         	movff	?___fladd,?___flsub
 10753  003944  C036  F04A         	movff	?___fladd+1,?___flsub+1
 10754  003948  C037  F04B         	movff	?___fladd+2,?___flsub+2
 10755  00394C  C038  F04C         	movff	?___fladd+3,?___flsub+3
 10756  003950  0012               	return	
 10757  003952                     __end_of___flsub:
 10758                           	opt stack 0
 10759                           pclatu	equ	0xFFB
 10760                           pclath	equ	0xFFA
 10761                           tblptru	equ	0xFF8
 10762                           tblptrh	equ	0xFF7
 10763                           tblptrl	equ	0xFF6
 10764                           tablat	equ	0xFF5
 10765                           prodh	equ	0xFF4
 10766                           prodl	equ	0xFF3
 10767                           intcon	equ	0xFF2
 10768                           postinc0	equ	0xFEE
 10769                           fsr0h	equ	0xFEA
 10770                           fsr0l	equ	0xFE9
 10771                           wreg	equ	0xFE8
 10772                           fsr1h	equ	0xFE2
 10773                           fsr1l	equ	0xFE1
 10774                           indf2	equ	0xFDF
 10775                           postinc2	equ	0xFDE
 10776                           postdec2	equ	0xFDD
 10777                           fsr2h	equ	0xFDA
 10778                           fsr2l	equ	0xFD9
 10779                           status	equ	0xFD8
 10780                           
 10781 ;; *************** function ___fladd *****************
 10782 ;; Defined at:
 10783 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;  b               4   52[COMRAM] long 
 10786 ;;  a               4   56[COMRAM] long 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;  grs             1   71[COMRAM] unsigned char 
 10789 ;;  bexp            1   70[COMRAM] unsigned char 
 10790 ;;  aexp            1   69[COMRAM] unsigned char 
 10791 ;;  signs           1   68[COMRAM] unsigned char 
 10792 ;; Return value:  Size  Location     Type
 10793 ;;                  4   52[COMRAM] unsigned char 
 10794 ;; Registers used:
 10795 ;;		wreg, status,2, status,0
 10796 ;; Tracked objects:
 10797 ;;		On entry : 0/0
 10798 ;;		On exit  : 0/0
 10799 ;;		Unchanged: 0/0
 10800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10801 ;;      Params:         8       0       0       0       0       0       0       0       0
 10802 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10803 ;;      Temps:          8       0       0       0       0       0       0       0       0
 10804 ;;      Totals:        20       0       0       0       0       0       0       0       0
 10805 ;;Total ram usage:       20 bytes
 10806 ;; Hardware stack levels used:    1
 10807 ;; This function calls:
 10808 ;;		Nothing
 10809 ;; This function is called by:
 10810 ;;		_sprintf
 10811 ;;		___flsub
 10812 ;; This function uses a non-reentrant model
 10813 ;;
 10814                           
 10815                           	psect	text45
 10816  001E42                     __ptext45:
 10817                           	opt stack 0
 10818  001E42                     ___fladd:
 10819                           	opt stack 22
 10820                           
 10821                           ;incstack = 0
 10822  001E42  5038               	movf	___fladd@b+3,w,c
 10823  001E44  0B80               	andlw	128
 10824  001E46  6E45               	movwf	___fladd@signs,c
 10825  001E48  5038               	movf	___fladd@b+3,w,c
 10826  001E4A  2438               	addwf	___fladd@b+3,w,c
 10827  001E4C  6E47               	movwf	___fladd@bexp,c
 10828  001E4E  BE37               	btfsc	___fladd@b+2,7,c
 10829  001E50  8047               	bsf	___fladd@bexp,0,c
 10830  001E52  5047               	movf	___fladd@bexp,w,c
 10831  001E54  B4D8               	btfsc	status,2,c
 10832  001E56  D00D               	goto	i2l821
 10833  001E58  2847               	incf	___fladd@bexp,w,c
 10834  001E5A  A4D8               	btfss	status,2,c
 10835  001E5C  D008               	goto	i2l822
 10836  001E5E  0E00               	movlw	0
 10837  001E60  6E35               	movwf	___fladd@b,c
 10838  001E62  0E00               	movlw	0
 10839  001E64  6E36               	movwf	___fladd@b+1,c
 10840  001E66  0E00               	movlw	0
 10841  001E68  6E37               	movwf	___fladd@b+2,c
 10842  001E6A  0E00               	movlw	0
 10843  001E6C  6E38               	movwf	___fladd@b+3,c
 10844  001E6E                     i2l822:
 10845  001E6E  8E37               	bsf	___fladd@b+2,7,c
 10846  001E70  D006               	goto	L7
 10847  001E72                     i2l821:
 10848  001E72  0E00               	movlw	0
 10849  001E74  6E35               	movwf	___fladd@b,c
 10850  001E76  0E00               	movlw	0
 10851  001E78  6E36               	movwf	___fladd@b+1,c
 10852  001E7A  0E00               	movlw	0
 10853  001E7C  6E37               	movwf	___fladd@b+2,c
 10854  001E7E                     L7:
 10855  001E7E  0E00               	movlw	0
 10856  001E80  6E38               	movwf	___fladd@b+3,c
 10857  001E82  503C               	movf	___fladd@a+3,w,c
 10858  001E84  0B80               	andlw	128
 10859  001E86  6E46               	movwf	___fladd@aexp,c
 10860  001E88  5045               	movf	___fladd@signs,w,c
 10861  001E8A  1846               	xorwf	___fladd@aexp,w,c
 10862  001E8C  A4D8               	btfss	status,2,c
 10863  001E8E  8C45               	bsf	___fladd@signs,6,c
 10864  001E90  503C               	movf	___fladd@a+3,w,c
 10865  001E92  243C               	addwf	___fladd@a+3,w,c
 10866  001E94  6E46               	movwf	___fladd@aexp,c
 10867  001E96  BE3B               	btfsc	___fladd@a+2,7,c
 10868  001E98  8046               	bsf	___fladd@aexp,0,c
 10869  001E9A  5046               	movf	___fladd@aexp,w,c
 10870  001E9C  B4D8               	btfsc	status,2,c
 10871  001E9E  D00D               	goto	i2l826
 10872  001EA0  2846               	incf	___fladd@aexp,w,c
 10873  001EA2  A4D8               	btfss	status,2,c
 10874  001EA4  D008               	goto	i2l827
 10875  001EA6  0E00               	movlw	0
 10876  001EA8  6E39               	movwf	___fladd@a,c
 10877  001EAA  0E00               	movlw	0
 10878  001EAC  6E3A               	movwf	___fladd@a+1,c
 10879  001EAE  0E00               	movlw	0
 10880  001EB0  6E3B               	movwf	___fladd@a+2,c
 10881  001EB2  0E00               	movlw	0
 10882  001EB4  6E3C               	movwf	___fladd@a+3,c
 10883  001EB6                     i2l827:
 10884  001EB6  8E3B               	bsf	___fladd@a+2,7,c
 10885  001EB8  D006               	goto	L8
 10886  001EBA                     i2l826:
 10887  001EBA  0E00               	movlw	0
 10888  001EBC  6E39               	movwf	___fladd@a,c
 10889  001EBE  0E00               	movlw	0
 10890  001EC0  6E3A               	movwf	___fladd@a+1,c
 10891  001EC2  0E00               	movlw	0
 10892  001EC4  6E3B               	movwf	___fladd@a+2,c
 10893  001EC6                     L8:
 10894  001EC6  0E00               	movlw	0
 10895  001EC8  6E3C               	movwf	___fladd@a+3,c
 10896  001ECA  5047               	movf	___fladd@bexp,w,c
 10897  001ECC  5C46               	subwf	___fladd@aexp,w,c
 10898  001ECE  B0D8               	btfsc	status,0,c
 10899  001ED0  D022               	goto	i2l829
 10900  001ED2  AC45               	btfss	___fladd@signs,6,c
 10901  001ED4  D002               	goto	i2l830
 10902  001ED6  0E80               	movlw	128
 10903  001ED8  1A45               	xorwf	___fladd@signs,f,c
 10904  001EDA                     i2l830:
 10905  001EDA  C047  F048         	movff	___fladd@bexp,___fladd@grs
 10906  001EDE  C046  F047         	movff	___fladd@aexp,___fladd@bexp
 10907  001EE2  C048  F046         	movff	___fladd@grs,___fladd@aexp
 10908  001EE6  C035  F048         	movff	___fladd@b,___fladd@grs
 10909  001EEA  C039  F035         	movff	___fladd@a,___fladd@b
 10910  001EEE  C048  F039         	movff	___fladd@grs,___fladd@a
 10911  001EF2  C036  F048         	movff	___fladd@b+1,___fladd@grs
 10912  001EF6  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10913  001EFA  C048  F03A         	movff	___fladd@grs,___fladd@a+1
 10914  001EFE  C037  F048         	movff	___fladd@b+2,___fladd@grs
 10915  001F02  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10916  001F06  C048  F03B         	movff	___fladd@grs,___fladd@a+2
 10917  001F0A  C038  F048         	movff	___fladd@b+3,___fladd@grs
 10918  001F0E  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10919  001F12  C048  F03C         	movff	___fladd@grs,___fladd@a+3
 10920  001F16                     i2l829:
 10921  001F16  0E00               	movlw	0
 10922  001F18  6E48               	movwf	___fladd@grs,c
 10923  001F1A  5047               	movf	___fladd@bexp,w,c
 10924  001F1C  6E3D               	movwf	??___fladd& (0+255),c
 10925  001F1E  6A3E               	clrf	(??___fladd+1)& (0+255),c
 10926  001F20  1E3D               	comf	??___fladd,f,c
 10927  001F22  1E3E               	comf	??___fladd+1,f,c
 10928  001F24  4A3D               	infsnz	??___fladd,f,c
 10929  001F26  2A3E               	incf	??___fladd+1,f,c
 10930  001F28  5046               	movf	___fladd@aexp,w,c
 10931  001F2A  6E3F               	movwf	(??___fladd+2)& (0+255),c
 10932  001F2C  6A40               	clrf	(??___fladd+3)& (0+255),c
 10933  001F2E  503D               	movf	??___fladd,w,c
 10934  001F30  263F               	addwf	??___fladd+2,f,c
 10935  001F32  503E               	movf	??___fladd+1,w,c
 10936  001F34  2240               	addwfc	??___fladd+3,f,c
 10937  001F36  BE40               	btfsc	??___fladd+3,7,c
 10938  001F38  D02C               	goto	i2l833
 10939  001F3A  5040               	movf	??___fladd+3,w,c
 10940  001F3C  E104               	bnz	i2u383_40
 10941  001F3E  0E1A               	movlw	26
 10942  001F40  5C3F               	subwf	??___fladd+2,w,c
 10943  001F42  A0D8               	btfss	status,0,c
 10944  001F44  D026               	goto	i2l833
 10945  001F46                     i2u383_40:
 10946  001F46  5035               	movf	___fladd@b,w,c
 10947  001F48  1036               	iorwf	___fladd@b+1,w,c
 10948  001F4A  1037               	iorwf	___fladd@b+2,w,c
 10949  001F4C  1038               	iorwf	___fladd@b+3,w,c
 10950  001F4E  B4D8               	btfsc	status,2,c
 10951  001F50  D002               	goto	i2u384_40
 10952  001F52  0E01               	movlw	1
 10953  001F54  D001               	goto	i2u385_40
 10954  001F56                     i2u384_40:
 10955  001F56  0E00               	movlw	0
 10956  001F58                     i2u385_40:
 10957  001F58  6E48               	movwf	___fladd@grs,c
 10958  001F5A  0E00               	movlw	0
 10959  001F5C  6E35               	movwf	___fladd@b,c
 10960  001F5E  0E00               	movlw	0
 10961  001F60  6E36               	movwf	___fladd@b+1,c
 10962  001F62  0E00               	movlw	0
 10963  001F64  6E37               	movwf	___fladd@b+2,c
 10964  001F66  0E00               	movlw	0
 10965  001F68  6E38               	movwf	___fladd@b+3,c
 10966  001F6A  C046  F047         	movff	___fladd@aexp,___fladd@bexp
 10967  001F6E  D015               	goto	i2u388_40
 10968  001F70                     i2l834:
 10969  001F70  A048               	btfss	___fladd@grs,0,c
 10970  001F72  D005               	goto	i2l835
 10971  001F74  90D8               	bcf	status,0,c
 10972  001F76  3048               	rrcf	___fladd@grs,w,c
 10973  001F78  0901               	iorlw	1
 10974  001F7A  6E48               	movwf	___fladd@grs,c
 10975  001F7C  D002               	goto	i2l836
 10976  001F7E                     i2l835:
 10977  001F7E  90D8               	bcf	status,0,c
 10978  001F80  3248               	rrcf	___fladd@grs,f,c
 10979  001F82                     i2l836:
 10980  001F82  B035               	btfsc	___fladd@b,0,c
 10981  001F84  8E48               	bsf	___fladd@grs,7,c
 10982  001F86  3438               	rlcf	___fladd@b+3,w,c
 10983  001F88  3238               	rrcf	___fladd@b+3,f,c
 10984  001F8A  3237               	rrcf	___fladd@b+2,f,c
 10985  001F8C  3236               	rrcf	___fladd@b+1,f,c
 10986  001F8E  3235               	rrcf	___fladd@b,f,c
 10987  001F90  2A47               	incf	___fladd@bexp,f,c
 10988  001F92                     i2l833:
 10989  001F92  5046               	movf	___fladd@aexp,w,c
 10990  001F94  5C47               	subwf	___fladd@bexp,w,c
 10991  001F96  A0D8               	btfss	status,0,c
 10992  001F98  D7EB               	goto	i2l834
 10993  001F9A                     i2u388_40:
 10994  001F9A  BC45               	btfsc	___fladd@signs,6,c
 10995  001F9C  D029               	goto	i2l839
 10996  001F9E  5047               	movf	___fladd@bexp,w,c
 10997  001FA0  A4D8               	btfss	status,2,c
 10998  001FA2  D009               	goto	i2l840
 10999  001FA4  0E00               	movlw	0
 11000  001FA6  6E35               	movwf	?___fladd,c
 11001  001FA8  0E00               	movlw	0
 11002  001FAA  6E36               	movwf	?___fladd+1,c
 11003  001FAC  0E00               	movlw	0
 11004  001FAE  6E37               	movwf	?___fladd+2,c
 11005  001FB0  0E00               	movlw	0
 11006  001FB2  6E38               	movwf	?___fladd+3,c
 11007  001FB4  0012               	return	
 11008  001FB6                     i2l840:
 11009  001FB6  5039               	movf	___fladd@a,w,c
 11010  001FB8  2635               	addwf	___fladd@b,f,c
 11011  001FBA  503A               	movf	___fladd@a+1,w,c
 11012  001FBC  2236               	addwfc	___fladd@b+1,f,c
 11013  001FBE  503B               	movf	___fladd@a+2,w,c
 11014  001FC0  2237               	addwfc	___fladd@b+2,f,c
 11015  001FC2  503C               	movf	___fladd@a+3,w,c
 11016  001FC4  2238               	addwfc	___fladd@b+3,f,c
 11017  001FC6  A038               	btfss	___fladd@b+3,0,c
 11018  001FC8  D083               	goto	i2u401_40
 11019  001FCA  A048               	btfss	___fladd@grs,0,c
 11020  001FCC  D006               	goto	i2l843
 11021  001FCE  90D8               	bcf	status,0,c
 11022  001FD0  3248               	rrcf	___fladd@grs,f,c
 11023  001FD2  5048               	movf	___fladd@grs,w,c
 11024  001FD4  0901               	iorlw	1
 11025  001FD6  6E48               	movwf	___fladd@grs,c
 11026  001FD8  D002               	goto	i2l844
 11027  001FDA                     i2l843:
 11028  001FDA  90D8               	bcf	status,0,c
 11029  001FDC  3248               	rrcf	___fladd@grs,f,c
 11030  001FDE                     i2l844:
 11031  001FDE  B035               	btfsc	___fladd@b,0,c
 11032  001FE0  8E48               	bsf	___fladd@grs,7,c
 11033  001FE2  3438               	rlcf	___fladd@b+3,w,c
 11034  001FE4  3238               	rrcf	___fladd@b+3,f,c
 11035  001FE6  3237               	rrcf	___fladd@b+2,f,c
 11036  001FE8  3236               	rrcf	___fladd@b+1,f,c
 11037  001FEA  3235               	rrcf	___fladd@b,f,c
 11038  001FEC  2A47               	incf	___fladd@bexp,f,c
 11039  001FEE  D070               	goto	i2u401_40
 11040  001FF0                     i2l839:
 11041  001FF0  5039               	movf	___fladd@a,w,c
 11042  001FF2  5C35               	subwf	___fladd@b,w,c
 11043  001FF4  503A               	movf	___fladd@a+1,w,c
 11044  001FF6  5836               	subwfb	___fladd@b+1,w,c
 11045  001FF8  503B               	movf	___fladd@a+2,w,c
 11046  001FFA  5837               	subwfb	___fladd@b+2,w,c
 11047  001FFC  5038               	movf	___fladd@b+3,w,c
 11048  001FFE  0A80               	xorlw	128
 11049  002000  6E3D               	movwf	??___fladd& (0+255),c
 11050  002002  503C               	movf	___fladd@a+3,w,c
 11051  002004  0A80               	xorlw	128
 11052  002006  583D               	subwfb	??___fladd& (0+255),w,c
 11053  002008  B0D8               	btfsc	status,0,c
 11054  00200A  D036               	goto	i2l847
 11055  00200C  C035  F03D         	movff	___fladd@b,??___fladd
 11056  002010  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 11057  002014  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 11058  002018  C038  F040         	movff	___fladd@b+3,??___fladd+3
 11059  00201C  1E3D               	comf	??___fladd,f,c
 11060  00201E  1E3E               	comf	??___fladd+1,f,c
 11061  002020  1E3F               	comf	??___fladd+2,f,c
 11062  002022  1E40               	comf	??___fladd+3,f,c
 11063  002024  2A3D               	incf	??___fladd,f,c
 11064  002026  0E00               	movlw	0
 11065  002028  223E               	addwfc	??___fladd+1,f,c
 11066  00202A  223F               	addwfc	??___fladd+2,f,c
 11067  00202C  2240               	addwfc	??___fladd+3,f,c
 11068  00202E  5039               	movf	___fladd@a,w,c
 11069  002030  243D               	addwf	??___fladd,w,c
 11070  002032  6E41               	movwf	(??___fladd+4)& (0+255),c
 11071  002034  503A               	movf	___fladd@a+1,w,c
 11072  002036  203E               	addwfc	??___fladd+1,w,c
 11073  002038  6E42               	movwf	(??___fladd+5)& (0+255),c
 11074  00203A  503B               	movf	___fladd@a+2,w,c
 11075  00203C  203F               	addwfc	??___fladd+2,w,c
 11076  00203E  6E43               	movwf	(??___fladd+6)& (0+255),c
 11077  002040  503C               	movf	___fladd@a+3,w,c
 11078  002042  2040               	addwfc	??___fladd+3,w,c
 11079  002044  6E44               	movwf	(??___fladd+7)& (0+255),c
 11080  002046  0EFF               	movlw	255
 11081  002048  2441               	addwf	??___fladd+4,w,c
 11082  00204A  6E35               	movwf	___fladd@b,c
 11083  00204C  0EFF               	movlw	255
 11084  00204E  2042               	addwfc	??___fladd+5,w,c
 11085  002050  6E36               	movwf	___fladd@b+1,c
 11086  002052  0EFF               	movlw	255
 11087  002054  2043               	addwfc	??___fladd+6,w,c
 11088  002056  6E37               	movwf	___fladd@b+2,c
 11089  002058  0EFF               	movlw	255
 11090  00205A  2044               	addwfc	??___fladd+7,w,c
 11091  00205C  6E38               	movwf	___fladd@b+3,c
 11092  00205E  0E80               	movlw	128
 11093  002060  1A45               	xorwf	___fladd@signs,f,c
 11094  002062  6C48               	negf	___fladd@grs,c
 11095  002064  5048               	movf	___fladd@grs,w,c
 11096  002066  A4D8               	btfss	status,2,c
 11097  002068  D00F               	goto	i2l849
 11098  00206A  0E01               	movlw	1
 11099  00206C  2635               	addwf	___fladd@b,f,c
 11100  00206E  0E00               	movlw	0
 11101  002070  2236               	addwfc	___fladd@b+1,f,c
 11102  002072  2237               	addwfc	___fladd@b+2,f,c
 11103  002074  2238               	addwfc	___fladd@b+3,f,c
 11104  002076  D008               	goto	i2l849
 11105  002078                     i2l847:
 11106  002078  5039               	movf	___fladd@a,w,c
 11107  00207A  5E35               	subwf	___fladd@b,f,c
 11108  00207C  503A               	movf	___fladd@a+1,w,c
 11109  00207E  5A36               	subwfb	___fladd@b+1,f,c
 11110  002080  503B               	movf	___fladd@a+2,w,c
 11111  002082  5A37               	subwfb	___fladd@b+2,f,c
 11112  002084  503C               	movf	___fladd@a+3,w,c
 11113  002086  5A38               	subwfb	___fladd@b+3,f,c
 11114  002088                     i2l849:
 11115  002088  5035               	movf	___fladd@b,w,c
 11116  00208A  1036               	iorwf	___fladd@b+1,w,c
 11117  00208C  1037               	iorwf	___fladd@b+2,w,c
 11118  00208E  1038               	iorwf	___fladd@b+3,w,c
 11119  002090  A4D8               	btfss	status,2,c
 11120  002092  D01C               	goto	i2l856
 11121  002094  5048               	movf	___fladd@grs,w,c
 11122  002096  A4D8               	btfss	status,2,c
 11123  002098  D019               	goto	i2l856
 11124  00209A  0E00               	movlw	0
 11125  00209C  6E35               	movwf	?___fladd,c
 11126  00209E  0E00               	movlw	0
 11127  0020A0  6E36               	movwf	?___fladd+1,c
 11128  0020A2  0E00               	movlw	0
 11129  0020A4  6E37               	movwf	?___fladd+2,c
 11130  0020A6  0E00               	movlw	0
 11131  0020A8  6E38               	movwf	?___fladd+3,c
 11132  0020AA  0012               	return	
 11133  0020AC  90D8               	bcf	status,0,c
 11134  0020AE  3635               	rlcf	___fladd@b,f,c
 11135  0020B0  3636               	rlcf	___fladd@b+1,f,c
 11136  0020B2  3637               	rlcf	___fladd@b+2,f,c
 11137  0020B4  3638               	rlcf	___fladd@b+3,f,c
 11138  0020B6  BE48               	btfsc	___fladd@grs,7,c
 11139  0020B8  8035               	bsf	___fladd@b,0,c
 11140  0020BA  A048               	btfss	___fladd@grs,0,c
 11141  0020BC  D002               	goto	i2l854
 11142  0020BE  80D8               	bsf	status,0,c
 11143  0020C0  D001               	goto	L9
 11144  0020C2                     i2l854:
 11145  0020C2  90D8               	bcf	status,0,c
 11146  0020C4                     L9:
 11147  0020C4  3648               	rlcf	___fladd@grs,f,c
 11148  0020C6  5047               	movf	___fladd@bexp,w,c
 11149  0020C8  A4D8               	btfss	status,2,c
 11150  0020CA  0647               	decf	___fladd@bexp,f,c
 11151  0020CC                     i2l856:
 11152  0020CC  AE37               	btfss	___fladd@b+2,7,c
 11153  0020CE  D7EE               	goto	i2l852
 11154  0020D0                     i2u401_40:
 11155  0020D0  0E00               	movlw	0
 11156  0020D2  6E46               	movwf	___fladd@aexp,c
 11157  0020D4  AE48               	btfss	___fladd@grs,7,c
 11158  0020D6  D00A               	goto	i2l861
 11159  0020D8  C048  F03D         	movff	___fladd@grs,??___fladd
 11160  0020DC  0E7F               	movlw	127
 11161  0020DE  163D               	andwf	??___fladd,f,c
 11162  0020E0  A4D8               	btfss	status,2,c
 11163  0020E2  D002               	goto	i2u404_40
 11164  0020E4  A035               	btfss	___fladd@b,0,c
 11165  0020E6  D002               	goto	i2l861
 11166  0020E8                     i2u404_40:
 11167  0020E8  0E01               	movlw	1
 11168  0020EA  6E46               	movwf	___fladd@aexp,c
 11169  0020EC                     i2l861:
 11170  0020EC  5046               	movf	___fladd@aexp,w,c
 11171  0020EE  B4D8               	btfsc	status,2,c
 11172  0020F0  D020               	goto	i2l864
 11173  0020F2  0E01               	movlw	1
 11174  0020F4  2635               	addwf	___fladd@b,f,c
 11175  0020F6  0E00               	movlw	0
 11176  0020F8  2236               	addwfc	___fladd@b+1,f,c
 11177  0020FA  2237               	addwfc	___fladd@b+2,f,c
 11178  0020FC  2238               	addwfc	___fladd@b+3,f,c
 11179  0020FE  A038               	btfss	___fladd@b+3,0,c
 11180  002100  D018               	goto	i2l864
 11181  002102  C035  F03D         	movff	___fladd@b,??___fladd
 11182  002106  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 11183  00210A  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 11184  00210E  C038  F040         	movff	___fladd@b+3,??___fladd+3
 11185  002112  3440               	rlcf	??___fladd+3,w,c
 11186  002114  3240               	rrcf	??___fladd+3,f,c
 11187  002116  323F               	rrcf	??___fladd+2,f,c
 11188  002118  323E               	rrcf	??___fladd+1,f,c
 11189  00211A  323D               	rrcf	??___fladd,f,c
 11190  00211C  C03D  F035         	movff	??___fladd,___fladd@b
 11191  002120  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 11192  002124  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 11193  002128  C040  F038         	movff	??___fladd+3,___fladd@b+3
 11194  00212C  2847               	incf	___fladd@bexp,w,c
 11195  00212E  A4D8               	btfss	status,2,c
 11196  002130  2A47               	incf	___fladd@bexp,f,c
 11197  002132                     i2l864:
 11198  002132  2847               	incf	___fladd@bexp,w,c
 11199  002134  B4D8               	btfsc	status,2,c
 11200  002136  D003               	goto	i2u409_40
 11201  002138  5047               	movf	___fladd@bexp,w,c
 11202  00213A  A4D8               	btfss	status,2,c
 11203  00213C  D00D               	goto	i2l868
 11204  00213E                     i2u409_40:
 11205  00213E  0E00               	movlw	0
 11206  002140  6E35               	movwf	___fladd@b,c
 11207  002142  0E00               	movlw	0
 11208  002144  6E36               	movwf	___fladd@b+1,c
 11209  002146  0E00               	movlw	0
 11210  002148  6E37               	movwf	___fladd@b+2,c
 11211  00214A  0E00               	movlw	0
 11212  00214C  6E38               	movwf	___fladd@b+3,c
 11213  00214E  5047               	movf	___fladd@bexp,w,c
 11214  002150  A4D8               	btfss	status,2,c
 11215  002152  D002               	goto	i2l868
 11216  002154  0E00               	movlw	0
 11217  002156  6E45               	movwf	___fladd@signs,c
 11218  002158                     i2l868:
 11219  002158  A047               	btfss	___fladd@bexp,0,c
 11220  00215A  D002               	goto	i2l869
 11221  00215C  8E37               	bsf	___fladd@b+2,7,c
 11222  00215E  D001               	goto	i2l870
 11223  002160                     i2l869:
 11224  002160  9E37               	bcf	___fladd@b+2,7,c
 11225  002162                     i2l870:
 11226  002162  90D8               	bcf	status,0,c
 11227  002164  3047               	rrcf	___fladd@bexp,w,c
 11228  002166  6E38               	movwf	___fladd@b+3,c
 11229  002168  BE45               	btfsc	___fladd@signs,7,c
 11230  00216A  8E38               	bsf	___fladd@b+3,7,c
 11231  00216C  C035  F035         	movff	___fladd@b,?___fladd
 11232  002170  C036  F036         	movff	___fladd@b+1,?___fladd+1
 11233  002174  C037  F037         	movff	___fladd@b+2,?___fladd+2
 11234  002178  C038  F038         	movff	___fladd@b+3,?___fladd+3
 11235  00217C  0012               	return	
 11236  00217E                     __end_of___fladd:
 11237                           	opt stack 0
 11238                           pclatu	equ	0xFFB
 11239                           pclath	equ	0xFFA
 11240                           tblptru	equ	0xFF8
 11241                           tblptrh	equ	0xFF7
 11242                           tblptrl	equ	0xFF6
 11243                           tablat	equ	0xFF5
 11244                           prodh	equ	0xFF4
 11245                           prodl	equ	0xFF3
 11246                           intcon	equ	0xFF2
 11247                           postinc0	equ	0xFEE
 11248                           fsr0h	equ	0xFEA
 11249                           fsr0l	equ	0xFE9
 11250                           wreg	equ	0xFE8
 11251                           fsr1h	equ	0xFE2
 11252                           fsr1l	equ	0xFE1
 11253                           indf2	equ	0xFDF
 11254                           postinc2	equ	0xFDE
 11255                           postdec2	equ	0xFDD
 11256                           fsr2h	equ	0xFDA
 11257                           fsr2l	equ	0xFD9
 11258                           status	equ	0xFD8
 11259                           pclatu	equ	0xFFB
 11260                           pclath	equ	0xFFA
 11261                           tblptru	equ	0xFF8
 11262                           tblptrh	equ	0xFF7
 11263                           tblptrl	equ	0xFF6
 11264                           tablat	equ	0xFF5
 11265                           prodh	equ	0xFF4
 11266                           prodl	equ	0xFF3
 11267                           intcon	equ	0xFF2
 11268                           postinc0	equ	0xFEE
 11269                           fsr0h	equ	0xFEA
 11270                           fsr0l	equ	0xFE9
 11271                           wreg	equ	0xFE8
 11272                           fsr1h	equ	0xFE2
 11273                           fsr1l	equ	0xFE1
 11274                           indf2	equ	0xFDF
 11275                           postinc2	equ	0xFDE
 11276                           postdec2	equ	0xFDD
 11277                           fsr2h	equ	0xFDA
 11278                           fsr2l	equ	0xFD9
 11279                           status	equ	0xFD8
 11280                           
 11281                           	psect	rparam
 11282  0000                     pclatu	equ	0xFFB
 11283                           pclath	equ	0xFFA
 11284                           tblptru	equ	0xFF8
 11285                           tblptrh	equ	0xFF7
 11286                           tblptrl	equ	0xFF6
 11287                           tablat	equ	0xFF5
 11288                           prodh	equ	0xFF4
 11289                           prodl	equ	0xFF3
 11290                           intcon	equ	0xFF2
 11291                           postinc0	equ	0xFEE
 11292                           fsr0h	equ	0xFEA
 11293                           fsr0l	equ	0xFE9
 11294                           wreg	equ	0xFE8
 11295                           fsr1h	equ	0xFE2
 11296                           fsr1l	equ	0xFE1
 11297                           indf2	equ	0xFDF
 11298                           postinc2	equ	0xFDE
 11299                           postdec2	equ	0xFDD
 11300                           fsr2h	equ	0xFDA
 11301                           fsr2l	equ	0xFD9
 11302                           status	equ	0xFD8
 11303                           
 11304                           	psect	temp
 11305  00005E                     btemp:
 11306                           	opt stack 0
 11307  00005E                     	ds	1
 11308  0000                     int$flags	set	btemp
 11309  0000                     wtemp6	set	btemp+1
 11310                           pclatu	equ	0xFFB
 11311                           pclath	equ	0xFFA
 11312                           tblptru	equ	0xFF8
 11313                           tblptrh	equ	0xFF7
 11314                           tblptrl	equ	0xFF6
 11315                           tablat	equ	0xFF5
 11316                           prodh	equ	0xFF4
 11317                           prodl	equ	0xFF3
 11318                           intcon	equ	0xFF2
 11319                           postinc0	equ	0xFEE
 11320                           fsr0h	equ	0xFEA
 11321                           fsr0l	equ	0xFE9
 11322                           wreg	equ	0xFE8
 11323                           fsr1h	equ	0xFE2
 11324                           fsr1l	equ	0xFE1
 11325                           indf2	equ	0xFDF
 11326                           postinc2	equ	0xFDE
 11327                           postdec2	equ	0xFDD
 11328                           fsr2h	equ	0xFDA
 11329                           fsr2l	equ	0xFD9
 11330                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    144
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      93
    BANK0           160     60     120
    BANK1           256     45      73
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    atof@s	PTR const unsigned char  size(2) Largest target is 25
		 -> whole(BANK1[25]), 

    strtod@s	PTR const unsigned char  size(2) Largest target is 25
		 -> whole(BANK1[25]), 

    strtod@res	PTR PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 12
		 -> ISR@arra(BANK0[12]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 12
		 -> ISR@arra(BANK0[12]), GetData@y(BANK1[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_sprintf
    i2_lcd_msg->i2_lcd_dwr
    i2_lcd_dwr->i2_lcd_lat
    _sprintf->___flsub
    _scale->i2___flmul
    _fround->i2___flmul
    i2___flmul->___awdiv
    ___awdiv->___awmod
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_sprintf

Critical Paths under _main in BANK1

    _main->_atof
    _lcd_reset->_lcd_cmd
    _lcd_init->_lcd_cmd
    _lcd_cmd_hf->_lcd_lat
    _lcd_cmd->_lcd_lat
    _atof->_strtod
    _strtod->___fldiv
    _strtod->___flmul
    _GetData->_GetKey
    _lcd_msg->_lcd_dwr
    _lcd_dwr->_lcd_lat
    _GetKey->_KeyRelease
    _KeyRelease->_TaraKey
    _TaraKey->_KeyOther

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14877
                                             41 BANK1      4     4      0
                            _GetData
                             _GetKey
                               _Send
                          _UART_Init
                               _atof
                            _lcd_cmd
                           _lcd_init
                          _lcd_reset
 ---------------------------------------------------------------------------------
 (1) _lcd_reset                                            0     0      0      62
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      93
                            _lcd_cmd
                         _lcd_cmd_hf
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd_hf                                           1     1      0      31
                                              1 BANK1      1     1      0
                            _lcd_lat
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      62
                                              1 BANK1      2     2      0
                            _lcd_lat
 ---------------------------------------------------------------------------------
 (1) _atof                                                 4     0      4   11089
                                             37 BANK1      4     0      4
                             _strtod
 ---------------------------------------------------------------------------------
 (2) _strtod                                              12     8      4   10878
                                             25 BANK1     12     8      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                             ___lmul
                           ___xxtofl
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              3     3      0     130
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     621
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     456
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     210
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4314
                                              0 BANK1     25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     956
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2115
                                              0 BANK1     25    17      8
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send                                                 1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _GetData                                              8     8      0    2143
                                              6 BANK1      8     8      0
                             _GetKey
                            _lcd_msg
 ---------------------------------------------------------------------------------
 (2) _lcd_msg                                              2     0      2     362
                                              3 BANK1      2     0      2
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (3) _lcd_dwr                                              2     2      0      62
                                              1 BANK1      2     2      0
                            _lcd_lat
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _GetKey                                               1     1      0    1125
                                              5 BANK1      1     1      0
                         _KeyRelease
                            _TaraKey
 ---------------------------------------------------------------------------------
 (2) _KeyRelease                                           2     2      0     564
                                              3 BANK1      2     2      0
                            _TaraKey
 ---------------------------------------------------------------------------------
 (2) _TaraKey                                              1     1      0     496
                                              2 BANK1      1     1      0
                           _KeyOther
 ---------------------------------------------------------------------------------
 (3) _KeyOther                                             2     2      0     496
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 35    35      0   30685
                                             25 BANK0     35    35      0
                            _sprintf
                          i2_lcd_msg
 ---------------------------------------------------------------------------------
 (7) i2_lcd_msg                                            2     0      2     162
                                              3 COMRAM     2     0      2
                          i2_lcd_dwr
 ---------------------------------------------------------------------------------
 (8) i2_lcd_dwr                                            2     2      0      62
                                              1 COMRAM     2     2      0
                          i2_lcd_lat
 ---------------------------------------------------------------------------------
 (9) i2_lcd_lat                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             43    35      8   30216
                                             80 COMRAM    10     2      8
                                              0 BANK0     25    25      0
                            ___awdiv
                            ___fladd
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
                           i2___flge
                          i2___flmul
                          i2___flneg
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (8) i2___xxtofl                                          14    10      4     348
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (8) i2___flneg                                            4     0      4      71
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) i2___flge                                            12     4      8     338
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) _scale                                                9     5      4    7205
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (8) _fround                                              13     9      4    6926
                                             39 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                          i2___flmul
 ---------------------------------------------------------------------------------
 (8) i2___flmul                                           25    17      8    3092
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4    1664
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4    1820
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (8) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                              _scale (ARG)
                          i2___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2737
                                             72 COMRAM     8     0      8
                            ___fladd
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             20    12      8    2414
                                             52 COMRAM    20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetData
     _GetKey
       _KeyRelease
         _TaraKey
           _KeyOther
       _TaraKey
         _KeyOther
     _lcd_msg
       _lcd_dwr
         _lcd_lat
   _GetKey
     _KeyRelease
       _TaraKey
         _KeyOther
     _TaraKey
       _KeyOther
   _Send
   _UART_Init
   _atof
     _strtod
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___lmul
       ___xxtofl
       _isdigit
       _isspace
   _lcd_cmd
     _lcd_lat
   _lcd_init
     _lcd_cmd
       _lcd_lat
     _lcd_cmd_hf
       _lcd_lat
   _lcd_reset
     _lcd_cmd
       _lcd_lat

 _ISR (ROOT)
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         i2___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___flsub
       ___fladd
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           i2___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       i2___xxtofl (ARG)
     ___fltol
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         i2___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       i2___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       i2___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       i2___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     i2___flge
     i2___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     i2___flneg
     i2___xxtofl
   i2_lcd_msg
     i2_lcd_dwr
       i2_lcd_lat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2D      49       7       28.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3C      78       5       75.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11E      20        0.0%
DATA                 0      0     11E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Feb 05 12:23:02 2020

           ___fldiv@aexp 0118             ___fldiv@bexp 0117                        _h 0085  
           ___fldiv@sign 010C              __CFG_CP0$ON 000000              __CFG_CP1$ON 000000  
            lcd_cmd_hf@x 0101                       l95 3616                       l88 3C34  
           ___awdiv@sign 000C              __CFG_BOR$ON 000000      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000                      l101 26C4                      l102 2752  
                    l111 28F6                      l200 2CA2                      l201 2CB4  
                    l202 2CC6                      l106 271C                      l107 2726  
                    l132 3B28                      l133 3B14                      l170 2A0C  
                    l171 2A26                      l163 2956                      l180 2AFC  
                    l172 2A5A                      l500 1356                      l181 2B0C  
                    l173 2A74                      l165 2970                      l190 2BA0  
                    l174 2A8E                      l166 298A                      l158 3BF6  
                    l191 2BCC                      l183 2B36                      l175 2AA8  
                    l167 29A4                      l192 2BDE                      l176 2ADC  
                    l168 29D8                      l193 2BF0                      l177 2AF6  
                    l169 29F2                      l194 2C02                      l186 2B6A  
                    l178 2B1C                      l450 0F3C                      l195 2C2E  
                    l179 2B14                      l451 0F36                      l196 2C40  
                    l188 2B7C                      l460 1024                      l197 2C52  
                    l189 2B8E                      l461 101A                      l453 0F66  
                    l198 2C64                      l199 2C90                      l295 38C6  
                    l471 1076                      l455 0F72                      l296 38DA  
                    l464 101E                      l456 0F8A                      l561 31FE  
                    l713 3AB8                      l481 1250                      l457 0FA2  
                    l562 3232                      l482 11B4                      l563 3270  
                    l483 117A                      l564 32AE                      l708 3B9C  
                    l492 1296                      l476 1108                      l468 1062  
                    l493 125C                      l485 11F8                      l477 110E  
                    l902 2378                      l486 11C0                      l478 112C  
                    l495 12D6                      l479 1172                      l904 23BC  
                    l912 17D2                      l568 39A0                      l496 129E  
                    l905 23E0                      l913 17CE                      l489 123E  
                    l906 240A                      l930 1A38                      l914 17E2  
                    l498 132E                      l907 2416                      l923 1A00  
                    l499 131C                      l908 2418                      l932 1A7C  
                    l924 19E2                      l916 1812                      l940 2D0C  
                    l933 1A9A                      l917 180E                      l941 2D1C  
                    l918 1822                      l950 2DBC                      l942 2D3A  
                    l935 1ABE                      l919 1840                      l951 2DB0  
                    l936 1ADC                      l944 2D4C                      l945 2D40  
                    l890 22E4                      l882 21F0                      l883 21EC  
                    l955 2DDA                      l947 2D8A                      l892 230A  
                    l956 2E0C                      l948 2D72                      l885 2236  
                    l878 21B0                      l895 2340                      l887 225E  
                    l879 21AC                      l896 2322                      l888 230C  
                    l889 22BC             __CFG_CPB$OFF 000000                      _ISR 0008  
                    _ttt 0060             ___awmod@sign 0006               i2___xxtofl 2E1E  
                    prod 000FF3                      wreg 000FE8              i2___flmul@a 0013  
            i2___flmul@b 000F             ___flmul@aexp 010D             ___flmul@bexp 0112  
           ___flmul@sign 010C             ___flmul@temp 0117             ___flmul@prod 0113  
           __CFG_LVP$OFF 000000                     ?_ISR 0001                     ISR@a 00D3  
           ___fltol@exp1 003A             __CFG_WDT$OFF 000000                     l5256 240A  
                   l4882 32E6                     STR_1 0891                     u7100 2374  
                   u7130 23CA                     u7140 23EE                     u7230 182E  
                   u8200 2708                     u7320 1A8A                     u7240 19A4  
                   u7330 1AA8                     u7245 199A                     u8320 28D0  
                   u7520 2DC6                     u7290 1A34                     u7370 3AB4  
                   u8280 2828                     u8707 29CA                     u8627 3BE6  
                   u8717 29E4                     u8637 39F8                     u7950 104A  
                   u7870 0F6E                     u8807 2ACE                     u8727 29FE  
                   u8647 2932                     u8817 2AE8                     u8737 2A18  
                   u8657 2948                     u7970 1072                     u8827 2B28  
                   u8747 2A36                     u8667 2962                     u8837 2B4E  
                   u8757 2A4C                     u8677 297C                     u8847 2BB0  
                   u8767 2A66                     u8687 2996                     u8857 2C12  
                   u8777 2A80                     u8697 29B4                     u8867 2C74  
                   u8787 2A9A                     u8797 2AB8             __CFG_WDTPS$4 000000  
           __CFG_PWRT$ON 000000             i2___flge@ff1 0001             i2___flge@ff2 0005  
                   _Send 3C2C                     _atof 3AEA                     _main 3600  
                   _pass 005B                     _proc 012D                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 005E             i2___flneg@f1 0001                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
        ___fldiv@new_exp 0111          __end_of_GetData 2922             _sprintf$1290 009C  
           ___param_bank 000000              KeyOther@key 0101                    ??_ISR 00B5  
        __end_of_TaraKey 2B3A               i2lcd_dwr@x 0003               i2lcd_msg@c 0004  
                  ISR@al 00D4                    ?_Send 0001            ___fltol@sign1 0039  
                  ?_atof 0125          __end_of___fladd 217E                    ?_main 0001  
        __end_of___fldiv 2434          __end_of___awdiv 375C          __end_of___flneg 39B2  
                  _BRG16 007DC3          __end_of___awmod 384E          __end_of___flmul 1AF2  
        __end_of___flsub 3952          __end_of___fltol 3600          __end_of___lldiv 37DE  
        ___awdiv@divisor 0009          __end_of___llmod 38B4                    i2l132 3B72  
                  i2l133 3B60                    i2l222 2670                    i2l230 16C2  
                  i2l232 1776                    i2l144 34D8                    i2l225 1588  
                  i2l241 08C2                    i2l226 14AA                    i2l250 0A5E  
                  i2l242 08E8                    i2l219 2594                    i2l251 0AAA  
                  i2l244 0ED0                    i2l252 0B90                    i2l236 08A2  
                  i2l229 155E                    i2l261 0C08                    i2l245 0946  
                  i2l237 08B8                    i2l270 0D02                    i2l238 08C6  
                  i2l255 0B28                    i2l247 09B2                    i2l600 35C6  
                  i2l520 3744                    i2l512 36EC                    i2l272 0D3C  
                  i2l248 0A30                    i2l521 3752                    i2l513 36FC  
                  i2l281 0EF4                    i2l273 0D40                    i2l602 35EE  
                  i2l274 0D62                    i2l266 0CF8                    i2l515 371A  
                  i2l275 0EA4                    i2l267 0C64                    i2l516 3712  
                  i2l532 382C                    i2l276 0DC2                    i2l533 3836  
                  i2l525 37F2                    i2l269 0D18                    i2l550 318C  
                  i2l534 3844                    i2l526 37FE                    i2l278 0EC6  
                  i2l551 317C                    i2l519 373A                    i2l279 0EB0  
                  i2l544 30BE                    i2l528 3814                    i2l529 380C  
                  i2l561 331E                    i2l546 30DC                    i2l650 2FC6  
                  i2l562 3352                    i2l547 311E                    i2l651 3000  
                  i2l563 3390                    i2l740 377E                    i2l556 31B0  
                  i2l548 314E                    i2l660 3088                    i2l652 3028  
                  i2l564 33CE                    i2l821 1E72                    i2l557 31A4  
                  i2l661 307C                    i2l830 1EDA                    i2l822 1E6E  
                  i2l750 3860                    i2l654 3064                    i2l591 3542  
                  i2l743 37BE                    i2l655 3054                    i2l840 1FB6  
                  i2l744 37CC                    i2l648 2F9A                    i2l912 1B22  
                  i2l568 3A2C                    i2l833 1F92                    i2l593 35AE  
                  i2l753 3894                    i2l913 1B1E                    i2l834 1F70  
                  i2l826 1EBA                    i2l594 359E                    i2l754 38A2  
                  i2l930 1D88                    i2l914 1B32                    i2l843 1FDA  
                  i2l835 1F7E                    i2l827 1EB6                    i2l739 378A  
                  i2l923 1D50                    i2l852 20AC                    i2l844 1FDE  
                  i2l836 1F82                    i2l932 1DCC                    i2l924 1D32  
                  i2l916 1B62                    i2l940 2E5C                    i2l861 20EC  
                  i2l829 1F16                    i2l749 386C                    i2l933 1DEA  
                  i2l917 1B5E                    i2l941 2E6C                    i2l870 2162  
                  i2l854 20C2                    i2l918 1B72                    i2l950 2F0C  
                  i2l942 2E8A                    i2l847 2078                    i2l839 1FF0  
                  i2l599 35D2                    i2l935 1E0E                    i2l919 1B90  
                  i2l951 2F00                    i2l864 2132                    i2l856 20CC  
                  i2l936 1E2C                    i2l944 2E9C                    i2l849 2088  
                  i2l945 2E90                    i2l955 2F2A                    i2l947 2EDA  
                  i2l868 2158                    i2l956 2F5C                    i2l948 2EC2  
        ___awdiv@counter 000B                    i2l869 2160                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _PORTD 000F83                    _TRISB 000F93  
                  _TRISD 000F95                    _TXREG 000FAD            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000      ___lmul@multiplicand 0104           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000          __end_of_lcd_cmd 3982  
     __size_of_UART_Init 0020          __end_of_lcd_lat 3BF2          __end_of_lcd_dwr 39E2  
        __end_of_lcd_msg 3B38            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _flag1 012F                    _flag2 012E  
                  _flag3 005D          __end_of_dpowers 0891                    _scale 1368  
        __end_of_isdigit 3BA4                    atof@s 0125                    _whole 0130  
        __end_of_isspace 3AC0                    pclath 000FFA         __end_ofi2___flge 340A  
                  tablat 000FF5                    status 000FD8                    wtemp6 005F  
        __end_of_sprintf 0F1A            i2___flmul@grs 001D               _KeyRelease 39E2  
     __size_ofi2___flneg 002E       __size_ofi2___flmul 0350           __CFG_MCLRE$OFF 000000  
        __initialization 3A3E             __end_of_Send 3C3A             __end_of_atof 3B12  
           __end_of_main 36D8       __size_ofi2_lcd_lat 0016       __size_ofi2_lcd_dwr 002A  
     __size_ofi2_lcd_msg 0024         __end_of_KeyOther 2CCA                   ??_Send 0100  
                 ??_atof 0129                   ??_main 0129            __activetblptr 000002  
   __size_of__tdiv_to_l_ 0132              ?i2___xxtofl 0001         ___llmod@dividend 0001  
                 ?_scale 0028         ___awdiv@dividend 0007                   i2l6104 0D02  
                 i2l6152 0EF0                   i2l6056 0AFA                   i2l6048 0AAA  
                 i2l6076 0C0C                   i2l2968 3406                   u516_41 2F7E  
              ??_GetData 0106                   u518_41 2FAA         __end_of___xxtofl 2E1E  
                 _GetKey 3BF2                ??_TaraKey 0102           __CFG_XINST$OFF 000000  
       __end_of__powers_ 0835         __end_of_lcd_init 3A96        __end_of_UART_Init 3BC4  
                 ___flge 31C8                   ___lmul 38B4                ??___fladd 003D  
                 ___wmul 3B38                ??___fldiv 0108                ??___awdiv 000B  
              ??___flneg 0104           __CFG_STVREN$ON 000000                ??___awmod 0005  
              ??___flmul 0108                ??___flsub 0051                ??___fltol 0035  
              ??___lldiv 0009                ??___llmod 0009                   _fround 2434  
                 clear_0 3A44                   clear_1 3A50         ___awdiv@quotient 000D  
        ___awmod@divisor 0003          ___awmod@counter 0005            KeyRelease@key 0104  
              ??_lcd_cmd 0101                ??_lcd_lat 0100                ??_lcd_dwr 0101  
              ??_lcd_msg 0105                   _strtod 0F1A                ??_isdigit 0100  
      __end_ofi2___flneg 3A3E        __end_ofi2___flmul 1E42             __mediumconst 0000  
              ??_isspace 0100                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_sprintf 0059        __end_ofi2_lcd_lat 3C1E  
      __end_ofi2_lcd_dwr 3AEA        __end_ofi2_lcd_msg 3B82           i2___flmul@aexp 001C  
         i2___flmul@bexp 0021           i2___flmul@sign 001B           i2___flmul@temp 0026  
         i2___flmul@prod 0022               ___flge@ff1 0100               ___flge@ff2 0104  
           ___xxtofl@arg 010A             ___xxtofl@exp 0109             ___xxtofl@val 0100  
             __accesstop 0060  __end_of__initialization 3A5C          __CFG_PBADEN$OFF 000000  
             ___flneg@f1 0100          __CFG_FOSC$XT_XT 000000              ?_KeyRelease 0001  
          ___rparam_used 000001               ___fltol@f1 0031      __size_ofi2___xxtofl 0150  
         __pcstackCOMRAM 0001            __end_of_scale 17A0                ?i2___flge 0001  
             __div_to_l_ 30A0       __size_of_lcd_reset 000E          __div_to_l_@exp1 000E  
        __div_to_l_@cntr 000D                  ??_scale 002C          __div_to_l_@quot 0009  
        _s_operand_minus 009B               __pbssBANK0 0060               __pbssBANK1 012D  
              ?_KeyOther 0001                  ?_GetKey 0001            __div_to_l_@f1 0001  
          __div_to_l_@f2 0005                  ISR@arra 00C7                  ?___flge 0100  
                ?___lmul 0100                  ?___wmul 0001                  ?_fround 0028  
         ___lmul@product 0108               ??i2___flge 0009                  ?_strtod 0119  
    __size_of_KeyRelease 002E               _lcd_cmd_hf 3BC4                ?___xxtofl 0100  
             _bufferread 0079                ?_lcd_init 0001               ??_KeyOther 0100  
                _GetData 26BE          __CFG_VREGEN$OFF 000000          __size_of_GetKey 0016  
      __end_of__npowers_ 0869                  _TaraKey 2922                  __Hparam 0000  
             _scale$1289 002C                  __Lparam 0000        __end_of_lcd_reset 3C2C  
        __size_of___flge 0122                  ___fladd 1E42                  ___fldiv 217E  
                ___awdiv 36D8                  ___flneg 3982          __size_of___lmul 0058  
                ___awmod 37DE                  ___flmul 17A0                  ___flsub 390C  
                ___fltol 3524                  ___lldiv 375C          __size_of___wmul 0026  
                ___llmod 384E             __psmallconst 0800                  __pcinit 3A3E  
        __size_of_fround 028A                  __ramtop 0800                  __ptext0 3600  
                __ptext1 3C1E                  __ptext2 3A6A                  __ptext3 3BC4  
                __ptext4 3952                  __ptext5 3AEA                  __ptext6 0F1A  
                __ptext7 3A96                  __ptext8 3B82                  __ptext9 2CCA  
                _lcd_cmd 3952                  _lcd_lat 3BDC                  _lcd_dwr 39B2  
                _lcd_msg 3B12             __size_of_ISR 351C              ?__div_to_l_ 0001  
        __size_of_strtod 044E                  _dpowers 0869                  _isdigit 3B82  
           ??i2___xxtofl 0005               ??___xxtofl 0104         ___awmod@dividend 0001  
                _isspace 3A96                  _sprintf 0896                  main@val 0129  
             ??_lcd_init 0103           __pintcode_body 340A     end_of_initialization 3A5C  
          __Lmediumconst 0000                  int_func 340A           i2___xxtofl@arg 000B  
         i2___xxtofl@exp 000A           i2___xxtofl@val 0001                GetKey@key 0105  
        ___lldiv@divisor 0005          ___lldiv@counter 000D                _RCSTAbits 000FAB  
     __end_ofi2___xxtofl 2F6E                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE           __tdiv_to_l_@f1 0001           __tdiv_to_l_@f2 0005  
              _UART_Init 3BA4            ??__tdiv_to_l_ 0009               _sequential 005C  
                strtod@s 0119                _PORTBbits 000F81                _PORTDbits 000F83  
            ___fladd@grs 0048              ?_lcd_cmd_hf 0001            ___xxtofl@sign 0108  
              _TRISCbits 000F94              ___fldiv@grs 0113              ___fldiv@rem 010D  
              i2___flneg 3A10                i2___flmul 1AF2              ___flmul@grs 010E  
           ??_KeyRelease 0103                i2_lcd_lat 3C08                i2_lcd_dwr 3AC0  
              i2_lcd_msg 3B5E                _TXSTAbits 000FAC      __size_of__div_to_l_ 0128  
         __end_of_GetKey 3C08           __end_of___flge 32EA           __end_of___lmul 390C  
         __end_of___wmul 3B5E               ?_UART_Init 0001           __end_of_fround 26BE  
         __end_of_strtod 1368        __size_ofi2___flge 0120      start_initialization 3A3E  
     __end_of_KeyRelease 3A10              __end_of_ISR 3524      __end_of__tdiv_to_l_ 30A0  
             ?i2___flneg 0001               ?i2___flmul 000F               ?i2_lcd_lat 0001  
             ?i2_lcd_dwr 0001               ?i2_lcd_msg 0004          ___llmod@divisor 0005  
        ___llmod@counter 0009        __size_of_KeyOther 0190                 ??_GetKey 0105  
    __size_of_lcd_cmd_hf 0018                 ??___flge 0108                 ??___lmul 0108  
               ??___wmul 0005         __CFG_LPT1OSC$OFF 000000                 ??_fround 002C  
          sprintf@tmpval 00AC                 ??_strtod 011D                ___fladd@a 0039  
              ___fladd@b 0035               fround@prec 0034                ___fldiv@a 0104  
              ___fldiv@b 0100                ___flmul@a 0104                ___flmul@b 0100  
            __pbssCOMRAM 005B                ___flsub@a 004D                ___flsub@b 0049  
          __pcstackBANK0 009C            __pcstackBANK1 0100        __size_of___xxtofl 0154  
               ?_GetData 0001        __size_of_lcd_init 002C              sprintf@flag 00A2  
            sprintf@fval 00B0              sprintf@prec 00A4                 ?_TaraKey 0001  
              __pintcode 0008                 ?___fladd 0035                 ?___fldiv 0100  
               ?___awdiv 0007                 ?___flneg 0100                 ?___awmod 0001  
               ?___flmul 0100                 ?___flsub 0049                 ?___fltol 0031  
               ?___lldiv 0001                 ?___llmod 0001                __npowers_ 0835  
            ??_UART_Init 0100                _get_count 0099                _lcd_reset 3C1E  
            __tdiv_to_l_ 2F6E                 ?_lcd_cmd 0001                 ?_lcd_lat 0001  
               ?_lcd_dwr 0001                 ?_lcd_msg 0103             ??__div_to_l_ 0009  
            __smallconst 0800                 ?_isdigit 0001                 ?_isspace 0001  
            ??i2___flneg 0005                 ?_sprintf 0051              ??i2___flmul 0017  
         __size_of_scale 0438           ___wmul@product 0005              ??i2_lcd_lat 0001  
            ??i2_lcd_dwr 0002              ??i2_lcd_msg 0006                 _PIE1bits 000F9D  
               GetData@j 010D                 GetData@y 010B                 i2u401_40 20D0  
               i2u404_40 20E8                 i2u409_40 213E                 _PIR1bits 000F9E  
     __end_of__div_to_l_ 31C8                 i2u531_40 31B6                 i2u524_40 308E  
               i2u383_40 1F46                 i2u463_40 371E                 i2u384_40 1F56  
               i2u385_40 1F58                 i2u570_40 35D8                 i2u388_40 1F9A  
               i2u573_40 378E                 i2u469_40 3818                 i2u566_40 3560  
               i2u590_40 2F16                 i2u566_45 3556                 i2u576_40 3870  
               i2u840_40 0A70                 i2u841_40 0ABC                 i2u763_40 1B7E  
               i2u851_40 0D26                 i2u772_40 1DDA                 i2u764_40 1CF4  
               i2u852_40 0D36                 i2u844_40 0AFA                 i2u764_45 1CEA  
               i2u773_40 1DF8                 i2u848_40 0C44                 i2u769_40 1D84  
               i2u857_40 0F0C                 i2u887_47 3C10              strtod@flags 011F  
            strtod@expon 0120               ?_lcd_reset 0001                 i2___flge 32EA  
      ___wmul@multiplier 0001             ??_lcd_cmd_hf 0101        ___lmul@multiplier 0100  
               Send@data 0100                 _KeyOther 2B3A         __size_of_GetData 0264  
        _f_operand_minus 009A                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_TaraKey 0218       __end_of_lcd_cmd_hf 3BDC         __size_of___fladd 033C  
       __size_of___fldiv 02B6         __size_of___awdiv 0084         __size_of___flneg 0030  
       __size_of___awmod 0070         __size_of___flmul 0352         __size_of___flsub 0046  
       __size_of___fltol 00DC         __size_of___lldiv 0082         __size_of___llmod 0066  
            _fround$1287 0030              _fround$1288 002C              _isdigit$887 0101  
       __size_of_lcd_cmd 0030         __size_of_lcd_lat 0016         __size_of_lcd_dwr 0030  
       __size_of_lcd_msg 0026               sprintf@exp 00AA               sprintf@val 00A6  
               ___xxtofl 2CCA         __size_of_isdigit 0022         __size_of_isspace 002A  
               __ptext10 38B4                 __ptext11 3982                 __ptext20 3BDC  
               __ptext12 17A0                 __ptext21 3BF2                 __ptext13 31C8  
               __ptext30 2E1E                 __ptext22 39E2                 __ptext14 217E  
               __ptext31 3A10                 __ptext23 2922                 __ptext15 3BA4  
               __ptext40 3B38                 __ptext32 32EA                 __ptext24 2B3A  
               __ptext16 3C2C                 __ptext41 384E                 __ptext33 1368  
               __ptext17 26BE                 __ptext42 375C                 __ptext34 2434  
               __ptext26 3B5E                 __ptext18 3B12                 __ptext43 3524  
               __ptext35 1AF2                 __ptext27 3AC0                 __ptext19 39B2  
               __ptext44 390C                 __ptext36 37DE                 __ptext28 3C08  
               __ptext45 1E42                 __ptext37 36D8                 __ptext29 0896  
               __ptext38 2F6E                 __ptext39 30A0                 __powers_ 0801  
               _lcd_init 3A6A         __size_of_sprintf 0684            __size_of_Send 000E  
          __size_of_atof 0028            __size_of_main 00D8                 _operand1 0095  
               _operand2 0091               strtod@eexp 011E                 int$flags 005E  
               lcd_cmd@x 0102                 lcd_dwr@x 0102                 lcd_msg@c 0103  
            ??_lcd_reset 0103              _isspace$890 0101               _INTCONbits 000FF2  
               isdigit@c 0102                 scale@scl 0030                 intlevel2 0000  
              sprintf@ap 00A0         __tdiv_to_l_@exp1 0011                sprintf@sp 0051  
       __tdiv_to_l_@cntr 0010         __tdiv_to_l_@quot 000C          i2___xxtofl@sign 0009  
               isspace@c 0102         ___lldiv@dividend 0001                strtod@res 011B  
           ?__tdiv_to_l_ 0001                 sprintf@c 00B4                 sprintf@f 0053  
       ___lldiv@quotient 0009                 strtod@_u 0121            ___fladd@signs 0045  
           ___fladd@aexp 0046             ___fladd@bexp 0047  
